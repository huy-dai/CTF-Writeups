/
type=rizin rz-db project
version=5

/core
blocksize=0x800
offset=0x1136

/core/analysis

/core/analysis/blocks
0x0={"size":2,"jump":71,"fail":2,"ninstr":1,"parent_stackptr":0}
0x100c={"size":6,"jump":4122,"fail":4114,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":92,"parent_stackptr":92,"cmpval":1}
0x1012={"size":8,"jump":4136,"fail":4122,"traced":true,"ninstr":3,"op_pos":[3,6],"stackptr":92,"parent_stackptr":92}
0x101a={"size":6,"jump":4203,"fail":4128,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":92,"parent_stackptr":92,"cmpval":2}
0x1020={"size":8,"jump":4203,"fail":4136,"traced":true,"ninstr":3,"op_pos":[3,6],"stackptr":92,"parent_stackptr":92}
0x1028={"size":67,"jump":4203,"traced":true,"ninstr":17,"op_pos":[3,9,10,16,17,22,25,35,41,44,50,51,52,58,59,64],"stackptr":92,"parent_stackptr":92}
0x106b={"size":13,"jump":4221,"fail":4216,"traced":true,"ninstr":4,"op_pos":[1,4,11],"stackptr":92,"parent_stackptr":92}
0x1078={"size":5,"jump":4221,"ninstr":1,"stackptr":84,"parent_stackptr":92}
0x107d={"size":5,"traced":true,"ninstr":3,"op_pos":[3,4],"stackptr":84,"parent_stackptr":92}
0x1082={"size":326,"jump":4557,"fail":4552,"traced":true,"ninstr":98,"op_pos":[1,3,4,7,12,18,24,27,29,32,34,39,42,45,48,50,55,58,61,64,70,71,77,78,83,86,89,95,96,101,104,107,109,112,114,119,122,125,128,133,136,139,142,144,147,150,156,157,162,165,168,170,173,175,180,183,186,189,194,197,200,203,205,208,214,215,218,224,225,231,232,235,241,242,248,249,255,256,259,265,266,272,273,279,280,285,288,294,297,298,304,305,310,313,314,317,324],"stackptr":28,"parent_stackptr":0}
0x11c8={"size":5,"jump":4557,"ninstr":1,"stackptr":20,"parent_stackptr":28}
0x11cd={"size":5,"traced":true,"ninstr":3,"op_pos":[3,4],"stackptr":20,"parent_stackptr":28}
0x11d2={"size":374,"jump":4941,"fail":4936,"traced":true,"ninstr":106,"op_pos":[1,3,4,7,12,18,24,27,29,32,38,39,44,47,50,56,57,62,65,71,72,78,79,85,86,92,93,98,101,107,108,114,115,121,122,128,129,134,137,140,146,147,153,154,160,161,167,168,174,175,180,183,186,192,193,198,201,204,210,211,216,219,222,228,229,235,236,242,243,249,250,256,257,262,265,268,274,275,281,282,288,289,295,296,302,303,308,311,314,320,321,327,328,334,335,340,343,346,352,353,358,361,362,365,372],"stackptr":28,"parent_stackptr":0}
0x1348={"size":5,"jump":4941,"ninstr":1,"stackptr":20,"parent_stackptr":28}
0x134d={"size":5,"traced":true,"ninstr":3,"op_pos":[3,4],"stackptr":20,"parent_stackptr":28}
0x1352={"size":36,"jump":4982,"traced":true,"ninstr":10,"op_pos":[1,3,4,7,12,18,24,27,29],"stackptr":28,"parent_stackptr":0,"cmpval":2}
0x1376={"size":32,"jump":5052,"fail":5014,"traced":true,"ninstr":9,"op_pos":[3,9,10,15,18,23,26,30],"parent_stackptr":28}
0x1396={"size":6,"jump":5052,"fail":5020,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":28,"parent_stackptr":28,"cmpval":1}
0x139c={"size":32,"jump":5052,"traced":true,"ninstr":9,"op_pos":[3,9,10,16,17,23,24,29],"stackptr":28,"parent_stackptr":28,"cmpval":2}
0x13bc={"size":6,"jump":5064,"fail":5058,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":28,"parent_stackptr":28,"cmpval":2}
0x13c2={"size":6,"jump":4982,"fail":5064,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":28,"parent_stackptr":28,"cmpval":1}
0x13c8={"size":15,"jump":5084,"fail":5079,"traced":true,"ninstr":4,"op_pos":[3,6,13],"stackptr":28,"parent_stackptr":28}
0x13d7={"size":5,"jump":5084,"ninstr":1,"stackptr":20,"parent_stackptr":28}
0x13dc={"size":5,"traced":true,"ninstr":3,"op_pos":[3,4],"stackptr":20,"parent_stackptr":28}
0x13e1={"size":57,"jump":5219,"traced":true,"ninstr":17,"op_pos":[4,7,10,11,13,14,15,18,23,29,35,38,40,45,50,55],"stackptr":32,"parent_stackptr":0}
0x141a={"size":10,"jump":5163,"fail":5156,"traced":true,"ninstr":3,"op_pos":[5,8],"stackptr":32,"parent_stackptr":32,"cmpval":1}
0x1424={"size":5,"jump":5170,"fail":5161,"traced":true,"ninstr":2,"op_pos":[3],"stackptr":32,"parent_stackptr":32,"cmpval":2}
0x1429={"size":2,"jump":5187,"ninstr":1,"stackptr":32,"parent_stackptr":32}
0x142b={"size":7,"jump":5219,"ninstr":2,"op_pos":[5],"stackptr":32,"parent_stackptr":32}
0x1432={"size":17,"jump":5219,"traced":true,"ninstr":3,"op_pos":[10,15],"stackptr":32,"parent_stackptr":32}
0x1443={"size":32,"jump":5219,"traced":true,"ninstr":9,"op_pos":[3,9,10,16,17,23,24,29],"stackptr":32,"parent_stackptr":32}
0x1463={"size":10,"jump":5146,"fail":5229,"traced":true,"ninstr":3,"op_pos":[6,8],"stackptr":32,"parent_stackptr":32}
0x146d={"size":13,"jump":5247,"fail":5242,"traced":true,"ninstr":4,"op_pos":[1,4,11],"stackptr":32,"parent_stackptr":32}
0x147a={"size":5,"jump":5247,"ninstr":1,"stackptr":16,"parent_stackptr":32}
0x147f={"size":10,"traced":true,"ninstr":6,"op_pos":[3,4,5,6,9],"stackptr":16,"parent_stackptr":32}
0x1490={"size":48,"jump":5349,"fail":5312,"traced":true,"ninstr":15,"op_pos":[1,2,3,4,9,15,18,22,28,33,39,41,44,46],"stackptr":28,"parent_stackptr":0}
0x14c0={"size":8,"jump":5320,"traced":true,"ninstr":2,"op_pos":[2],"stackptr":28,"parent_stackptr":28}
0x14c8={"size":29,"jump":5320,"fail":5349,"traced":true,"ninstr":9,"op_pos":[3,4,8,12,19,22,25,27],"parent_stackptr":28}
0x14e5={"size":8,"traced":true,"ninstr":6,"op_pos":[3,4,5,6,7],"stackptr":-4,"parent_stackptr":28}
0x14f0={"size":2,"ninstr":1,"stackptr":-4,"parent_stackptr":0}
0x1500={"size":20,"traced":true,"ninstr":5,"op_pos":[1,6,12,15],"stackptr":12,"parent_stackptr":0}
0x1514={"size":20,"traced":true,"ninstr":7,"op_pos":[1,4,9,15,18,19],"stackptr":-4,"parent_stackptr":0}
0x2={"size":76,"traced":true,"ninstr":38,"op_pos":[1,2,4,6,8,10,12,14,16,18,20,22,23,24,26,28,30,32,34,36,38,40,42,44,46,51,53,56,58,60,62,64,66,68,70,72,74],"parent_stackptr":0}
0x47={"size":7,"ninstr":3,"op_pos":[2,4],"stackptr":4,"parent_stackptr":0}
0x618={"size":25,"jump":1590,"fail":1585,"traced":true,"ninstr":7,"op_pos":[1,4,9,15,21,23],"stackptr":12,"parent_stackptr":0}
0x631={"size":5,"jump":1590,"ninstr":1,"stackptr":-4,"parent_stackptr":12}
0x636={"size":5,"traced":true,"ninstr":3,"op_pos":[3,4],"stackptr":-4,"parent_stackptr":12}
0x650={"size":6,"ninstr":1,"parent_stackptr":0}
0x660={"size":6,"ninstr":1,"parent_stackptr":0}
0x670={"size":6,"ninstr":1,"parent_stackptr":0}
0x680={"size":6,"ninstr":1,"parent_stackptr":0}
0x690={"size":6,"ninstr":1,"parent_stackptr":0}
0x6a0={"size":6,"ninstr":1,"parent_stackptr":0}
0x6b0={"size":6,"ninstr":1,"parent_stackptr":0}
0x6c0={"size":6,"ninstr":1,"parent_stackptr":0}
0x6d0={"size":6,"ninstr":1,"parent_stackptr":0}
0x6e0={"size":6,"ninstr":1,"parent_stackptr":0}
0x6f0={"size":6,"ninstr":1,"parent_stackptr":0}
0x700={"size":6,"ninstr":1,"parent_stackptr":0}
0x710={"size":6,"ninstr":1,"parent_stackptr":0}
0x720={"size":6,"ninstr":1,"parent_stackptr":0}
0x730={"size":6,"ninstr":1,"parent_stackptr":0}
0x740={"size":6,"ninstr":1,"parent_stackptr":0}
0x750={"size":6,"ninstr":1,"parent_stackptr":0}
0x760={"size":6,"ninstr":1,"parent_stackptr":0}
0x770={"size":6,"ninstr":1,"parent_stackptr":0}
0x780={"size":6,"ninstr":1,"parent_stackptr":0}
0x788={"size":6,"ninstr":1,"parent_stackptr":0}
0x790={"size":49,"traced":true,"ninstr":17,"op_pos":[2,3,5,8,9,10,11,16,22,28,29,35,36,37,38,44],"stackptr":28,"parent_stackptr":0}
0x7c2={"size":4,"traced":true,"ninstr":2,"op_pos":[3],"stackptr":-4,"parent_stackptr":0}
0x7d0={"size":4,"traced":true,"ninstr":2,"op_pos":[3],"stackptr":-4,"parent_stackptr":0}
0x7e0={"size":27,"jump":2072,"fail":2043,"traced":true,"ninstr":6,"op_pos":[5,11,17,23,25],"parent_stackptr":0}
0x7fb={"size":10,"jump":2072,"fail":2053,"traced":true,"ninstr":3,"op_pos":[6,8],"parent_stackptr":0}
0x805={"size":14,"traced":true,"ninstr":8,"op_pos":[1,3,6,7,9,12,13],"stackptr":4,"parent_stackptr":0}
0x818={"size":2,"ninstr":1,"stackptr":-4,"parent_stackptr":0}
0x820={"size":46,"jump":2146,"fail":2126,"traced":true,"ninstr":15,"op_pos":[5,11,12,18,24,26,28,29,32,34,37,40,42,44],"stackptr":12,"parent_stackptr":0}
0x84e={"size":10,"jump":2146,"fail":2136,"traced":true,"ninstr":3,"op_pos":[6,8],"stackptr":12,"parent_stackptr":12}
0x858={"size":10,"jump":2146,"traced":true,"ninstr":5,"op_pos":[3,4,5,7],"stackptr":4,"parent_stackptr":12}
0x862={"size":5,"traced":true,"ninstr":3,"op_pos":[3,4],"stackptr":4,"parent_stackptr":12}
0x870={"size":27,"jump":2226,"fail":2187,"traced":true,"ninstr":8,"op_pos":[1,3,4,9,15,18,25],"stackptr":12,"parent_stackptr":0}
0x88b={"size":10,"jump":2214,"fail":2197,"traced":true,"ninstr":3,"op_pos":[6,8],"stackptr":12,"parent_stackptr":12}
0x895={"size":17,"jump":2214,"traced":true,"ninstr":4,"op_pos":[3,9,14],"stackptr":4,"parent_stackptr":12}
0x8a6={"size":12,"jump":2226,"traced":true,"ninstr":2,"op_pos":[5],"stackptr":4,"parent_stackptr":12}
0x8b2={"size":5,"traced":true,"ninstr":3,"op_pos":[3,4],"stackptr":4,"parent_stackptr":12}
0x8c0={"size":9,"jump":2080,"traced":true,"ninstr":4,"op_pos":[1,3,4],"parent_stackptr":0}
0x8c9={"size":4,"traced":true,"ninstr":2,"op_pos":[3],"stackptr":-4,"parent_stackptr":0}
0x8cd={"size":82,"jump":2340,"fail":2335,"traced":true,"ninstr":25,"op_pos":[1,3,4,7,12,18,24,27,29,36,39,41,44,45,47,52,55,58,61,62,67,70,73,80],"stackptr":60,"parent_stackptr":0}
0x91f={"size":5,"jump":2340,"ninstr":1,"stackptr":52,"parent_stackptr":60}
0x924={"size":5,"traced":true,"ninstr":3,"op_pos":[3,4],"stackptr":52,"parent_stackptr":60}
0x929={"size":144,"jump":2489,"traced":true,"ninstr":44,"op_pos":[1,3,4,7,12,18,24,27,29,35,38,44,47,53,56,62,65,71,74,77,79,84,87,90,91,96,99,104,106,111,113,115,117,119,122,124,126,128,131,133,135,137,141],"stackptr":44,"parent_stackptr":0}
0x9b9={"size":66,"jump":2489,"fail":2555,"traced":true,"ninstr":24,"op_pos":[5,7,12,14,16,18,20,23,25,27,29,32,34,36,38,42,45,48,51,54,59,62,64],"parent_stackptr":44}
0x9fb={"size":398,"jump":2958,"fail":2953,"traced":true,"ninstr":113,"op_pos":[3,9,10,15,18,21,27,28,31,37,38,43,46,49,55,56,59,65,66,71,74,77,83,84,87,93,94,99,102,105,111,112,115,121,122,127,130,133,139,140,146,147,152,155,158,164,165,171,172,177,180,183,189,190,196,197,202,205,208,214,215,221,222,227,230,233,239,240,246,247,252,255,258,264,265,268,274,275,280,283,286,292,293,296,302,303,308,311,314,320,321,324,330,331,336,339,342,348,349,352,358,359,364,367,370,376,377,382,385,386,389,396],"stackptr":44,"parent_stackptr":44}
0xb89={"size":5,"jump":2958,"ninstr":1,"stackptr":36,"parent_stackptr":44}
0xb8e={"size":5,"traced":true,"ninstr":3,"op_pos":[3,4],"stackptr":36,"parent_stackptr":44}
0xb93={"size":101,"jump":3069,"fail":3064,"traced":true,"ninstr":33,"op_pos":[1,3,4,7,12,18,24,27,29,35,37,39,41,43,44,49,52,58,60,62,64,66,67,72,75,78,80,85,88,89,92,99],"stackptr":28,"parent_stackptr":0}
0xbf8={"size":5,"jump":3069,"ninstr":1,"stackptr":20,"parent_stackptr":28}
0xbfd={"size":5,"traced":true,"ninstr":3,"op_pos":[3,4],"stackptr":20,"parent_stackptr":28}
0xc02={"size":36,"jump":3110,"traced":true,"ninstr":10,"op_pos":[1,3,4,7,12,18,24,27,29],"stackptr":28,"parent_stackptr":0,"cmpval":2}
0xc26={"size":32,"jump":3180,"fail":3142,"traced":true,"ninstr":9,"op_pos":[3,9,10,15,18,23,26,30],"parent_stackptr":28}
0xc46={"size":6,"jump":3180,"fail":3148,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":28,"parent_stackptr":28,"cmpval":1}
0xc4c={"size":32,"jump":3180,"traced":true,"ninstr":9,"op_pos":[3,9,10,16,17,23,24,29],"stackptr":28,"parent_stackptr":28,"cmpval":2}
0xc6c={"size":6,"jump":3192,"fail":3186,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":28,"parent_stackptr":28,"cmpval":2}
0xc72={"size":6,"jump":3110,"fail":3192,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":28,"parent_stackptr":28,"cmpval":1}
0xc78={"size":15,"jump":3212,"fail":3207,"traced":true,"ninstr":4,"op_pos":[3,6,13],"stackptr":28,"parent_stackptr":28}
0xc87={"size":5,"jump":3212,"ninstr":1,"stackptr":20,"parent_stackptr":28}
0xc8c={"size":5,"traced":true,"ninstr":3,"op_pos":[3,4],"stackptr":20,"parent_stackptr":28}
0xc91={"size":50,"jump":3267,"traced":true,"ninstr":12,"op_pos":[1,3,4,7,12,18,24,27,29,36,43],"stackptr":92,"parent_stackptr":0,"cmpval":2}
0xcc3={"size":32,"jump":3337,"fail":3299,"traced":true,"ninstr":9,"op_pos":[3,9,10,15,18,23,26,30],"parent_stackptr":92}
0xce3={"size":6,"jump":3337,"fail":3305,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":92,"parent_stackptr":92,"cmpval":1}
0xce9={"size":32,"jump":3337,"traced":true,"ninstr":9,"op_pos":[3,9,10,16,17,23,24,29],"stackptr":92,"parent_stackptr":92,"cmpval":2}
0xd09={"size":6,"jump":3349,"fail":3343,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":92,"parent_stackptr":92,"cmpval":2}
0xd0f={"size":6,"jump":3267,"fail":3349,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":92,"parent_stackptr":92,"cmpval":1}
0xd15={"size":39,"jump":3394,"fail":3388,"traced":true,"ninstr":12,"op_pos":[5,8,11,13,18,21,24,25,30,33,37],"stackptr":92,"parent_stackptr":92,"cmpval":1}
0xd3c={"size":6,"jump":3406,"fail":3394,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":92,"parent_stackptr":92,"cmpval":2}
0xd42={"size":6,"jump":3505,"fail":3400,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":92,"parent_stackptr":92,"cmpval":2}
0xd48={"size":6,"jump":3505,"fail":3406,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":92,"parent_stackptr":92,"cmpval":2}
0xd4e={"size":99,"jump":3713,"traced":true,"ninstr":36,"op_pos":[5,7,12,14,16,19,21,24,26,28,31,34,36,39,41,43,45,47,50,55,57,62,64,66,69,71,74,76,78,81,84,87,89,91,94],"stackptr":92,"parent_stackptr":92}
0xdb1={"size":6,"jump":3517,"fail":3511,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":92,"parent_stackptr":92,"cmpval":1}
0xdb7={"size":6,"jump":3529,"fail":3517,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":92,"parent_stackptr":92,"cmpval":1}
0xdbd={"size":6,"jump":3625,"fail":3523,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":92,"parent_stackptr":92,"cmpval":2}
0xdc3={"size":6,"jump":3625,"fail":3529,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":92,"parent_stackptr":92,"cmpval":1}
0xdc9={"size":96,"jump":3713,"traced":true,"ninstr":36,"op_pos":[5,7,12,14,16,19,21,24,26,28,31,34,37,39,41,44,49,51,56,58,60,63,65,68,70,72,75,78,80,83,85,87,89,91,94],"stackptr":92,"parent_stackptr":92}
0xe29={"size":88,"jump":3713,"traced":true,"ninstr":32,"op_pos":[5,7,12,14,16,19,21,24,26,28,31,34,37,39,41,44,49,51,56,58,60,63,65,68,70,72,75,78,81,83,85],"stackptr":92,"parent_stackptr":92}
0xe81={"size":18,"jump":3789,"traced":true,"ninstr":4,"op_pos":[6,9,16],"parent_stackptr":92}
0xe93={"size":41,"jump":3785,"fail":3772,"traced":true,"ninstr":15,"op_pos":[3,6,8,11,14,17,18,23,26,29,32,34,37,39],"stackptr":92,"parent_stackptr":92,"cmpval":46}
0xebc={"size":13,"jump":3785,"traced":true,"ninstr":4,"op_pos":[3,5,10],"stackptr":92,"parent_stackptr":92}
0xec9={"size":4,"jump":3789,"traced":true,"ninstr":1,"stackptr":92,"parent_stackptr":92}
0xecd={"size":23,"jump":3731,"fail":3812,"traced":true,"ninstr":8,"op_pos":[3,6,11,14,16,19,21],"stackptr":92,"parent_stackptr":92}
0xee4={"size":6,"jump":3826,"fail":3818,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":92,"parent_stackptr":92,"cmpval":1}
0xeea={"size":8,"jump":3848,"fail":3826,"traced":true,"ninstr":3,"op_pos":[3,6],"stackptr":92,"parent_stackptr":92}
0xef2={"size":10,"jump":4108,"fail":3836,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":92,"parent_stackptr":92,"cmpval":2}
0xefc={"size":12,"jump":4108,"fail":3848,"traced":true,"ninstr":3,"op_pos":[3,6],"stackptr":92,"parent_stackptr":92}
0xf08={"size":150,"jump":4033,"fail":3998,"traced":true,"ninstr":41,"op_pos":[3,9,10,16,17,22,25,31,34,40,46,49,55,56,57,63,64,69,72,75,81,82,88,89,94,97,100,105,110,113,116,119,125,126,132,133,138,141,144,148],"stackptr":92,"parent_stackptr":92}
0xf9e={"size":35,"traced":true,"ninstr":10,"op_pos":[3,9,10,16,17,22,25,28,30],"stackptr":108,"parent_stackptr":92}
0xfc1={"size":75,"jump":4203,"traced":true,"ninstr":23,"op_pos":[3,6,8,11,12,17,20,23,28,31,33,38,41,44,50,51,56,59,62,65,70,73],"stackptr":92,"parent_stackptr":92}

/core/analysis/callables
_Exit=func
__assert_fail=func
__bzero=func
__cxa_throw=func
__error=func
__libc_init=func
__libc_init_array=func
__libc_start_main=func
__maskrune=func
__stack_chk_fail=func
__tolower=func
__toupper=func
__uClibc_main=func
_exit=func
abort=func
abs=func
access=func
acos=func
acosf=func
acosh=func
acoshf=func
acoshl=func
acosl=func
aligned_alloc=func
arc4random=func
asctime=func
asin=func
asinf=func
asinh=func
asinhf=func
asinhl=func
asinl=func
at_quick_exit=func
atan=func
atan2=func
atan2f=func
atan2l=func
atanf=func
atanh=func
atanhf=func
atanhl=func
atanl=func
atexit=func
atof=func
atoi=func
atol=func
atoll=func
basename=func
bind=func
bindtextdomain=func
bsearch=func
btowc=func
bzero=func
calloc=func
cbrt=func
cbrtf=func
cbrtl=func
ceil=func
ceilf=func
ceill=func
chmod=func
clearerr=func
clock=func
close=func
compat_mode=func
connect=func
copysign=func
copysignf=func
copysignl=func
cos=func
cosf=func
cosh=func
coshf=func
coshl=func
cosl=func
ctime=func
difftime=func
div=func
entry.init0=func
entry0=func
erf=func
erfc=func
erfcf=func
erfcl=func
erff=func
erfl=func
err=func
errc=func
error=func
errx=func
exit=func
exp=func
exp2=func
exp2f=func
exp2l=func
expf=func
expl=func
expm1=func
expm1f=func
expm1l=func
fabs=func
fabsf=func
fabsl=func
fchmod=func
fclose=func
fdim=func
fdimf=func
fdiml=func
feclearexcept=func
fegetenv=func
fegetexceptflag=func
fegetround=func
feholdexcept=func
feof=func
feraiseexcept=func
ferror=func
fesetenv=func
fesetexceptflag=func
fesetround=func
fetestexcept=func
feupdateenv=func
fflush=func
fgetc=func
fgetpos=func
fgets=func
fgetwc=func
fgetws=func
fileno=func
floor=func
floorf=func
floorl=func
fma=func
fmaf=func
fmal=func
fmax=func
fmaxf=func
fmaxl=func
fmin=func
fminf=func
fminl=func
fmod=func
fmodf=func
fmodl=func
fopen=func
fpclassify=func
fprintf=func
fputc=func
fputs=func
fputwc=func
fputws=func
fread=func
free=func
freopen=func
frexp=func
frexpf=func
frexpl=func
fscanf=func
fseek=func
fsetpos=func
fstat=func
ftell=func
fts_children_INODE64=func
fts_close_INODE64=func
fts_open_INODE64=func
fts_read_INODE64=func
fts_set_INODE64=func
func._Exit.arg.0=int,status
func._Exit.args=0x1
func._Exit.noreturn=true
func._Exit.ret=void
func.__assert_fail.arg.0=const char *,function
func.__assert_fail.args=0x4
func.__assert_fail.noreturn=true
func.__assert_fail.ret=void
func.__bzero.arg.0=size_t,n
func.__bzero.args=0x2
func.__bzero.ret=void
func.__cxa_throw.arg.0=void *,dest
func.__cxa_throw.args=0x3
func.__cxa_throw.noreturn=true
func.__cxa_throw.ret=void
func.__error.arg.0=char *,format
func.__error.args=0x3
func.__error.ret=void
func.__libc_init.arg.0=char **,envp
func.__libc_init.args=0x3
func.__libc_init.noreturn=true
func.__libc_init.ret=void
func.__libc_init_array.args=0
func.__libc_init_array.ret=void
func.__libc_start_main.arg.0=void *,stack_end
func.__libc_start_main.args=0x7
func.__libc_start_main.noreturn=true
func.__libc_start_main.ret=int
func.__maskrune.arg.0=long,f
func.__maskrune.args=0x2
func.__maskrune.ret=int
func.__stack_chk_fail.args=0
func.__stack_chk_fail.noreturn=true
func.__stack_chk_fail.ret=void
func.__tolower.arg.0=int,c
func.__tolower.args=0x1
func.__tolower.ret=int
func.__toupper.arg.0=int,c
func.__toupper.args=0x1
func.__toupper.ret=int
func.__uClibc_main.arg.0=void *,stack_end
func.__uClibc_main.args=0x7
func.__uClibc_main.noreturn=true
func.__uClibc_main.ret=int
func._exit.arg.0=int,status
func._exit.args=0x1
func._exit.noreturn=true
func._exit.ret=void
func.abort.args=0
func.abort.noreturn=true
func.abort.ret=void
func.abs.arg.0=int,j
func.abs.args=0x1
func.abs.ret=int
func.access.arg.0=int,mode
func.access.args=0x2
func.access.ret=int
func.acos.arg.0=double,x
func.acos.args=0x1
func.acos.ret=double
func.acosf.arg.0=float,x
func.acosf.args=0x1
func.acosf.ret=float
func.acosh.arg.0=double,x
func.acosh.args=0x1
func.acosh.ret=double
func.acoshf.arg.0=float,x
func.acoshf.args=0x1
func.acoshf.ret=float
func.acoshl.arg.0=long double,x
func.acoshl.args=0x1
func.acoshl.ret=long double
func.acosl.arg.0=long double,x
func.acosl.args=0x1
func.acosl.ret=long double
func.aligned_alloc.arg.0=size_t,size
func.aligned_alloc.args=0x2
func.aligned_alloc.ret=void
func.arc4random.args=0
func.arc4random.ret=uint32_t
func.asctime.arg.0=struct tm *,timeptr
func.asctime.args=0x1
func.asctime.ret=char *
func.asin.arg.0=double,x
func.asin.args=0x1
func.asin.ret=double
func.asinf.arg.0=float,x
func.asinf.args=0x1
func.asinf.ret=float
func.asinh.arg.0=double,x
func.asinh.args=0x1
func.asinh.ret=double
func.asinhf.arg.0=float,x
func.asinhf.args=0x1
func.asinhf.ret=float
func.asinhl.arg.0=long double,x
func.asinhl.args=0x1
func.asinhl.ret=long double
func.asinl.arg.0=long double,x
func.asinl.args=0x1
func.asinl.ret=long double
func.at_quick_exit.args=0
func.at_quick_exit.ret=int
func.atan.arg.0=double,x
func.atan.args=0x1
func.atan.ret=double
func.atan2.arg.0=double,x
func.atan2.args=0x2
func.atan2.ret=double
func.atan2f.arg.0=float,x
func.atan2f.args=0x2
func.atan2f.ret=float
func.atan2l.arg.0=long double,x
func.atan2l.args=0x2
func.atan2l.ret=long double
func.atanf.arg.0=float,x
func.atanf.args=0x1
func.atanf.ret=float
func.atanh.arg.0=double,x
func.atanh.args=0x1
func.atanh.ret=double
func.atanhf.arg.0=float,x
func.atanhf.args=0x1
func.atanhf.ret=float
func.atanhl.arg.0=long double,x
func.atanhl.args=0x1
func.atanhl.ret=long double
func.atanl.arg.0=long double,x
func.atanl.args=0x1
func.atanl.ret=long double
func.atexit.arg.0=void *,function
func.atexit.args=0x1
func.atexit.ret=int
func.atof.arg.0=const char *,str
func.atof.args=0x1
func.atof.ret=double
func.atoi.arg.0=const char *,str
func.atoi.args=0x1
func.atoi.ret=int
func.atol.arg.0=const char *,str
func.atol.args=0x1
func.atol.ret=long
func.atoll.arg.0=const char *,str
func.atoll.args=0x1
func.atoll.ret=long long
func.basename.arg.0=char *,path
func.basename.args=0x1
func.basename.ret=char *
func.bind.arg.0=socklen_t,address_len
func.bind.args=0x3
func.bind.ret=int
func.bindtextdomain.arg.0=char *,dirname
func.bindtextdomain.args=0x2
func.bindtextdomain.ret=char *
func.bsearch.arg.0=void *,compar
func.bsearch.args=0x5
func.bsearch.ret=void *
func.btowc.arg.0=int,c
func.btowc.args=0x1
func.btowc.ret=wint_t
func.bzero.arg.0=size_t,n
func.bzero.args=0x2
func.bzero.ret=void
func.calloc.arg.0=size_t,size
func.calloc.args=0x2
func.calloc.ret=void *
func.cbrt.arg.0=double,x
func.cbrt.args=0x1
func.cbrt.ret=double
func.cbrtf.arg.0=float,x
func.cbrtf.args=0x1
func.cbrtf.ret=float
func.cbrtl.arg.0=long double,x
func.cbrtl.args=0x1
func.cbrtl.ret=long double
func.ceil.arg.0=double,x
func.ceil.args=0x1
func.ceil.ret=double
func.ceilf.arg.0=float,x
func.ceilf.args=0x1
func.ceilf.ret=float
func.ceill.arg.0=long double,x
func.ceill.args=0x1
func.ceill.ret=long double
func.chmod.arg.0=int,mode
func.chmod.args=0x2
func.chmod.ret=int
func.clearerr.arg.0=FILE *,stream
func.clearerr.args=0x1
func.clearerr.ret=void
func.clock.args=0
func.clock.ret=clock_t
func.close.arg.0=int,fildes
func.close.args=0x1
func.close.ret=int
func.compat_mode.arg.0=const char *,mode
func.compat_mode.args=0x2
func.compat_mode.ret=bool
func.connect.arg.0=size_t,addrlen
func.connect.args=0x3
func.connect.ret=ssize_t
func.copysign.arg.0=double,y
func.copysign.args=0x2
func.copysign.ret=double
func.copysignf.arg.0=float,y
func.copysignf.args=0x2
func.copysignf.ret=float
func.copysignl.arg.0=long double,y
func.copysignl.args=0x2
func.copysignl.ret=long double
func.cos.arg.0=double,x
func.cos.args=0x1
func.cos.ret=double
func.cosf.arg.0=float,x
func.cosf.args=0x1
func.cosf.ret=float
func.cosh.arg.0=double,x
func.cosh.args=0x1
func.cosh.ret=double
func.coshf.arg.0=float,x
func.coshf.args=0x1
func.coshf.ret=float
func.coshl.arg.0=long double,x
func.coshl.args=0x1
func.coshl.ret=long double
func.cosl.arg.0=long double,x
func.cosl.args=0x1
func.cosl.ret=long double
func.ctime.arg.0=time_t *,timer
func.ctime.args=0x1
func.ctime.ret=char *
func.difftime.arg.0=time_t,time0
func.difftime.args=0x2
func.difftime.ret=double
func.div.arg.0=int,denom
func.div.args=0x2
func.div.ret=div_t
func.entry.init0.args=0
func.entry0.args=0
func.erf.arg.0=double,x
func.erf.args=0x1
func.erf.ret=double
func.erfc.arg.0=double,x
func.erfc.args=0x1
func.erfc.ret=double
func.erfcf.arg.0=float,x
func.erfcf.args=0x1
func.erfcf.ret=float
func.erfcl.arg.0=long double,x
func.erfcl.args=0x1
func.erfcl.ret=long double
func.erff.arg.0=float,x
func.erff.args=0x1
func.erff.ret=float
func.erfl.arg.0=long double,x
func.erfl.args=0x1
func.erfl.ret=long double
func.err.arg.0=int,eval
func.err.args=0x1
func.err.noreturn=true
func.err.ret=void
func.errc.arg.0=int,eval
func.errc.args=0x1
func.errc.noreturn=true
func.errc.ret=void
func.error.arg.0=char *,format
func.error.args=0x3
func.error.ret=void
func.errx.arg.0=int,eval
func.errx.args=0x1
func.errx.noreturn=true
func.errx.ret=void
func.exit.arg.0=int,status
func.exit.args=0x1
func.exit.noreturn=true
func.exit.ret=void
func.exp.arg.0=double,x
func.exp.args=0x1
func.exp.ret=double
func.exp2.arg.0=double,x
func.exp2.args=0x1
func.exp2.ret=double
func.exp2f.arg.0=float,x
func.exp2f.args=0x1
func.exp2f.ret=float
func.exp2l.arg.0=long double,x
func.exp2l.args=0x1
func.exp2l.ret=long double
func.expf.arg.0=float,x
func.expf.args=0x1
func.expf.ret=float
func.expl.arg.0=long double,x
func.expl.args=0x1
func.expl.ret=long double
func.expm1.arg.0=double,x
func.expm1.args=0x1
func.expm1.ret=double
func.expm1f.arg.0=float,x
func.expm1f.args=0x1
func.expm1f.ret=float
func.expm1l.arg.0=long double,x
func.expm1l.args=0x1
func.expm1l.ret=long double
func.fabs.arg.0=double,x
func.fabs.args=0x1
func.fabs.ret=double
func.fabsf.arg.0=float,x
func.fabsf.args=0x1
func.fabsf.ret=float
func.fabsl.arg.0=long double,x
func.fabsl.args=0x1
func.fabsl.ret=long double
func.fchmod.arg.0=int,mode
func.fchmod.args=0x2
func.fchmod.ret=int
func.fclose.arg.0=FILE *,stream
func.fclose.args=0x1
func.fclose.ret=int
func.fdim.arg.0=double,y
func.fdim.args=0x2
func.fdim.ret=double
func.fdimf.arg.0=float,y
func.fdimf.args=0x2
func.fdimf.ret=float
func.fdiml.arg.0=long double,y
func.fdiml.args=0x2
func.fdiml.ret=long double
func.feclearexcept.arg.0=int,excepts
func.feclearexcept.args=0x1
func.feclearexcept.ret=int
func.fegetenv.arg.0=fenv_t *,envp
func.fegetenv.args=0x1
func.fegetenv.ret=int
func.fegetexceptflag.arg.0=int,excepts
func.fegetexceptflag.args=0x2
func.fegetexceptflag.ret=int
func.fegetround.args=0
func.fegetround.ret=int
func.feholdexcept.arg.0=fenv_t *,envp
func.feholdexcept.args=0x1
func.feholdexcept.ret=int
func.feof.arg.0=FILE *,stream
func.feof.args=0x1
func.feof.ret=int
func.feraiseexcept.arg.0=int,excepts
func.feraiseexcept.args=0x1
func.feraiseexcept.ret=int
func.ferror.arg.0=FILE *,stream
func.ferror.args=0x1
func.ferror.ret=int
func.fesetenv.arg.0=fenv_t *,arg
func.fesetenv.args=0x1
func.fesetenv.ret=int
func.fesetexceptflag.arg.0=int,excepts
func.fesetexceptflag.args=0x2
func.fesetexceptflag.ret=int
func.fesetround.arg.0=int,round
func.fesetround.args=0x1
func.fesetround.ret=int
func.fetestexcept.arg.0=int,excepts
func.fetestexcept.args=0x1
func.fetestexcept.ret=int
func.feupdateenv.arg.0=fenv_t *,arg
func.feupdateenv.args=0x1
func.feupdateenv.ret=int
func.fflush.arg.0=FILE *,stream
func.fflush.args=0x1
func.fflush.ret=int
func.fgetc.arg.0=FILE *,stream
func.fgetc.args=0x1
func.fgetc.ret=int
func.fgetpos.arg.0=fpos_t *,pos
func.fgetpos.args=0x2
func.fgetpos.ret=int
func.fgets.arg.0=FILE *,stream
func.fgets.args=0x3
func.fgets.ret=char *
func.fgetwc.arg.0=FILE *,stream
func.fgetwc.args=0x1
func.fgetwc.ret=wint_t
func.fgetws.arg.0=FILE *,stream
func.fgetws.args=0x3
func.fgetws.ret=wchar_t *
func.fileno.arg.0=FILE *,stream
func.fileno.args=0x1
func.fileno.ret=int
func.floor.arg.0=double,x
func.floor.args=0x1
func.floor.ret=double
func.floorf.arg.0=float,x
func.floorf.args=0x1
func.floorf.ret=float
func.floorl.arg.0=long double,x
func.floorl.args=0x1
func.floorl.ret=long double
func.fma.arg.0=double,z
func.fma.args=0x3
func.fma.ret=double
func.fmaf.arg.0=float,z
func.fmaf.args=0x3
func.fmaf.ret=float
func.fmal.arg.0=long double,z
func.fmal.args=0x3
func.fmal.ret=long double
func.fmax.arg.0=double,y
func.fmax.args=0x2
func.fmax.ret=double
func.fmaxf.arg.0=float,y
func.fmaxf.args=0x2
func.fmaxf.ret=float
func.fmaxl.arg.0=long double,y
func.fmaxl.args=0x2
func.fmaxl.ret=long double
func.fmin.arg.0=double,y
func.fmin.args=0x2
func.fmin.ret=double
func.fminf.arg.0=float,y
func.fminf.args=0x2
func.fminf.ret=float
func.fminl.arg.0=long double,y
func.fminl.args=0x2
func.fminl.ret=long double
func.fmod.arg.0=double,y
func.fmod.args=0x2
func.fmod.ret=double
func.fmodf.arg.0=float,y
func.fmodf.args=0x2
func.fmodf.ret=float
func.fmodl.arg.0=long double,y
func.fmodl.args=0x2
func.fmodl.ret=long double
func.fopen.arg.0=const char *,mode
func.fopen.args=0x2
func.fopen.ret=FILE *
func.fpclassify.arg.0=double,x
func.fpclassify.args=0x1
func.fpclassify.ret=int
func.fprintf.arg.0=void *,va_args
func.fprintf.args=0x3
func.fprintf.ret=int
func.fputc.arg.0=FILE *,stream
func.fputc.args=0x2
func.fputc.ret=int
func.fputs.arg.0=FILE *,stream
func.fputs.args=0x2
func.fputs.ret=int
func.fputwc.arg.0=FILE *,stream
func.fputwc.args=0x2
func.fputwc.ret=wint_t
func.fputws.arg.0=FILE *,stream
func.fputws.args=0x2
func.fputws.ret=int
func.fread.arg.0=FILE *,stream
func.fread.args=0x4
func.fread.ret=size_t
func.free.arg.0=void *,ptr
func.free.args=0x1
func.free.ret=void
func.freopen.arg.0=FILE *,stream
func.freopen.args=0x3
func.freopen.ret=FILE *
func.frexp.arg.0=int *,exp
func.frexp.args=0x2
func.frexp.ret=double
func.frexpf.arg.0=int *,exp
func.frexpf.args=0x2
func.frexpf.ret=float
func.frexpl.arg.0=int *,exp
func.frexpl.args=0x2
func.frexpl.ret=long double
func.fscanf.arg.0=void *,va_args
func.fscanf.args=0x3
func.fscanf.ret=int
func.fseek.arg.0=int,whence
func.fseek.args=0x3
func.fseek.ret=int
func.fsetpos.arg.0=fpos_t *,pos
func.fsetpos.args=0x2
func.fsetpos.ret=int
func.fstat.arg.0=void *,buf
func.fstat.args=0x2
func.fstat.ret=int
func.ftell.arg.0=FILE *,stream
func.ftell.args=0x1
func.ftell.ret=long
func.fts_children_INODE64.arg.0=int,opotions
func.fts_children_INODE64.args=0x2
func.fts_children_INODE64.ret=void *
func.fts_close_INODE64.arg.0=void *,ftsp
func.fts_close_INODE64.args=0x1
func.fts_close_INODE64.ret=int
func.fts_open_INODE64.arg.0=void *,ftsen_INODE64t
func.fts_open_INODE64.args=0x4
func.fts_open_INODE64.ret=void *
func.fts_read_INODE64.arg.0=void *,ftsp
func.fts_read_INODE64.args=0x1
func.fts_read_INODE64.ret=void *
func.fts_set_INODE64.arg.0=int,options
func.fts_set_INODE64.args=0x3
func.fts_set_INODE64.ret=int
func.fwide.arg.0=int,mode
func.fwide.args=0x2
func.fwide.ret=int
func.fwprintf.arg.0=wchar_t *,format
func.fwprintf.args=0x2
func.fwprintf.ret=int
func.fwrite.arg.0=FILE *,stream
func.fwrite.args=0x4
func.fwrite.ret=size_t
func.fwscanf.arg.0=wchar_t *,format
func.fwscanf.args=0x2
func.fwscanf.ret=int
func.getc.arg.0=FILE *,stream
func.getc.args=0x1
func.getc.ret=int
func.getchar.args=0
func.getchar.ret=int
func.getenv.arg.0=const char *,name
func.getenv.args=0x1
func.getenv.ret=char *
func.geteuid.args=0
func.geteuid.ret=uid_t
func.getopt.arg.0=const char *,optstring
func.getopt.args=0x3
func.getopt.ret=int
func.getpid.args=0
func.getpid.ret=int
func.getprogname.args=0
func.getprogname.ret=const char *
func.gets.arg.0=char *,s
func.gets.args=0x1
func.gets.ret=char *
func.getsockname.arg.0=socklen_t *,addrlen
func.getsockname.args=0x3
func.getsockname.ret=int
func.getsockopt.arg.0=socklen_t *,optlen
func.getsockopt.args=0x5
func.getsockopt.ret=int
func.getuid.args=0
func.getuid.ret=uid_t
func.getwc.arg.0=FILE *,stream
func.getwc.args=0x1
func.getwc.ret=wint_t
func.getwchar.args=0
func.getwchar.ret=wint_t
func.gmtime.arg.0=time_t *,timer
func.gmtime.args=0x1
func.gmtime.ret=struct tm *
func.group_from_gid.arg.0=int,nogroup
func.group_from_gid.args=0x2
func.group_from_gid.ret=char *
func.humanize_number.arg.0=char *,buf
func.humanize_number.args=0x1
func.humanize_number.ret=int
func.hypot.arg.0=double,y
func.hypot.args=0x2
func.hypot.ret=double
func.hypotf.arg.0=float,y
func.hypotf.args=0x2
func.hypotf.ret=float
func.hypotl.arg.0=long double,y
func.hypotl.args=0x2
func.hypotl.ret=long double
func.ilogb.arg.0=double,x
func.ilogb.args=0x1
func.ilogb.ret=int
func.ilogbf.arg.0=float,x
func.ilogbf.args=0x1
func.ilogbf.ret=int
func.ilogbl.arg.0=long double,x
func.ilogbl.args=0x1
func.ilogbl.ret=int
func.imaxabs.arg.0=intmax_t,j
func.imaxabs.args=0x1
func.imaxabs.ret=intmax_t
func.imaxdiv.arg.0=intmax_t,denom
func.imaxdiv.args=0x2
func.imaxdiv.ret=imaxdiv_t
func.inet_aton.arg.0=void *,pin
func.inet_aton.args=0x2
func.inet_aton.ret=int
func.inet_ntoa.arg.0=void *,in
func.inet_ntoa.args=0x1
func.inet_ntoa.ret=char *
func.initstate.arg.0=size_t,size
func.initstate.args=0x3
func.initstate.ret=char *
func.ioctl.arg.0=unsigned long,request
func.ioctl.args=0x2
func.ioctl.ret=int
func.isalnum.arg.0=int,c
func.isalnum.args=0x1
func.isalnum.ret=int
func.isalpha.arg.0=int,c
func.isalpha.args=0x1
func.isalpha.ret=int
func.isatty.arg.0=int,fd
func.isatty.args=0x1
func.isatty.ret=int
func.isblank.arg.0=int,c
func.isblank.args=0x1
func.isblank.ret=int
func.iscntrl.arg.0=int,c
func.iscntrl.args=0x1
func.iscntrl.ret=int
func.isdigit.arg.0=int,c
func.isdigit.args=0x1
func.isdigit.ret=int
func.isfinite.arg.0=double,x
func.isfinite.args=0x1
func.isfinite.ret=bool
func.isgraph.arg.0=int,c
func.isgraph.args=0x1
func.isgraph.ret=int
func.isgreater.arg.0=double,y
func.isgreater.args=0x2
func.isgreater.ret=bool
func.isgreaterequal.arg.0=double,y
func.isgreaterequal.args=0x2
func.isgreaterequal.ret=bool
func.isinf.arg.0=double,x
func.isinf.args=0x1
func.isinf.ret=bool
func.isless.arg.0=double,y
func.isless.args=0x2
func.isless.ret=bool
func.islessequal.arg.0=double,y
func.islessequal.args=0x2
func.islessequal.ret=bool
func.islessgreater.arg.0=double,y
func.islessgreater.args=0x2
func.islessgreater.ret=bool
func.islower.arg.0=int,c
func.islower.args=0x1
func.islower.ret=int
func.isnan.arg.0=double,x
func.isnan.args=0x1
func.isnan.ret=bool
func.isnormal.arg.0=double,x
func.isnormal.args=0x1
func.isnormal.ret=bool
func.isprint.arg.0=int,c
func.isprint.args=0x1
func.isprint.ret=int
func.ispunct.arg.0=int,c
func.ispunct.args=0x1
func.ispunct.ret=int
func.isspace.arg.0=int,c
func.isspace.args=0x1
func.isspace.ret=int
func.isunordered.arg.0=double,y
func.isunordered.args=0x2
func.isunordered.ret=bool
func.isupper.arg.0=int,c
func.isupper.args=0x1
func.isupper.ret=int
func.iswalnum.arg.0=wint_t,wc
func.iswalnum.args=0x1
func.iswalnum.ret=int
func.iswalpha.arg.0=wint_t,wc
func.iswalpha.args=0x1
func.iswalpha.ret=int
func.iswblank.arg.0=wint_t,wc
func.iswblank.args=0x1
func.iswblank.ret=int
func.iswcntrl.arg.0=wint_t,wc
func.iswcntrl.args=0x1
func.iswcntrl.ret=int
func.iswctype.arg.0=wctype_t,desc
func.iswctype.args=0x2
func.iswctype.ret=int
func.iswdigit.arg.0=wint_t,wc
func.iswdigit.args=0x1
func.iswdigit.ret=int
func.iswgraph.arg.0=wint_t,wc
func.iswgraph.args=0x1
func.iswgraph.ret=int
func.iswlower.arg.0=wint_t,wc
func.iswlower.args=0x1
func.iswlower.ret=int
func.iswprint.arg.0=wint_t,wc
func.iswprint.args=0x1
func.iswprint.ret=int
func.iswpunct.arg.0=wint_t,wc
func.iswpunct.args=0x1
func.iswpunct.ret=int
func.iswspace.arg.0=wint_t,wc
func.iswspace.args=0x1
func.iswspace.ret=int
func.iswupper.arg.0=wint_t,wc
func.iswupper.args=0x1
func.iswupper.ret=int
func.iswxdigit.arg.0=wint_t,wc
func.iswxdigit.args=0x1
func.iswxdigit.ret=int
func.isxdigit.arg.0=int,c
func.isxdigit.args=0x1
func.isxdigit.ret=int
func.kill.arg.0=int,sig
func.kill.args=0x2
func.kill.ret=int
func.labs.arg.0=long,j
func.labs.args=0x1
func.labs.ret=long
func.ldexp.arg.0=int,exp
func.ldexp.args=0x2
func.ldexp.ret=double
func.ldexpf.arg.0=int,exp
func.ldexpf.args=0x2
func.ldexpf.ret=float
func.ldexpl.arg.0=int,exp
func.ldexpl.args=0x2
func.ldexpl.ret=long double
func.ldiv.arg.0=long,denom
func.ldiv.args=0x2
func.ldiv.ret=ldiv_t
func.lgamma.arg.0=double,x
func.lgamma.args=0x1
func.lgamma.ret=double
func.lgammaf.arg.0=float,x
func.lgammaf.args=0x1
func.lgammaf.ret=float
func.lgammal.arg.0=long double,x
func.lgammal.args=0x1
func.lgammal.ret=long double
func.llabs.arg.0=long long,j
func.llabs.args=0x1
func.llabs.ret=long long
func.lldiv.arg.0=long long,denom
func.lldiv.args=0x2
func.lldiv.ret=lldiv_t
func.llrint.arg.0=double,x
func.llrint.args=0x1
func.llrint.ret=long long
func.llrintf.arg.0=float,x
func.llrintf.args=0x1
func.llrintf.ret=long long
func.llrintl.arg.0=long double,x
func.llrintl.args=0x1
func.llrintl.ret=long long
func.llround.arg.0=double,x
func.llround.args=0x1
func.llround.ret=long long
func.llroundf.arg.0=float,x
func.llroundf.args=0x1
func.llroundf.ret=long long
func.llroundl.arg.0=long double,x
func.llroundl.args=0x1
func.llroundl.ret=long long
func.localeconv.args=0
func.localeconv.ret=struct lconv *
func.localtime.arg.0=time_t *,timer
func.localtime.args=0x1
func.localtime.ret=struct tm *
func.log.arg.0=double,x
func.log.args=0x1
func.log.ret=double
func.log10.arg.0=double,x
func.log10.args=0x1
func.log10.ret=double
func.log10f.arg.0=float,x
func.log10f.args=0x1
func.log10f.ret=float
func.log10l.arg.0=long double,x
func.log10l.args=0x1
func.log10l.ret=long double
func.log1p.arg.0=double,x
func.log1p.args=0x1
func.log1p.ret=double
func.log1pf.arg.0=float,x
func.log1pf.args=0x1
func.log1pf.ret=float
func.log1pl.arg.0=long double,x
func.log1pl.args=0x1
func.log1pl.ret=long double
func.log2.arg.0=double,x
func.log2.args=0x1
func.log2.ret=double
func.log2f.arg.0=float,x
func.log2f.args=0x1
func.log2f.ret=float
func.log2l.arg.0=long double,x
func.log2l.args=0x1
func.log2l.ret=long double
func.logb.arg.0=double,x
func.logb.args=0x1
func.logb.ret=double
func.logbf.arg.0=float,x
func.logbf.args=0x1
func.logbf.ret=float
func.logbl.arg.0=long double,x
func.logbl.args=0x1
func.logbl.ret=long double
func.logf.arg.0=float,x
func.logf.args=0x1
func.logf.ret=float
func.logl.arg.0=long double,x
func.logl.args=0x1
func.logl.ret=long double
func.longjmp.arg.0=int,val
func.longjmp.args=0x2
func.longjmp.ret=void
func.lrint.arg.0=double,x
func.lrint.args=0x1
func.lrint.ret=long
func.lrintf.arg.0=float,x
func.lrintf.args=0x1
func.lrintf.ret=long
func.lrintl.arg.0=long double,x
func.lrintl.args=0x1
func.lrintl.ret=long
func.lround.arg.0=double,x
func.lround.args=0x1
func.lround.ret=long
func.lroundf.arg.0=float,x
func.lroundf.args=0x1
func.lroundf.ret=long
func.lroundl.arg.0=long double,x
func.lroundl.args=0x1
func.lroundl.ret=long
func.lstat.arg.0=void *,buf
func.lstat.args=0x2
func.lstat.ret=void
func.main.arg.0=char **,envp
func.main.args=0x3
func.main.ret=int
func.malloc.arg.0=size_t,size
func.malloc.args=0x1
func.malloc.ret=void *
func.maskrune.arg.0=unsigned long,f
func.maskrune.args=0x2
func.maskrune.ret=int
func.mblen.arg.0=size_t,n
func.mblen.args=0x2
func.mblen.ret=int
func.mbrlen.arg.0=mbstate_t *,ps
func.mbrlen.args=0x3
func.mbrlen.ret=size_t
func.mbrtowc.arg.0=mbstate_t *,ps
func.mbrtowc.args=0x4
func.mbrtowc.ret=size_t
func.mbsinit.arg.0=mbstate_t *,ps
func.mbsinit.args=0x1
func.mbsinit.ret=int
func.mbsrtowcs.arg.0=mbstate_t *,ps
func.mbsrtowcs.args=0x4
func.mbsrtowcs.ret=size_t
func.mbstowcs.arg.0=size_t,n
func.mbstowcs.args=0x3
func.mbstowcs.ret=size_t
func.mbtowc.arg.0=size_t,n
func.mbtowc.args=0x3
func.mbtowc.ret=int
func.memchr.arg.0=size_t,n
func.memchr.args=0x3
func.memchr.ret=void *
func.memcmp.arg.0=size_t,n
func.memcmp.args=0x3
func.memcmp.ret=int
func.memcpy.arg.0=size_t,n
func.memcpy.args=0x3
func.memcpy.ret=void *
func.memmem.arg.0=int,little_len
func.memmem.args=0x4
func.memmem.ret=void *
func.memmove.arg.0=size_t,n
func.memmove.args=0x3
func.memmove.ret=void *
func.memset.arg.0=size_t,n
func.memset.args=0x3
func.memset.ret=void *
func.mkstemp.arg.0=char *,template
func.mkstemp.args=0x1
func.mkstemp.ret=int
func.mktemp.arg.0=char *,template
func.mktemp.args=0x1
func.mktemp.ret=char *
func.mktime.arg.0=struct tm *,timeptr
func.mktime.args=0x1
func.mktime.ret=time_t
func.mmap.arg.0=size_t,offset
func.mmap.args=0x6
func.mmap.ret=void *
func.modf.arg.0=double *,iptr
func.modf.args=0x2
func.modf.ret=double
func.modff.arg.0=float *,iptr
func.modff.args=0x2
func.modff.ret=float
func.modfl.arg.0=long double *,iptr
func.modfl.args=0x2
func.modfl.ret=long double
func.munmap.arg.0=size_t,length
func.munmap.args=0x2
func.munmap.ret=int
func.nan.arg.0=const char *,str
func.nan.args=0x1
func.nan.ret=double
func.nanf.arg.0=const char *,str
func.nanf.args=0x1
func.nanf.ret=float
func.nanl.arg.0=const char *,str
func.nanl.args=0x1
func.nanl.ret=long double
func.nanosleep.arg.0=struct timespec *,rem
func.nanosleep.args=0x2
func.nanosleep.ret=int
func.nearbyint.arg.0=double,x
func.nearbyint.args=0x1
func.nearbyint.ret=double
func.nearbyintf.arg.0=float,x
func.nearbyintf.args=0x1
func.nearbyintf.ret=float
func.nearbyintl.arg.0=long double,x
func.nearbyintl.args=0x1
func.nearbyintl.ret=long double
func.nextafter.arg.0=double,y
func.nextafter.args=0x2
func.nextafter.ret=double
func.nextafterf.arg.0=float,y
func.nextafterf.args=0x2
func.nextafterf.ret=float
func.nextafterl.arg.0=long double,y
func.nextafterl.args=0x2
func.nextafterl.ret=long double
func.nexttoward.arg.0=long double,y
func.nexttoward.args=0x2
func.nexttoward.ret=double
func.nexttowardf.arg.0=long double,y
func.nexttowardf.args=0x2
func.nexttowardf.ret=float
func.nexttowardl.arg.0=long double,y
func.nexttowardl.args=0x2
func.nexttowardl.ret=long double
func.nl_langinfo.arg.0=nl_item,item
func.nl_langinfo.args=0x1
func.nl_langinfo.ret=char *
func.nl_langinfo_l.arg.0=locale_t,locale
func.nl_langinfo_l.args=0x2
func.nl_langinfo_l.ret=char *
func.objc_enumerationMutation.arg.0=void *,instance
func.objc_enumerationMutation.args=0x1
func.objc_enumerationMutation.ret=void
func.objc_msgSend.arg.0=char *,selector
func.objc_msgSend.args=0x2
func.objc_msgSend.ret=void *
func.objc_msgSendSuper2.arg.0=char *,selector
func.objc_msgSendSuper2.args=0x2
func.objc_msgSendSuper2.ret=void *
func.objc_release.arg.0=void *,instance
func.objc_release.args=0x1
func.objc_release.ret=void
func.objc_retain.arg.0=void *,instance
func.objc_retain.args=0x1
func.objc_retain.ret=void
func.objc_retainAutoreleasedReturnValue.arg.0=void *,instance
func.objc_retainAutoreleasedReturnValue.args=0x1
func.objc_retainAutoreleasedReturnValue.ret=void
func.objc_storeStrong.arg.0=int,type
func.objc_storeStrong.args=0x2
func.objc_storeStrong.ret=void *
func.open.arg.0=int,oflag
func.open.args=0x2
func.open.ret=int
func.openat.arg.0=int,oflag
func.openat.args=0x3
func.openat.ret=int
func.pclose.arg.0=FILE *,stream
func.pclose.args=0x1
func.pclose.ret=int
func.perror.arg.0=const char *,s
func.perror.args=0x1
func.perror.ret=void
func.popen.arg.0=const char *,mode
func.popen.args=0x2
func.popen.ret=FILE *
func.pow.arg.0=double,y
func.pow.args=0x2
func.pow.ret=double
func.powf.arg.0=float,y
func.powf.args=0x2
func.powf.ret=float
func.powl.arg.0=long double,y
func.powl.args=0x2
func.powl.ret=long double
func.prctl.arg.0=unsigned long,v5
func.prctl.args=0x5
func.prctl.ret=int
func.printf.arg.0=const char *,format
func.printf.args=0x1
func.printf.ret=int
func.ptrace.arg.0=void *,data
func.ptrace.args=0x4
func.ptrace.ret=long
func.putc.arg.0=FILE *,stream
func.putc.args=0x2
func.putc.ret=int
func.putchar.arg.0=int,c
func.putchar.args=0x1
func.putchar.ret=int
func.puts.arg.0=const char *,s
func.puts.args=0x1
func.puts.ret=int
func.pututxline.arg.0=void *,utx
func.pututxline.args=0x1
func.pututxline.ret=void *
func.putwc.arg.0=FILE *,stream
func.putwc.args=0x2
func.putwc.ret=wint_t
func.putwchar.arg.0=wchar_t,c
func.putwchar.args=0x1
func.putwchar.ret=wint_t
func.qsort.arg.0=void *,compar
func.qsort.args=0x4
func.qsort.ret=void
func.quick_exit.arg.0=int,status
func.quick_exit.args=0x1
func.quick_exit.ret=void
func.raise.arg.0=int,sig
func.raise.args=0x1
func.raise.ret=int
func.rand.args=0
func.rand.ret=int
func.random.args=0
func.random.ret=uint32_t
func.read.arg.0=size_t,nbyte
func.read.args=0x3
func.read.ret=ssize_t
func.realloc.arg.0=size_t,size
func.realloc.args=0x2
func.realloc.ret=void *
func.reallocf.arg.0=size_t,size
func.reallocf.args=0x2
func.reallocf.ret=void *
func.recv.arg.0=int,flags
func.recv.args=0x4
func.recv.ret=ssize_t
func.remainder.arg.0=double,y
func.remainder.args=0x2
func.remainder.ret=double
func.remainderf.arg.0=float,y
func.remainderf.args=0x2
func.remainderf.ret=float
func.remainderl.arg.0=long double,y
func.remainderl.args=0x2
func.remainderl.ret=long double
func.remove.arg.0=const char *,filename
func.remove.args=0x1
func.remove.ret=int
func.remquo.arg.0=int *,pquo
func.remquo.args=0x3
func.remquo.ret=double
func.remquof.arg.0=int *,pquo
func.remquof.args=0x3
func.remquof.ret=float
func.remquol.arg.0=int *,pquo
func.remquol.args=0x3
func.remquol.ret=long double
func.rename.arg.0=const char *,newpath
func.rename.args=0x2
func.rename.ret=int
func.rewind.arg.0=FILE *,stream
func.rewind.args=0x1
func.rewind.ret=void
func.rint.arg.0=double,x
func.rint.args=0x1
func.rint.ret=double
func.rintf.arg.0=float,x
func.rintf.args=0x1
func.rintf.ret=float
func.rintl.arg.0=long double,x
func.rintl.args=0x1
func.rintl.ret=long double
func.round.arg.0=double,x
func.round.args=0x1
func.round.ret=double
func.roundf.arg.0=float,x
func.roundf.args=0x1
func.roundf.ret=float
func.roundl.arg.0=long double,x
func.roundl.args=0x1
func.roundl.ret=long double
func.scalbln.arg.0=long,ex
func.scalbln.args=0x2
func.scalbln.ret=double
func.scalblnf.arg.0=long,ex
func.scalblnf.args=0x2
func.scalblnf.ret=float
func.scalblnl.arg.0=long,ex
func.scalblnl.args=0x2
func.scalblnl.ret=long double
func.scalbn.arg.0=int,ex
func.scalbn.args=0x2
func.scalbn.ret=double
func.scalbnf.arg.0=int,ex
func.scalbnf.args=0x2
func.scalbnf.ret=float
func.scalbnl.arg.0=int,ex
func.scalbnl.args=0x2
func.scalbnl.ret=long double
func.scanf.arg.0=const char *,format
func.scanf.args=0x1
func.scanf.ret=int
func.select.arg.0=struct timeval *,timeout
func.select.args=0x5
func.select.ret=int
func.send.arg.0=int,flags
func.send.args=0x4
func.send.ret=ssize_t
func.setbuf.arg.0=char *,buf
func.setbuf.args=0x2
func.setbuf.ret=void
func.setenv.arg.0=int,overwrite
func.setenv.args=0x3
func.setenv.ret=int
func.setjmp.arg.0=jmp_buf,env
func.setjmp.args=0x1
func.setjmp.ret=int
func.setlocale.arg.0=const char *,locale
func.setlocale.args=0x2
func.setlocale.ret=char *
func.setsockopt.arg.0=socklen_t,optlen
func.setsockopt.args=0x5
func.setsockopt.ret=int
func.setstate.arg.0=const char *,state
func.setstate.args=0x1
func.setstate.ret=const char *
func.setvbuf.arg.0=size_t,size
func.setvbuf.args=0x4
func.setvbuf.ret=int
func.sigaction.arg.0=struct sigaction *,oldact
func.sigaction.args=0x3
func.sigaction.ret=int
func.signal.arg.0=void *,func
func.signal.args=0x2
func.signal.ret=void
func.signbit.arg.0=double,x
func.signbit.args=0x1
func.signbit.ret=bool
func.sin.arg.0=double,x
func.sin.args=0x1
func.sin.ret=double
func.sinf.arg.0=float,x
func.sinf.args=0x1
func.sinf.ret=float
func.sinh.arg.0=double,x
func.sinh.args=0x1
func.sinh.ret=double
func.sinhf.arg.0=float,x
func.sinhf.args=0x1
func.sinhf.ret=float
func.sinhl.arg.0=long double,x
func.sinhl.args=0x1
func.sinhl.ret=long double
func.sinl.arg.0=long double,x
func.sinl.args=0x1
func.sinl.ret=long double
func.sleep.arg.0=int,s
func.sleep.args=0x1
func.sleep.ret=int
func.snprintf.arg.0=va_list,args
func.snprintf.args=0x4
func.snprintf.ret=int
func.snprintf_chk.arg.0=va_list,args
func.snprintf_chk.args=0x4
func.snprintf_chk.ret=int
func.socket.arg.0=int,protocol
func.socket.args=0x3
func.socket.ret=int
func.sprintf.arg.0=va_list,args
func.sprintf.args=0x3
func.sprintf.ret=int
func.sprintf_chk.arg.0=va_list,args
func.sprintf_chk.args=0x3
func.sprintf_chk.ret=int
func.sqrt.arg.0=double,x
func.sqrt.args=0x1
func.sqrt.ret=double
func.sqrtf.arg.0=float,x
func.sqrtf.args=0x1
func.sqrtf.ret=float
func.sqrtl.arg.0=long double,x
func.sqrtl.args=0x1
func.sqrtl.ret=long double
func.srand.arg.0=int,seed
func.srand.args=0x1
func.srand.ret=void
func.srandom.arg.0=uint32_t,seed
func.srandom.args=0x1
func.srandom.ret=uint32_t
func.srandomdev.args=0
func.srandomdev.ret=void
func.sscanf.arg.0=va_list,args
func.sscanf.args=0x3
func.sscanf.ret=int
func.strcasecmp.arg.0=const char *,s2
func.strcasecmp.args=0x2
func.strcasecmp.ret=int
func.strcat.arg.0=const char *,s2
func.strcat.args=0x2
func.strcat.ret=char *
func.strchr.arg.0=int,c
func.strchr.args=0x2
func.strchr.ret=char *
func.strcmp.arg.0=const char *,s2
func.strcmp.args=0x2
func.strcmp.ret=int
func.strcoll.arg.0=const char *,s2
func.strcoll.args=0x2
func.strcoll.ret=int
func.strcpy.arg.0=const char *,src
func.strcpy.args=0x2
func.strcpy.ret=char *
func.strcpy_chk.arg.0=const char *,src
func.strcpy_chk.args=0x2
func.strcpy_chk.ret=char *
func.strcspn.arg.0=const char *,s2
func.strcspn.args=0x2
func.strcspn.ret=size_t
func.strdup.arg.0=const char *,src
func.strdup.args=0x1
func.strdup.ret=char *
func.strerror.arg.0=int,errnum
func.strerror.args=0x1
func.strerror.ret=char *
func.strftime.arg.0=struct tm *,timeptr
func.strftime.args=0x4
func.strftime.ret=size_t
func.strlcpy.arg.0=size_t,_n
func.strlcpy.args=0x3
func.strlcpy.ret=char *
func.strlen.arg.0=const char *,s
func.strlen.args=0x1
func.strlen.ret=size_t
func.strmode.arg.0=char *,bp
func.strmode.args=0x2
func.strmode.ret=void
func.strncasecmp.arg.0=size_t,n
func.strncasecmp.args=0x3
func.strncasecmp.ret=int
func.strncat.arg.0=size_t,n
func.strncat.args=0x3
func.strncat.ret=char *
func.strncmp.arg.0=size_t,n
func.strncmp.args=0x3
func.strncmp.ret=int
func.strncpy.arg.0=size_t,_n
func.strncpy.args=0x3
func.strncpy.ret=char *
func.strndup.arg.0=int,n
func.strndup.args=0x2
func.strndup.ret=char *
func.strpbrk.arg.0=const char *,s2
func.strpbrk.args=0x2
func.strpbrk.ret=char *
func.strrchr.arg.0=int,c
func.strrchr.args=0x2
func.strrchr.ret=char *
func.strspn.arg.0=const char *,s2
func.strspn.args=0x2
func.strspn.ret=size_t
func.strstr.arg.0=const char *,s2
func.strstr.args=0x2
func.strstr.ret=char *
func.strtod.arg.0=char **,endptr
func.strtod.args=0x2
func.strtod.ret=double
func.strtof.arg.0=char **,endptr
func.strtof.args=0x2
func.strtof.ret=float
func.strtoimax.arg.0=int,base
func.strtoimax.args=0x3
func.strtoimax.ret=intmax_t
func.strtok.arg.0=const char *,s2
func.strtok.args=0x2
func.strtok.ret=char *
func.strtol.arg.0=int,base
func.strtol.args=0x3
func.strtol.ret=long
func.strtold.arg.0=char **,endptr
func.strtold.args=0x2
func.strtold.ret=long double
func.strtoll.arg.0=int,base
func.strtoll.args=0x3
func.strtoll.ret=long long
func.strtoul.arg.0=int,base
func.strtoul.args=0x3
func.strtoul.ret=long
func.strtoull.arg.0=int,base
func.strtoull.args=0x3
func.strtoull.ret=long long
func.strtoumax.arg.0=int,base
func.strtoumax.args=0x3
func.strtoumax.ret=uintmax_t
func.strxfrm.arg.0=size_t,n
func.strxfrm.args=0x3
func.strxfrm.ret=size_t
func.swprintf.arg.0=wchar_t *,format
func.swprintf.args=0x3
func.swprintf.ret=int
func.swscanf.arg.0=wchar_t *,format
func.swscanf.args=0x2
func.swscanf.ret=int
func.symlink.arg.0=const char *,path2
func.symlink.args=0x2
func.symlink.ret=int
func.system.arg.0=const char *,string
func.system.args=0x1
func.system.ret=int
func.tan.arg.0=double,x
func.tan.args=0x1
func.tan.ret=double
func.tanf.arg.0=float,x
func.tanf.args=0x1
func.tanf.ret=float
func.tanh.arg.0=double,x
func.tanh.args=0x1
func.tanh.ret=double
func.tanhf.arg.0=float,x
func.tanhf.args=0x1
func.tanhf.ret=float
func.tanhl.arg.0=long double,x
func.tanhl.args=0x1
func.tanhl.ret=long double
func.tanl.arg.0=long double,x
func.tanl.args=0x1
func.tanl.ret=long double
func.textdomain.arg.0=char *,domainname
func.textdomain.args=0x1
func.textdomain.ret=char *
func.tgamma.arg.0=double,x
func.tgamma.args=0x1
func.tgamma.ret=double
func.tgammaf.arg.0=float,x
func.tgammaf.args=0x1
func.tgammaf.ret=float
func.tgammal.arg.0=long double,x
func.tgammal.args=0x1
func.tgammal.ret=long double
func.tgoto.arg.0=int,row
func.tgoto.args=0x3
func.tgoto.ret=char *
func.time.arg.0=time_t *,timer
func.time.args=0x1
func.time.ret=time_t
func.tmpfile.args=0
func.tmpfile.ret=FILE *
func.tmpnam.arg.0=char *,s
func.tmpnam.args=0x1
func.tmpnam.ret=char *
func.tolower.arg.0=int,c
func.tolower.args=0x1
func.tolower.ret=int
func.toupper.arg.0=int,c
func.toupper.args=0x1
func.toupper.ret=int
func.towctrans.arg.0=wctrans_t,desc
func.towctrans.args=0x2
func.towctrans.ret=wint_t
func.towlower.arg.0=wint_t,wc
func.towlower.args=0x1
func.towlower.ret=wint_t
func.towupper.arg.0=wint_t,wc
func.towupper.args=0x1
func.towupper.ret=wint_t
func.trunc.arg.0=double,x
func.trunc.args=0x1
func.trunc.ret=double
func.truncf.arg.0=float,x
func.truncf.args=0x1
func.truncf.ret=float
func.truncl.arg.0=long double,x
func.truncl.args=0x1
func.truncl.ret=long double
func.umask.arg.0=int,m
func.umask.args=0x1
func.umask.ret=int
func.ungetc.arg.0=FILE *,stream
func.ungetc.args=0x2
func.ungetc.ret=int
func.ungetwc.arg.0=FILE *,stream
func.ungetwc.args=0x2
func.ungetwc.ret=wint_t
func.unlink.arg.0=const char *,path
func.unlink.args=0x1
func.unlink.ret=int
func.user_from_uid.arg.0=int,nouser
func.user_from_uid.args=0x2
func.user_from_uid.ret=char *
func.usleep.arg.0=int,s
func.usleep.args=0x1
func.usleep.ret=int
func.vfprintf.arg.0=va_list,ap
func.vfprintf.args=0x3
func.vfprintf.ret=int
func.vfscanf.arg.0=va_list,ap
func.vfscanf.args=0x3
func.vfscanf.ret=int
func.vfwprintf.arg.0=va_list,arg
func.vfwprintf.args=0x3
func.vfwprintf.ret=int
func.vfwscanf.arg.0=va_list,arg
func.vfwscanf.args=0x3
func.vfwscanf.ret=int
func.vprintf.arg.0=va_list,ap
func.vprintf.args=0x2
func.vprintf.ret=int
func.vscanf.arg.0=va_list,ap
func.vscanf.args=0x2
func.vscanf.ret=int
func.vsnprintf.arg.0=va_list,arg
func.vsnprintf.args=0x4
func.vsnprintf.ret=int
func.vsprintf.arg.0=va_list,arg
func.vsprintf.args=0x3
func.vsprintf.ret=int
func.vsscanf.arg.0=va_list,arg
func.vsscanf.args=0x3
func.vsscanf.ret=int
func.vswprintf.arg.0=va_list,arg
func.vswprintf.args=0x4
func.vswprintf.ret=int
func.vswscanf.arg.0=va_list,arg
func.vswscanf.args=0x3
func.vswscanf.ret=int
func.vwprintf.arg.0=va_list,arg
func.vwprintf.args=0x2
func.vwprintf.ret=int
func.vwscanf.arg.0=va_list,arg
func.vwscanf.args=0x2
func.vwscanf.ret=int
func.wait.arg.0=int *,wstatus
func.wait.args=0x1
func.wait.ret=pid_t
func.waitid.arg.0=int,options
func.waitid.args=0x4
func.waitid.ret=int
func.waitpid.arg.0=int,options
func.waitpid.args=0x3
func.waitpid.ret=pid_t
func.warn.arg.0=const char *,format
func.warn.args=0x1
func.warn.ret=void
func.warnc.arg.0=int,opt
func.warnc.args=0x2
func.warnc.ret=void
func.warnx.arg.0=const char *,format
func.warnx.args=0x1
func.warnx.ret=void
func.wcrtomb.arg.0=mbstate_t *,ps
func.wcrtomb.args=0x3
func.wcrtomb.ret=size_t
func.wcscat.arg.0=wchar_t *,s2
func.wcscat.args=0x2
func.wcscat.ret=wchar_t *
func.wcschr.arg.0=wchar_t,c
func.wcschr.args=0x2
func.wcschr.ret=wchar_t *
func.wcscmp.arg.0=wchar_t *,s2
func.wcscmp.args=0x2
func.wcscmp.ret=int
func.wcscoll.arg.0=wchar_t *,s2
func.wcscoll.args=0x2
func.wcscoll.ret=int
func.wcscpy.arg.0=wchar_t *,s2
func.wcscpy.args=0x2
func.wcscpy.ret=wchar_t *
func.wcscspn.arg.0=wchar_t *,s2
func.wcscspn.args=0x2
func.wcscspn.ret=size_t
func.wcsftime.arg.0=struct tm *,timeptr
func.wcsftime.args=0x4
func.wcsftime.ret=size_t
func.wcslen.arg.0=wchar_t *,s
func.wcslen.args=0x1
func.wcslen.ret=size_t
func.wcsncat.arg.0=size_t,n
func.wcsncat.args=0x3
func.wcsncat.ret=wchar_t *
func.wcsncmp.arg.0=size_t,n
func.wcsncmp.args=0x3
func.wcsncmp.ret=int
func.wcsncpy.arg.0=size_t,n
func.wcsncpy.args=0x3
func.wcsncpy.ret=wchar_t *
func.wcspbrk.arg.0=wchar_t *,s2
func.wcspbrk.args=0x2
func.wcspbrk.ret=wchar_t *
func.wcsrchr.arg.0=wchar_t,c
func.wcsrchr.args=0x2
func.wcsrchr.ret=wchar_t *
func.wcsrtombs.arg.0=mbstate_t *,ps
func.wcsrtombs.args=0x4
func.wcsrtombs.ret=size_t
func.wcsspn.arg.0=wchar_t *,s2
func.wcsspn.args=0x2
func.wcsspn.ret=size_t
func.wcsstr.arg.0=wchar_t *,s2
func.wcsstr.args=0x2
func.wcsstr.ret=wchar_t *
func.wcstod.arg.0=wchar_t **,endptr
func.wcstod.args=0x2
func.wcstod.ret=double
func.wcstof.arg.0=wchar_t **,endptr
func.wcstof.args=0x2
func.wcstof.ret=float
func.wcstoimax.arg.0=int,base
func.wcstoimax.args=0x3
func.wcstoimax.ret=intmax_t
func.wcstok.arg.0=wchar_t **,ptr
func.wcstok.args=0x3
func.wcstok.ret=wchar_t *
func.wcstol.arg.0=int,base
func.wcstol.args=0x3
func.wcstol.ret=long
func.wcstold.arg.0=wchar_t **,endptr
func.wcstold.args=0x2
func.wcstold.ret=long double
func.wcstoll.arg.0=int,base
func.wcstoll.args=0x3
func.wcstoll.ret=long long
func.wcstombs.arg.0=size_t,n
func.wcstombs.args=0x3
func.wcstombs.ret=size_t
func.wcstoul.arg.0=int,base
func.wcstoul.args=0x3
func.wcstoul.ret=long
func.wcstoull.arg.0=int,base
func.wcstoull.args=0x3
func.wcstoull.ret=long long
func.wcstoumax.arg.0=int,base
func.wcstoumax.args=0x3
func.wcstoumax.ret=uintmax_t
func.wcsxfrm.arg.0=size_t,n
func.wcsxfrm.args=0x3
func.wcsxfrm.ret=size_t
func.wctob.arg.0=wint_t,c
func.wctob.args=0x1
func.wctob.ret=int
func.wctomb.arg.0=wchar_t,wchar
func.wctomb.args=0x2
func.wctomb.ret=int
func.wctrans.arg.0=const char *,property
func.wctrans.args=0x1
func.wctrans.ret=wctrans_t
func.wctype.arg.0=const char *,property
func.wctype.args=0x1
func.wctype.ret=wctype_t
func.wmemchr.arg.0=size_t,n
func.wmemchr.args=0x3
func.wmemchr.ret=wchar_t *
func.wmemcmp.arg.0=size_t,n
func.wmemcmp.args=0x3
func.wmemcmp.ret=int
func.wmemcpy.arg.0=size_t,n
func.wmemcpy.args=0x3
func.wmemcpy.ret=wchar_t *
func.wmemmove.arg.0=size_t,n
func.wmemmove.args=0x3
func.wmemmove.ret=wchar_t *
func.wmemset.arg.0=size_t,n
func.wmemset.args=0x3
func.wmemset.ret=wchar_t *
func.wprintf.arg.0=wchar_t *,format
func.wprintf.args=0x1
func.wprintf.ret=int
func.write.arg.0=size_t,nbytes
func.write.args=0x3
func.write.ret=ssize_t
func.wscanf.arg.0=wchar_t *,format
func.wscanf.args=0x1
func.wscanf.ret=int
func.xmalloc.arg.0=size_t,size
func.xmalloc.args=0x1
func.xmalloc.ret=void *
fwide=func
fwprintf=func
fwrite=func
fwscanf=func
getc=func
getchar=func
getenv=func
geteuid=func
getopt=func
getpid=func
getprogname=func
gets=func
getsockname=func
getsockopt=func
getuid=func
getwc=func
getwchar=func
gmtime=func
group_from_gid=func
humanize_number=func
hypot=func
hypotf=func
hypotl=func
ilogb=func
ilogbf=func
ilogbl=func
imaxabs=func
imaxdiv=func
inet_aton=func
inet_ntoa=func
initstate=func
ioctl=func
isalnum=func
isalpha=func
isatty=func
isblank=func
iscntrl=func
isdigit=func
isfinite=func
isgraph=func
isgreater=func
isgreaterequal=func
isinf=func
isless=func
islessequal=func
islessgreater=func
islower=func
isnan=func
isnormal=func
isprint=func
ispunct=func
isspace=func
isunordered=func
isupper=func
iswalnum=func
iswalpha=func
iswblank=func
iswcntrl=func
iswctype=func
iswdigit=func
iswgraph=func
iswlower=func
iswprint=func
iswpunct=func
iswspace=func
iswupper=func
iswxdigit=func
isxdigit=func
kill=func
labs=func
ldexp=func
ldexpf=func
ldexpl=func
ldiv=func
lgamma=func
lgammaf=func
lgammal=func
llabs=func
lldiv=func
llrint=func
llrintf=func
llrintl=func
llround=func
llroundf=func
llroundl=func
localeconv=func
localtime=func
log=func
log10=func
log10f=func
log10l=func
log1p=func
log1pf=func
log1pl=func
log2=func
log2f=func
log2l=func
logb=func
logbf=func
logbl=func
logf=func
logl=func
longjmp=func
lrint=func
lrintf=func
lrintl=func
lround=func
lroundf=func
lroundl=func
lstat=func
main=func
malloc=func
maskrune=func
mblen=func
mbrlen=func
mbrtowc=func
mbsinit=func
mbsrtowcs=func
mbstowcs=func
mbtowc=func
memchr=func
memcmp=func
memcpy=func
memmem=func
memmove=func
memset=func
mkstemp=func
mktemp=func
mktime=func
mmap=func
modf=func
modff=func
modfl=func
munmap=func
nan=func
nanf=func
nanl=func
nanosleep=func
nearbyint=func
nearbyintf=func
nearbyintl=func
nextafter=func
nextafterf=func
nextafterl=func
nexttoward=func
nexttowardf=func
nexttowardl=func
nl_langinfo=func
nl_langinfo_l=func
objc_enumerationMutation=func
objc_msgSend=func
objc_msgSendSuper2=func
objc_release=func
objc_retain=func
objc_retainAutoreleasedReturnValue=func
objc_storeStrong=func
open=func
openat=func
pclose=func
perror=func
popen=func
pow=func
powf=func
powl=func
prctl=func
printf=func
ptrace=func
putc=func
putchar=func
puts=func
pututxline=func
putwc=func
putwchar=func
qsort=func
quick_exit=func
raise=func
rand=func
random=func
read=func
realloc=func
reallocf=func
recv=func
remainder=func
remainderf=func
remainderl=func
remove=func
remquo=func
remquof=func
remquol=func
rename=func
rewind=func
rint=func
rintf=func
rintl=func
round=func
roundf=func
roundl=func
scalbln=func
scalblnf=func
scalblnl=func
scalbn=func
scalbnf=func
scalbnl=func
scanf=func
select=func
send=func
setbuf=func
setenv=func
setjmp=func
setlocale=func
setsockopt=func
setstate=func
setvbuf=func
sigaction=func
signal=func
signbit=func
sin=func
sinf=func
sinh=func
sinhf=func
sinhl=func
sinl=func
sleep=func
snprintf=func
snprintf_chk=func
socket=func
sprintf=func
sprintf_chk=func
sqrt=func
sqrtf=func
sqrtl=func
srand=func
srandom=func
srandomdev=func
sscanf=func
strcasecmp=func
strcat=func
strchr=func
strcmp=func
strcoll=func
strcpy=func
strcpy_chk=func
strcspn=func
strdup=func
strerror=func
strftime=func
strlcpy=func
strlen=func
strmode=func
strncasecmp=func
strncat=func
strncmp=func
strncpy=func
strndup=func
strpbrk=func
strrchr=func
strspn=func
strstr=func
strtod=func
strtof=func
strtoimax=func
strtok=func
strtol=func
strtold=func
strtoll=func
strtoul=func
strtoull=func
strtoumax=func
strxfrm=func
swprintf=func
swscanf=func
symlink=func
system=func
tan=func
tanf=func
tanh=func
tanhf=func
tanhl=func
tanl=func
textdomain=func
tgamma=func
tgammaf=func
tgammal=func
tgoto=func
time=func
tmpfile=func
tmpnam=func
tolower=func
toupper=func
towctrans=func
towlower=func
towupper=func
trunc=func
truncf=func
truncl=func
umask=func
ungetc=func
ungetwc=func
unlink=func
user_from_uid=func
usleep=func
vfprintf=func
vfscanf=func
vfwprintf=func
vfwscanf=func
vprintf=func
vscanf=func
vsnprintf=func
vsprintf=func
vsscanf=func
vswprintf=func
vswscanf=func
vwprintf=func
vwscanf=func
wait=func
waitid=func
waitpid=func
warn=func
warnc=func
warnx=func
wcrtomb=func
wcscat=func
wcschr=func
wcscmp=func
wcscoll=func
wcscpy=func
wcscspn=func
wcsftime=func
wcslen=func
wcsncat=func
wcsncmp=func
wcsncpy=func
wcspbrk=func
wcsrchr=func
wcsrtombs=func
wcsspn=func
wcsstr=func
wcstod=func
wcstof=func
wcstoimax=func
wcstok=func
wcstol=func
wcstold=func
wcstoll=func
wcstombs=func
wcstoul=func
wcstoull=func
wcstoumax=func
wcsxfrm=func
wctob=func
wctomb=func
wctrans=func
wctype=func
wmemchr=func
wmemcmp=func
wmemcpy=func
wmemmove=func
wmemset=func
wprintf=func
write=func
wscanf=func
xmalloc=func

/core/analysis/cc
borland=cc
cc.borland.arg0=eax
cc.borland.arg1=edx
cc.borland.arg2=ecx
cc.borland.argn=stack_rev
cc.cdecl-fastcall-ms.argn=stack
cc.cdecl-fastcall-ms.ret=eax
cc.cdecl-thiscall-ms.arg0=ecx
cc.cdecl.argn=stack
cc.cdecl.ret=eax
cc.fastcall.arg0=ecx
cc.fastcall.arg1=edx
cc.fastcall.argn=stack
cc.fastcall.ret=eax
cc.optlink.arg0=eax
cc.optlink.arg1=edx
cc.optlink.arg2=ecx
cc.optlink.argn=stack
cc.optlink.ret=eax
cc.pascal.argn=stack_rev
cc.reg.arg0=eax
cc.reg.arg1=ebx
cc.reg.arg2=ecx
cc.reg.arg3=edx
cc.reg.ret=eax
cc.stdcall.argn=stack
cc.stdcall.ret=eax
cc.watcom.arg0=eax
cc.watcom.arg1=edx
cc.watcom.arg2=ebx
cc.watcom.arg3=ecx
cc.watcom.argn=stack
cdecl=cc
cdecl-thiscall-ms=cc
default.cc=cdecl
fastcall=cc
optlink=cc
pascal=cc
reg=cc
stdcall=cc
watcom=cc

/core/analysis/classes

/core/analysis/classes/attrs

/core/analysis/functions
0x0={"name":"loc.imp._ITM_deregisterTMCloneTable","bits":32,"type":1,"cc":"cdecl","stack":0,"maxstack":4,"ninstr":77,"bp_frame":true,"diff":{},"bbs":[0,2,71]}
0x1082={"name":"sym.info","bits":32,"type":4,"cc":"cdecl","stack":20,"maxstack":76,"ninstr":102,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[4226,4552,4557],"vars":[{"name":"var_ch","type":"int32_t","kind":"b","delta":-16,"accs":[{"off":24,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":314,"type":"r","sp":18446744073709551604,"reg":"ebp"}]},{"name":"buf","type":"const char *","kind":"b","delta":-24,"accs":[{"off":42,"type":"w","sp":18446744073709551596,"reg":"ebp"},{"off":109,"type":"r","sp":18446744073709551596,"reg":"ebp"},{"off":125,"type":"r","sp":18446744073709551596,"reg":"ebp"},{"off":139,"type":"r","sp":18446744073709551596,"reg":"ebp"},{"off":232,"type":"r","sp":18446744073709551596,"reg":"ebp"},{"off":256,"type":"r","sp":18446744073709551596,"reg":"ebp"}]},{"name":"s","type":"const char *","kind":"b","delta":-20,"accs":[{"off":58,"type":"w","sp":18446744073709551600,"reg":"ebp"},{"off":170,"type":"r","sp":18446744073709551600,"reg":"ebp"},{"off":186,"type":"r","sp":18446744073709551600,"reg":"ebp"},{"off":200,"type":"r","sp":18446744073709551600,"reg":"ebp"},{"off":215,"type":"r","sp":18446744073709551600,"reg":"ebp"}]},{"name":"var_4h","type":"int32_t","kind":"b","delta":-8,"accs":[{"off":331,"type":"r","sp":18446744073709551612,"reg":"ebp"}]}]}
0x11d2={"name":"sym.car_info","bits":32,"type":4,"cc":"cdecl","stack":20,"maxstack":60,"ninstr":110,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[4562,4936,4941],"vars":[{"name":"var_ch","type":"int32_t","kind":"b","delta":-16,"accs":[{"off":24,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":362,"type":"r","sp":18446744073709551604,"reg":"ebp"}]},{"name":"var_4h","type":"int32_t","kind":"b","delta":-8,"accs":[{"off":379,"type":"r","sp":18446744073709551612,"reg":"ebp"}]}]}
0x1352={"name":"sym.menu","bits":32,"type":4,"cc":"cdecl","stack":28,"maxstack":44,"ninstr":42,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[4946,4982,5014,5020,5052,5058,5064,5079,5084],"vars":[{"name":"var_ch","type":"int32_t","kind":"b","delta":-16,"accs":[{"off":24,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":121,"type":"r","sp":18446744073709551604,"reg":"ebp"}]},{"name":"var_10h","type":"unsigned long","kind":"b","delta":-20,"accs":[{"off":29,"type":"w","sp":18446744073709551600,"reg":"ebp"},{"off":59,"type":"w","sp":18446744073709551600,"reg":"ebp"},{"off":62,"type":"r","sp":18446744073709551600,"reg":"ebp"},{"off":68,"type":"r","sp":18446744073709551600,"reg":"ebp"},{"off":106,"type":"r","sp":18446744073709551600,"reg":"ebp"},{"off":112,"type":"r","sp":18446744073709551600,"reg":"ebp"},{"off":118,"type":"r","sp":18446744073709551600,"reg":"ebp"}]},{"name":"var_4h","type":"int32_t","kind":"b","delta":-8,"accs":[{"off":138,"type":"r","sp":18446744073709551612,"reg":"ebp"}]}]}
0x13e1={"name":"main","bits":32,"type":4,"cc":"cdecl","stack":16,"maxstack":48,"ninstr":51,"bp_frame":true,"bp_off":8,"diff":{},"bbs":[5089,5146,5156,5161,5163,5170,5187,5219,5229,5242,5247],"vars":[{"name":"argv","type":"char **","kind":"s","delta":4,"arg":true,"accs":[{"off":0,"type":"r","sp":4,"reg":"esp"}]},{"name":"var_ch","type":"int32_t","kind":"b","delta":-20,"accs":[{"off":35,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":141,"type":"r","sp":18446744073709551604,"reg":"ebp"}]},{"name":"var_8h","type":"int32_t","kind":"b","delta":-16,"accs":[{"off":158,"type":"r","sp":18446744073709551608,"reg":"ebp"}]}]}
0x1490={"name":"sym.__libc_csu_init","bits":32,"type":4,"cc":"cdecl","stack":28,"maxstack":44,"ninstr":32,"bp_frame":true,"bp_off":28,"diff":{},"bbs":[5264,5312,5320,5349],"vars":[{"name":"arg_28h","type":"int32_t","kind":"s","delta":12,"arg":true,"accs":[{"off":18,"type":"r","sp":40,"reg":"esp"}]},{"name":"arg_2ch","type":"int32_t","kind":"s","delta":8,"arg":true,"accs":[{"off":60,"type":"r","sp":44,"reg":"esp"}]},{"name":"arg_2ch_2","type":"int32_t","kind":"s","delta":4,"arg":true,"accs":[{"off":64,"type":"r","sp":44,"reg":"esp"}]}]}
0x14f0={"name":"sym.__libc_csu_fini","bits":32,"type":4,"cc":"cdecl","stack":-4,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[5360]}
0x1500={"name":"sym.__stack_chk_fail_local","bits":32,"type":4,"cc":"cdecl","stack":12,"maxstack":12,"ninstr":5,"bp_frame":true,"diff":{},"bbs":[5376]}
0x1514={"name":"sym._fini","bits":32,"type":4,"cc":"cdecl","stack":-4,"maxstack":12,"ninstr":7,"bp_frame":true,"diff":{},"bbs":[5396]}
0x618={"name":"sym._init","bits":32,"type":4,"cc":"cdecl","stack":-4,"maxstack":12,"ninstr":11,"bp_frame":true,"diff":{},"bbs":[1560,1585,1590]}
0x650={"name":"sym.imp.strcmp","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1616]}
0x660={"name":"sym.imp.read","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1632]}
0x670={"name":"sym.imp.printf","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1648]}
0x680={"name":"sym.imp.fgets","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1664]}
0x690={"name":"sym.imp.time","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1680]}
0x6a0={"name":"sym.imp.sleep","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1696]}
0x6b0={"name":"sym.imp.alarm","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1712]}
0x6c0={"name":"sym.imp.__stack_chk_fail","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1728]}
0x6d0={"name":"sym.imp.malloc","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1744]}
0x6e0={"name":"sym.imp.puts","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1760]}
0x6f0={"name":"sym.imp.exit","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1776]}
0x700={"name":"sym.imp.srand","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1792]}
0x710={"name":"sym.imp.strlen","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1808]}
0x720={"name":"sym.imp.__libc_start_main","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1824]}
0x730={"name":"sym.imp.setvbuf","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1840]}
0x740={"name":"sym.imp.fopen","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1856]}
0x750={"name":"sym.imp.putchar","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1872]}
0x760={"name":"sym.imp.rand","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1888]}
0x770={"name":"sym.imp.atoi","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1904]}
0x780={"name":"sym..plt.got","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1920]}
0x788={"name":"fcn.00000788","bits":32,"type":1,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[1928]}
0x790={"name":"entry0","bits":32,"type":1,"cc":"cdecl","stack":28,"maxstack":28,"ninstr":17,"diff":{},"bbs":[1936]}
0x7c2={"name":"fcn.000007c2","bits":32,"type":1,"cc":"cdecl","stack":-4,"maxstack":0,"ninstr":2,"bp_frame":true,"diff":{},"bbs":[1986]}
0x7d0={"name":"sym.__x86.get_pc_thunk.bx","bits":32,"type":4,"cc":"cdecl","stack":-4,"maxstack":0,"ninstr":2,"bp_frame":true,"diff":{},"bbs":[2000]}
0x7e0={"name":"sym.deregister_tm_clones","bits":32,"type":4,"cc":"cdecl","stack":4,"maxstack":28,"ninstr":18,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[2016,2043,2053,2072]}
0x820={"name":"sym.register_tm_clones","bits":32,"type":4,"cc":"cdecl","stack":4,"maxstack":28,"ninstr":26,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[2080,2126,2136,2146],"vars":[{"name":"var_4h","type":"int32_t","kind":"b","delta":-8,"accs":[{"off":66,"type":"r","sp":18446744073709551612,"reg":"ebp"}]}]}
0x870={"name":"sym.__do_global_dtors_aux","bits":32,"type":4,"cc":"cdecl","stack":4,"maxstack":28,"ninstr":20,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[2160,2187,2197,2214,2226],"vars":[{"name":"var_4h","type":"int32_t","kind":"b","delta":-8,"accs":[{"off":66,"type":"r","sp":18446744073709551612,"reg":"ebp"}]}]}
0x8c0={"name":"entry.init0","bits":32,"type":1,"cc":"cdecl","stack":0,"maxstack":4,"ninstr":4,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[2240]}
0x8c9={"name":"sym.__x86.get_pc_thunk.dx","bits":32,"type":4,"cc":"cdecl","stack":-4,"maxstack":0,"ninstr":2,"bp_frame":true,"diff":{},"bbs":[2249]}
0x8cd={"name":"sym.read_int","bits":32,"type":4,"cc":"cdecl","stack":52,"maxstack":76,"ninstr":29,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[2253,2335,2340],"vars":[{"name":"var_ch","type":"int32_t","kind":"b","delta":-16,"accs":[{"off":24,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":70,"type":"r","sp":18446744073709551604,"reg":"ebp"}]},{"name":"var_30h","type":"int32_t","kind":"b","delta":-52,"accs":[{"off":29,"type":"w","sp":18446744073709551568,"reg":"ebp"}]},{"name":"str","type":"const char *","kind":"b","delta":-48,"accs":[{"off":41,"type":"r","sp":18446744073709551572,"reg":"ebp"},{"off":58,"type":"r","sp":18446744073709551572,"reg":"ebp"}]},{"name":"var_4h","type":"int32_t","kind":"b","delta":-8,"accs":[{"off":87,"type":"r","sp":18446744073709551612,"reg":"ebp"}]}]}
0x929={"name":"sym.banner","bits":32,"type":4,"cc":"cdecl","stack":36,"maxstack":60,"ninstr":185,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[2345,2489,2555,2953,2958],"vars":[{"name":"var_ch","type":"int32_t","kind":"b","delta":-16,"accs":[{"off":24,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":596,"type":"r","sp":18446744073709551604,"reg":"ebp"}]},{"name":"var_20h","type":"int32_t","kind":"b","delta":-36,"accs":[{"off":35,"type":"w","sp":18446744073709551584,"reg":"ebp"},{"off":137,"type":"r","sp":18446744073709551584,"reg":"ebp"},{"off":182,"type":"r","sp":18446744073709551584,"reg":"ebp"}]},{"name":"var_1ch","type":"int32_t","kind":"b","delta":-32,"accs":[{"off":44,"type":"w","sp":18446744073709551588,"reg":"ebp"}]},{"name":"var_18h","type":"int32_t","kind":"b","delta":-28,"accs":[{"off":53,"type":"w","sp":18446744073709551592,"reg":"ebp"}]},{"name":"var_14h","type":"int32_t","kind":"b","delta":-24,"accs":[{"off":62,"type":"w","sp":18446744073709551596,"reg":"ebp"}]},{"name":"var_10h","type":"int32_t","kind":"b","delta":-20,"accs":[{"off":71,"type":"w","sp":18446744073709551600,"reg":"ebp"}]},{"name":"s1","type":"const char *","kind":"b","delta":-44,"accs":[{"off":141,"type":"w","sp":18446744073709551576,"reg":"ebp"},{"off":195,"type":"r","sp":18446744073709551576,"reg":"ebp"},{"off":238,"type":"r","sp":18446744073709551576,"reg":"ebp"},{"off":266,"type":"r","sp":18446744073709551576,"reg":"ebp"},{"off":294,"type":"r","sp":18446744073709551576,"reg":"ebp"},{"off":322,"type":"r","sp":18446744073709551576,"reg":"ebp"}]},{"name":"s2","type":"const char *","kind":"b","delta":-40,"accs":[{"off":186,"type":"w","sp":18446744073709551580,"reg":"ebp"},{"off":192,"type":"r","sp":18446744073709551580,"reg":"ebp"},{"off":475,"type":"r","sp":18446744073709551580,"reg":"ebp"},{"off":503,"type":"r","sp":18446744073709551580,"reg":"ebp"},{"off":531,"type":"r","sp":18446744073709551580,"reg":"ebp"},{"off":559,"type":"r","sp":18446744073709551580,"reg":"ebp"}]},{"name":"var_4h","type":"int32_t","kind":"b","delta":-8,"accs":[{"off":613,"type":"r","sp":18446744073709551612,"reg":"ebp"}]}]}
0xb93={"name":"sym.setup","bits":32,"type":4,"cc":"cdecl","stack":20,"maxstack":44,"ninstr":37,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[2963,3064,3069],"vars":[{"name":"var_ch","type":"int32_t","kind":"b","delta":-16,"accs":[{"off":24,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":89,"type":"r","sp":18446744073709551604,"reg":"ebp"}]},{"name":"var_4h","type":"int32_t","kind":"b","delta":-8,"accs":[{"off":106,"type":"r","sp":18446744073709551612,"reg":"ebp"}]}]}
0xc02={"name":"sym.race_type","bits":32,"type":4,"cc":"cdecl","stack":28,"maxstack":44,"ninstr":42,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[3074,3110,3142,3148,3180,3186,3192,3207,3212],"vars":[{"name":"var_ch","type":"int32_t","kind":"b","delta":-16,"accs":[{"off":24,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":121,"type":"r","sp":18446744073709551604,"reg":"ebp"}]},{"name":"var_10h","type":"unsigned long","kind":"b","delta":-20,"accs":[{"off":29,"type":"w","sp":18446744073709551600,"reg":"ebp"},{"off":59,"type":"w","sp":18446744073709551600,"reg":"ebp"},{"off":62,"type":"r","sp":18446744073709551600,"reg":"ebp"},{"off":68,"type":"r","sp":18446744073709551600,"reg":"ebp"},{"off":106,"type":"r","sp":18446744073709551600,"reg":"ebp"},{"off":112,"type":"r","sp":18446744073709551600,"reg":"ebp"},{"off":118,"type":"r","sp":18446744073709551600,"reg":"ebp"}]},{"name":"var_4h","type":"int32_t","kind":"b","delta":-8,"accs":[{"off":138,"type":"r","sp":18446744073709551612,"reg":"ebp"}]}]}
0xc91={"name":"sym.car_menu","bits":32,"type":4,"cc":"cdecl","stack":92,"maxstack":108,"ninstr":317,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[3217,3267,3299,3305,3337,3343,3349,3388,3394,3400,3406,3505,3511,3517,3523,3529,3625,3713,3731,3772,3785,3789,3812,3818,3826,3836,3848,3998,4033,4108,4114,4122,4128,4136,4203,4216,4221],"vars":[{"name":"var_ch","type":"int32_t","kind":"b","delta":-16,"accs":[{"off":24,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":987,"type":"r","sp":18446744073709551604,"reg":"ebp"}]},{"name":"var_4ch","type":"unsigned long","kind":"b","delta":-80,"accs":[{"off":29,"type":"w","sp":18446744073709551540,"reg":"ebp"},{"off":73,"type":"w","sp":18446744073709551540,"reg":"ebp"},{"off":76,"type":"r","sp":18446744073709551540,"reg":"ebp"},{"off":82,"type":"r","sp":18446744073709551540,"reg":"ebp"},{"off":120,"type":"r","sp":18446744073709551540,"reg":"ebp"},{"off":126,"type":"r","sp":18446744073709551540,"reg":"ebp"},{"off":165,"type":"r","sp":18446744073709551540,"reg":"ebp"},{"off":177,"type":"r","sp":18446744073709551540,"reg":"ebp"},{"off":288,"type":"r","sp":18446744073709551540,"reg":"ebp"},{"off":300,"type":"r","sp":18446744073709551540,"reg":"ebp"},{"off":595,"type":"r","sp":18446744073709551540,"reg":"ebp"},{"off":609,"type":"r","sp":18446744073709551540,"reg":"ebp"},{"off":891,"type":"r","sp":18446744073709551540,"reg":"ebp"},{"off":905,"type":"r","sp":18446744073709551540,"reg":"ebp"}]},{"name":"var_58h","type":"int32_t","kind":"b","delta":-92,"accs":[{"off":36,"type":"w","sp":18446744073709551528,"reg":"ebp"},{"off":217,"type":"w","sp":18446744073709551528,"reg":"ebp"},{"off":220,"type":"r","sp":18446744073709551528,"reg":"ebp"},{"off":236,"type":"w","sp":18446744073709551528,"reg":"ebp"},{"off":340,"type":"w","sp":18446744073709551528,"reg":"ebp"},{"off":343,"type":"r","sp":18446744073709551528,"reg":"ebp"},{"off":353,"type":"w","sp":18446744073709551528,"reg":"ebp"},{"off":436,"type":"w","sp":18446744073709551528,"reg":"ebp"},{"off":439,"type":"r","sp":18446744073709551528,"reg":"ebp"},{"off":449,"type":"w","sp":18446744073709551528,"reg":"ebp"},{"off":601,"type":"r","sp":18446744073709551528,"reg":"ebp"},{"off":619,"type":"r","sp":18446744073709551528,"reg":"ebp"},{"off":897,"type":"r","sp":18446744073709551528,"reg":"ebp"},{"off":911,"type":"r","sp":18446744073709551528,"reg":"ebp"}]},{"name":"var_54h","type":"int32_t","kind":"b","delta":-88,"accs":[{"off":43,"type":"w","sp":18446744073709551532,"reg":"ebp"},{"off":267,"type":"w","sp":18446744073709551532,"reg":"ebp"},{"off":270,"type":"r","sp":18446744073709551532,"reg":"ebp"},{"off":280,"type":"w","sp":18446744073709551532,"reg":"ebp"},{"off":384,"type":"w","sp":18446744073709551532,"reg":"ebp"},{"off":387,"type":"r","sp":18446744073709551532,"reg":"ebp"},{"off":403,"type":"w","sp":18446744073709551532,"reg":"ebp"},{"off":480,"type":"w","sp":18446744073709551532,"reg":"ebp"},{"off":483,"type":"r","sp":18446744073709551532,"reg":"ebp"},{"off":493,"type":"w","sp":18446744073709551532,"reg":"ebp"},{"off":604,"type":"r","sp":18446744073709551532,"reg":"ebp"},{"off":622,"type":"r","sp":18446744073709551532,"reg":"ebp"},{"off":900,"type":"r","sp":18446744073709551532,"reg":"ebp"},{"off":914,"type":"r","sp":18446744073709551532,"reg":"ebp"}]},{"name":"var_48h","type":"unsigned long","kind":"b","delta":-76,"accs":[{"off":137,"type":"w","sp":18446744073709551544,"reg":"ebp"},{"off":171,"type":"r","sp":18446744073709551544,"reg":"ebp"},{"off":183,"type":"r","sp":18446744073709551544,"reg":"ebp"},{"off":294,"type":"r","sp":18446744073709551544,"reg":"ebp"},{"off":306,"type":"r","sp":18446744073709551544,"reg":"ebp"}]},{"name":"s","type":"const char *","kind":"b","delta":-72,"accs":[{"off":502,"type":"w","sp":18446744073709551548,"reg":"ebp"},{"off":517,"type":"r","sp":18446744073709551548,"reg":"ebp"},{"off":543,"type":"r","sp":18446744073709551548,"reg":"ebp"},{"off":575,"type":"r","sp":18446744073709551548,"reg":"ebp"}]},{"name":"var_50h","type":"int32_t","kind":"b","delta":-84,"accs":[{"off":505,"type":"w","sp":18446744073709551536,"reg":"ebp"},{"off":514,"type":"r","sp":18446744073709551536,"reg":"ebp"},{"off":540,"type":"r","sp":18446744073709551536,"reg":"ebp"},{"off":568,"type":"r","sp":18446744073709551536,"reg":"ebp"},{"off":588,"type":"r","sp":18446744073709551536,"reg":"ebp"}]},{"name":"var_4h","type":"int32_t","kind":"b","delta":-8,"accs":[{"off":1004,"type":"r","sp":18446744073709551612,"reg":"ebp"}]},{"name":"format","type":"const char *","kind":"b","delta":-68,"accs":[{"off":744,"type":"w","sp":18446744073709551552,"reg":"ebp"},{"off":844,"type":"r","sp":18446744073709551552,"reg":"ebp"},{"off":878,"type":"r","sp":18446744073709551552,"reg":"ebp"}]},{"name":"stream","type":"FILE *","kind":"b","delta":-64,"accs":[{"off":772,"type":"w","sp":18446744073709551556,"reg":"ebp"},{"off":775,"type":"r","sp":18446744073709551556,"reg":"ebp"},{"off":819,"type":"r","sp":18446744073709551556,"reg":"ebp"}]},{"name":"var_38h","type":"char *","kind":"b","delta":-60,"accs":[{"off":824,"type":"r","sp":18446744073709551560,"reg":"ebp"}]}]}

/core/analysis/hints

/core/analysis/imports

/core/analysis/meta
0x0=[{"type":"C","str":"[28] ---- section size 252 named .shstrtab"}]
0x1038=[{"type":"t","str":"const char *format"}]
0x1062=[{"type":"t","str":"const char *format"}]
0x10a2=[{"type":"t","str":"size_t size"}]
0x10b2=[{"type":"t","str":"size_t size"}]
0x10cf=[{"type":"t","str":"const char *format"}]
0x10e1=[{"type":"t","str":"const char *format"}]
0x10ed=[{"type":"t","str":"size_t nbyte"}]
0x10ef=[{"type":"t","str":"void *buf"}]
0x10f2=[{"type":"t","str":"int fildes"}]
0x10ff=[{"type":"t","str":"const char *s"}]
0x111e=[{"type":"t","str":"const char *format"}]
0x112a=[{"type":"t","str":"size_t nbyte"}]
0x112c=[{"type":"t","str":"void *buf"}]
0x112f=[{"type":"t","str":"int fildes"}]
0x113c=[{"type":"t","str":"const char *s"}]
0x1199=[{"type":"t","str":"const char *format"}]
0x11b2=[{"type":"t","str":"const char *format"}]
0x11f8=[{"type":"t","str":"const char *s"}]
0x120a=[{"type":"t","str":"const char *s"}]
0x122e=[{"type":"t","str":"const char *format"}]
0x1252=[{"type":"t","str":"const char *format"}]
0x1280=[{"type":"t","str":"const char *format"}]
0x1292=[{"type":"t","str":"const char *s"}]
0x12a4=[{"type":"t","str":"const char *s"}]
0x12d2=[{"type":"t","str":"const char *format"}]
0x1300=[{"type":"t","str":"const char *format"}]
0x1320=[{"type":"t","str":"const char *format"}]
0x1332=[{"type":"t","str":"const char *s"}]
0x137f=[{"type":"t","str":"const char *format"}]
0x13b3=[{"type":"t","str":"const char *format"}]
0x145a=[{"type":"t","str":"const char *format"}]
0x1514=[{"type":"C","str":"[15] -r-x section size 20 named .fini"}]
0x1528=[{"type":"C","str":"[16] -r-- section size 2129 named .rodata"}]
0x1530=[{"size":8,"type":"s","str":"\\\\e[1;33m"}]
0x1538=[{"size":8,"type":"s","str":"\\\\e[1;36m"}]
0x154=[{"type":"C","str":"[01] -r-- section size 19 named .interp"}]
0x1540=[{"size":8,"type":"s","str":"\\\\e[1;32m"}]
0x1548=[{"size":8,"type":"s","str":"\\\\e[1;31m"}]
0x1550=[{"size":8,"type":"s","str":"\\\\e[1;34m"}]
0x1558=[{"size":114,"type":"s","str":"\\\\n🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌"}]
0x15ca=[{"size":8,"type":"s","str":"\\\\e[1;35m"}]
0x15d4=[{"size":62,"type":"s","str":"%s      ______                                       %s|xxx|\\\\n"}]
0x1614=[{"size":62,"type":"s","str":"%s     /|_||_\\\\\\\\`.__                                   %s| F |\\\\n"}]
0x1654=[{"size":62,"type":"s","str":"%s    (   _    _ _\\\\\\\\                                  %s|xxx|\\\\n"}]
0x168=[{"type":"C","str":"[02] -r-- section size 32 named .note.ABI-tag"}]
0x1694=[{"size":62,"type":"s","str":"%s*** =`-(_)--(_)-'                                  %s| I |\\\\n"}]
0x16d4=[{"size":60,"type":"s","str":"                                                   %s|xxx|\\\\n"}]
0x1710=[{"size":60,"type":"s","str":"                                                   %s| N |\\\\n"}]
0x174c=[{"size":60,"type":"s","str":"                                                   %s| I |\\\\n"}]
0x1788=[{"size":62,"type":"s","str":"%s             _-_-  _/\\\\\\\\______\\\\\\\\__                    %s| S |\\\\n"}]
0x17c8=[{"size":62,"type":"s","str":"%s           _-_-__ / ,-. -|-  ,-.`-.                %s|xxx|\\\\n"}]
0x1808=[{"size":62,"type":"s","str":"%s            _-_- `( o )----( o )-'                 %s| H |\\\\n"}]
0x1848=[{"size":62,"type":"s","str":"%s                   `-'      `-'                    %s|xxx|\\\\n"}]
0x188=[{"type":"C","str":"[03] -r-- section size 36 named .note.gnu.build-id"}]
0x1888=[{"size":113,"type":"s","str":"🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌"}]
0x18fc=[{"size":47,"type":"s","str":"\\\\n\\\\nSelect race:\\\\n1. Highway battle\\\\n2. Circuit\\\\n> "}]
0x192b=[{"size":26,"type":"s","str":"\\\\n%s[-] Invalid choice!%s\\\\n"}]
0x1948=[{"size":29,"type":"s","str":"\\\\n\\\\nSelect car:\\\\n1. 🚗\\\\n2. "}]
0x196c=[{"size":39,"type":"s","str":"\\\\n[*] Waiting for the race to finish..."}]
0x1994=[{"size":47,"type":"s","str":"%s\\\\n\\\\n[+] You won the race!! You get 100 coins!\\\\n"}]
0x19c3=[{"size":27,"type":"s","str":"[+] Current coins: [%d]%s\\\\n"}]
0x19de=[{"size":5,"type":"s","str":"\\\\e[0m"}]
0x19e4=[{"size":75,"type":"s","str":"\\\\n[!] Do you have anything to say to the press after your big victory?\\\\n> %s"}]
0x1a31=[{"size":9,"type":"s","str":"flag.txt"}]
0x1a3c=[{"size":60,"type":"s","str":"%s[-] Could not open flag.txt. Please contact the creator.\\\\n"}]
0x1a78=[{"size":106,"type":"s","str":"\\\\n\\\\e[3mThe Man, the Myth, the Legend! The grand winner of the race wants the whole world to know this: \\\\e[0m"}]
0x1ac=[{"type":"C","str":"[04] -r-- section size 32 named .gnu.hash"}]
0x1ae4=[{"size":47,"type":"s","str":"%s\\\\n\\\\n[-] You lost the race and all your coins!\\\\n"}]
0x1b13=[{"size":23,"type":"s","str":"\\\\n%sInsert your data:\\\\n\\\\n"}]
0x1b2a=[{"size":7,"type":"s","str":"Name: "}]
0x1b31=[{"size":11,"type":"s","str":"Nickname: "}]
0x1b3c=[{"size":90,"type":"s","str":"\\\\n%s[+] Welcome [%s%s%s]!\\\\n\\\\n%s[*] Your name is [%s%s%s] but everybody calls you.. [%s%s%s]!"}]
0x1b96=[{"size":26,"type":"s","str":"\\\\n[*] Current coins: [%d]\\\\n"}]
0x1bb0=[{"size":110,"type":"s","str":"\\\\n🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌🎌"}]
0x1c1e=[{"size":22,"type":"s","str":"\\\\nCar #1 stats:   🚗"}]
0x1c34=[{"size":37,"type":"s","str":"\\\\n[Speed]:        %s▋▋▋%s▋%s\\\\n"}]
0x1c5c=[{"size":40,"type":"s","str":"\\\\n[Acceleration]: %s▋▋▋%s▋▋%s\\\\n"}]
0x1c84=[{"size":51,"type":"s","str":"\\\\n[Handling]:     %s▋▋▋%s▋▋▋%s▋▋%s\\\\n"}]
0x1cb7=[{"size":21,"type":"s","str":"\\\\nCar #2 stats:   "}]
0x1cc=[{"type":"C","str":"[05] -r-- section size 432 named .dynsym"}]
0x1cd0=[{"size":54,"type":"s","str":"\\\\n[Speed]:        %s▋▋▋%s▋▋▋%s▋▋▋%s\\\\n"}]
0x1d08=[{"size":51,"type":"s","str":"\\\\n[Acceleration]: %s▋▋▋%s▋▋▋%s▋▋%s\\\\n"}]
0x1d3b=[{"size":29,"type":"s","str":"\\\\n[Handling]:     %s▋▋%s\\\\n"}]
0x1d58=[{"size":33,"type":"s","str":"\\\\n1. Car info\\\\n2. Car selection\\\\n> "}]
0x1d7c=[{"type":"C","str":"[17] -r-- section size 124 named .eh_frame_hdr"}]
0x1df8=[{"type":"C","str":"[18] -r-- section size 548 named .eh_frame"}]
0x37c=[{"type":"C","str":"[06] -r-- section size 299 named .dynstr"}]
0x3e8c=[{"size":4,"type":"d"},{"type":"C","str":"[19] -rw- section size 4 named .init_array"}]
0x3e90=[{"size":4,"type":"d"},{"type":"C","str":"[20] -rw- section size 4 named .fini_array"}]
0x3e94=[{"size":4,"type":"d","str":"4[62]"},{"type":"C","str":"[21] -rw- section size 248 named .dynamic"}]
0x3e98=[{"size":4,"type":"d","str":"4[62]"}]
0x3e9c=[{"size":4,"type":"d","str":"4[62]"}]
0x3ea0=[{"size":4,"type":"d","str":"4[62]"}]
0x3ea4=[{"size":4,"type":"d","str":"4[62]"}]
0x3ea8=[{"size":4,"type":"d","str":"4[62]"}]
0x3eac=[{"size":4,"type":"d","str":"4[62]"}]
0x3eb0=[{"size":4,"type":"d","str":"4[62]"}]
0x3eb4=[{"size":4,"type":"d","str":"4[62]"}]
0x3eb8=[{"size":4,"type":"d","str":"4[62]"}]
0x3ebc=[{"size":4,"type":"d","str":"4[62]"}]
0x3ec0=[{"size":4,"type":"d","str":"4[62]"}]
0x3ec4=[{"size":4,"type":"d","str":"4[62]"}]
0x3ec8=[{"size":4,"type":"d","str":"4[62]"}]
0x3ecc=[{"size":4,"type":"d","str":"4[62]"}]
0x3ed0=[{"size":4,"type":"d","str":"4[62]"}]
0x3ed4=[{"size":4,"type":"d","str":"4[62]"}]
0x3ed8=[{"size":4,"type":"d","str":"4[62]"}]
0x3edc=[{"size":4,"type":"d","str":"4[62]"}]
0x3ee0=[{"size":4,"type":"d","str":"4[62]"}]
0x3ee4=[{"size":4,"type":"d","str":"4[62]"}]
0x3ee8=[{"size":4,"type":"d","str":"4[62]"}]
0x3eec=[{"size":4,"type":"d","str":"4[62]"}]
0x3ef0=[{"size":4,"type":"d","str":"4[62]"}]
0x3ef4=[{"size":4,"type":"d","str":"4[62]"}]
0x3ef8=[{"size":4,"type":"d","str":"4[62]"}]
0x3efc=[{"size":4,"type":"d","str":"4[62]"}]
0x3f00=[{"size":4,"type":"d","str":"4[62]"}]
0x3f04=[{"size":4,"type":"d","str":"4[62]"}]
0x3f08=[{"size":4,"type":"d","str":"4[62]"}]
0x3f0c=[{"size":4,"type":"d","str":"4[62]"}]
0x3f10=[{"size":4,"type":"d","str":"4[62]"}]
0x3f14=[{"size":4,"type":"d","str":"4[62]"}]
0x3f18=[{"size":4,"type":"d","str":"4[62]"}]
0x3f1c=[{"size":4,"type":"d","str":"4[62]"}]
0x3f20=[{"size":4,"type":"d","str":"4[62]"}]
0x3f24=[{"size":4,"type":"d","str":"4[62]"}]
0x3f28=[{"size":4,"type":"d","str":"4[62]"}]
0x3f2c=[{"size":4,"type":"d","str":"4[62]"}]
0x3f30=[{"size":4,"type":"d","str":"4[62]"}]
0x3f34=[{"size":4,"type":"d","str":"4[62]"}]
0x3f38=[{"size":4,"type":"d","str":"4[62]"}]
0x3f3c=[{"size":4,"type":"d","str":"4[62]"}]
0x3f40=[{"size":4,"type":"d","str":"4[62]"}]
0x3f44=[{"size":4,"type":"d","str":"4[62]"}]
0x3f48=[{"size":4,"type":"d","str":"4[62]"}]
0x3f4c=[{"size":4,"type":"d","str":"4[62]"}]
0x3f50=[{"size":4,"type":"d","str":"4[62]"}]
0x3f54=[{"size":4,"type":"d","str":"4[62]"}]
0x3f58=[{"size":4,"type":"d","str":"4[62]"}]
0x3f5c=[{"size":4,"type":"d","str":"4[62]"}]
0x3f60=[{"size":4,"type":"d","str":"4[62]"}]
0x3f64=[{"size":4,"type":"d","str":"4[62]"}]
0x3f68=[{"size":4,"type":"d","str":"4[62]"}]
0x3f6c=[{"size":4,"type":"d","str":"4[62]"}]
0x3f70=[{"size":4,"type":"d","str":"4[62]"}]
0x3f74=[{"size":4,"type":"d","str":"4[62]"}]
0x3f78=[{"size":4,"type":"d","str":"4[62]"}]
0x3f7c=[{"size":4,"type":"d","str":"4[62]"}]
0x3f80=[{"size":4,"type":"d","str":"4[62]"}]
0x3f84=[{"size":4,"type":"d","str":"4[62]"}]
0x3f88=[{"size":4,"type":"d","str":"4[62]"}]
0x3f8c=[{"size":4,"type":"d","str":"4[29]"},{"type":"C","str":"[22] -rw- section size 116 named .got"}]
0x3f90=[{"size":4,"type":"d","str":"4[29]"}]
0x3f94=[{"size":4,"type":"d","str":"4[29]"}]
0x3f98=[{"size":4,"type":"d"}]
0x3f9c=[{"size":4,"type":"d"}]
0x3fa0=[{"size":4,"type":"d"}]
0x3fa4=[{"size":4,"type":"d"}]
0x3fa8=[{"size":4,"type":"d"}]
0x3fac=[{"size":4,"type":"d"}]
0x3fb0=[{"size":4,"type":"d"}]
0x3fb4=[{"size":4,"type":"d"}]
0x3fb8=[{"size":4,"type":"d"}]
0x3fbc=[{"size":4,"type":"d"}]
0x3fc0=[{"size":4,"type":"d"}]
0x3fc4=[{"size":4,"type":"d"}]
0x3fc8=[{"size":4,"type":"d"}]
0x3fcc=[{"size":4,"type":"d"}]
0x3fd0=[{"size":4,"type":"d"}]
0x3fd4=[{"size":4,"type":"d"}]
0x3fd8=[{"size":4,"type":"d"}]
0x3fdc=[{"size":4,"type":"d"}]
0x3fe0=[{"size":4,"type":"d"}]
0x3fe4=[{"size":4,"type":"d"}]
0x3fe8=[{"size":4,"type":"d"}]
0x3fec=[{"size":4,"type":"d"}]
0x3ff0=[{"size":4,"type":"d"}]
0x3ff4=[{"size":4,"type":"d"}]
0x3ff8=[{"size":4,"type":"d"}]
0x3ffc=[{"size":4,"type":"d"}]
0x4000=[{"type":"C","str":"[23] -rw- section size 16 named .data"}]
0x4004=[{"size":4,"type":"d"}]
0x4010=[{"type":"C","str":"[24] -rw- section size 4 named .bss"}]
0x401c=[{"size":4,"type":"d"}]
0x4020=[{"size":4,"type":"d"}]
0x4024=[{"size":4,"type":"d"}]
0x4028=[{"size":4,"type":"d"}]
0x402c=[{"size":4,"type":"d"}]
0x4030=[{"size":4,"type":"d"}]
0x4034=[{"size":4,"type":"d"}]
0x4038=[{"size":4,"type":"d"}]
0x403c=[{"size":4,"type":"d"}]
0x4040=[{"size":4,"type":"d"}]
0x4044=[{"size":4,"type":"d"}]
0x4048=[{"size":4,"type":"d"}]
0x404c=[{"size":4,"type":"d"}]
0x4050=[{"size":4,"type":"d"}]
0x4054=[{"size":4,"type":"d"}]
0x4058=[{"size":4,"type":"d"}]
0x405c=[{"size":4,"type":"d"}]
0x4060=[{"size":4,"type":"d"}]
0x4064=[{"size":4,"type":"d"}]
0x4068=[{"size":4,"type":"d"}]
0x406c=[{"size":4,"type":"d"}]
0x4070=[{"size":4,"type":"d"}]
0x4074=[{"size":4,"type":"d"}]
0x4078=[{"size":4,"type":"d"}]
0x407c=[{"size":4,"type":"d"}]
0x4080=[{"size":4,"type":"d"}]
0x4084=[{"size":4,"type":"d"}]
0x4088=[{"size":4,"type":"d"}]
0x408c=[{"size":4,"type":"d"}]
0x4a8=[{"type":"C","str":"[07] -r-- section size 54 named .gnu.version"}]
0x4e0=[{"type":"C","str":"[08] -r-- section size 80 named .gnu.version_r"}]
0x530=[{"type":"C","str":"[09] -r-- section size 80 named .rel.dyn"}]
0x580=[{"type":"C","str":"[10] -r-- section size 152 named .rel.plt"}]
0x618=[{"type":"C","str":"[11] -r-x section size 35 named .init"}]
0x640=[{"type":"C","str":"[12] -r-x section size 320 named .plt"}]
0x780=[{"type":"C","str":"[13] -r-x section size 16 named .plt.got"}]
0x790=[{"type":"C","str":"[14] -r-x section size 3460 named .text"}]
0x7ac=[{"type":"t","str":"void *fini"}]
0x7b3=[{"type":"t","str":"void *init"}]
0x7b4=[{"type":"t","str":"char **ubp_av"}]
0x7b5=[{"type":"t","str":"int argc"}]
0x7b6=[{"type":"t","str":"void *main"}]
0x8f4=[{"type":"t","str":"size_t nbyte"}]
0x8f9=[{"type":"t","str":"void *buf"}]
0x8fa=[{"type":"t","str":"int fildes"}]
0x90a=[{"type":"t","str":"const char *str"}]
0x976=[{"type":"t","str":"time_t *timer"}]
0x983=[{"type":"t","str":"int seed"}]
0x9e9=[{"type":"t","str":"const char *s2"}]
0x9ec=[{"type":"t","str":"const char *s1"}]
0xa04=[{"type":"t","str":"const char *s"}]
0xa20=[{"type":"t","str":"const char *format"}]
0xa3c=[{"type":"t","str":"const char *format"}]
0xa58=[{"type":"t","str":"const char *format"}]
0xa74=[{"type":"t","str":"const char *format"}]
0xa8d=[{"type":"t","str":"const char *format"}]
0xaa6=[{"type":"t","str":"const char *format"}]
0xabf=[{"type":"t","str":"const char *format"}]
0xad8=[{"type":"t","str":"const char *format"}]
0xaf1=[{"type":"t","str":"const char *format"}]
0xb0d=[{"type":"t","str":"const char *format"}]
0xb29=[{"type":"t","str":"const char *format"}]
0xb45=[{"type":"t","str":"const char *format"}]
0xb61=[{"type":"t","str":"const char *format"}]
0xb73=[{"type":"t","str":"const char *s"}]
0xbb8=[{"type":"t","str":"size_t size"}]
0xbba=[{"type":"t","str":"int mode"}]
0xbbc=[{"type":"t","str":"char *buf"}]
0xbbe=[{"type":"t","str":"FILE *stream"}]
0xbcf=[{"type":"t","str":"size_t size"}]
0xbd1=[{"type":"t","str":"int mode"}]
0xbd3=[{"type":"t","str":"char *buf"}]
0xbd5=[{"type":"t","str":"FILE *stream"}]
0xc2f=[{"type":"t","str":"const char *format"}]
0xc63=[{"type":"t","str":"const char *format"}]
0xccc=[{"type":"t","str":"const char *format"}]
0xd00=[{"type":"t","str":"const char *format"}]
0xd20=[{"type":"t","str":"time_t *timer"}]
0xd2d=[{"type":"t","str":"int seed"}]
0xea4=[{"type":"t","str":"int c"}]
0xebf=[{"type":"t","str":"int s"}]
0xed0=[{"type":"t","str":"const char *s"}]
0xf18=[{"type":"t","str":"const char *format"}]
0xf47=[{"type":"t","str":"const char *format"}]
0xf60=[{"type":"t","str":"const char *format"}]
0xf6c=[{"type":"t","str":"size_t size"}]
0xf85=[{"type":"t","str":"const char *mode"}]
0xf8c=[{"type":"t","str":"const char *filename"}]
0xfae=[{"type":"t","str":"const char *format"}]
0xfba=[{"type":"t","str":"int status"}]
0xfc4=[{"type":"t","str":"FILE *stream"}]
0xfc7=[{"type":"t","str":"int size"}]
0xfcc=[{"type":"t","str":"char *s"}]
0xfd8=[{"type":"t","str":"size_t nbyte"}]
0xfdd=[{"type":"t","str":"void *buf"}]
0xfe0=[{"type":"t","str":"int fildes"}]
0xff3=[{"type":"t","str":"const char *s"}]
0xfff=[{"type":"t","str":"const char *format"}]

/core/analysis/meta/spaces
name=CS
spacestack=["*"]

/core/analysis/meta/spaces/spaces
bin=s

/core/analysis/noreturn

/core/analysis/pins

/core/analysis/typelinks

/core/analysis/types
FILE=typedef
__div_t=struct
__idtype=enum
__imaxdiv_t=struct
__ldiv_t=struct
__lldiv_t=struct
__siginfo_t=struct
__sigset_t=struct
_fd_set=struct
bool=type
char=type
char *=type
char16_t=type
char32_t=type
char8_t=type
clock_t=typedef
div_t=typedef
double=type
enum.__idtype=P_ALL,P_GID,P_PGID
enum.__idtype.0x0=P_ALL
enum.__idtype.0x1=P_GID
enum.__idtype.0x2=P_PGID
enum.__idtype.P_ALL=0x0
enum.__idtype.P_GID=0x1
enum.__idtype.P_PGID=0x2
fd_mask=typedef
fd_set=typedef
fenv_t=typedef
fexcept_t=typedef
float=type
fpos_t=typedef
gid_t=type
id_t=type
idtype_t=typedef
imaxdiv_t=typedef
int=type
int16_t=type
int32_t=type
int64_t=type
int8_t=type
intmax_t=type
intptr_t=type
jmp_buf=typedef
lconv=struct
ldiv_t=typedef
lldiv_t=typedef
locale_t=typedef
long=type
long double=type
long int=type
long long=type
long long int=type
mbstate_t=typedef
nl_item=typedef
pid_t=type
ptrdiff_t=type
short=type
sigaction=struct
siginfo_t=typedef
sigset_t=typedef
sigval=union
size_t=type
sockaddr=struct
socklen_t=typedef
ssize_t=type
std__type_info=struct
struct.__div_t=quot,rem
struct.__div_t.quot=int,0,0
struct.__div_t.rem=int,2,0
struct.__imaxdiv_t=quot,rem
struct.__imaxdiv_t.quot=intmax_t,0,0
struct.__imaxdiv_t.rem=intmax_t,8,0
struct.__ldiv_t=quot,rem
struct.__ldiv_t.quot=long int,0,0
struct.__ldiv_t.rem=long int,4,0
struct.__lldiv_t=quot,rem
struct.__lldiv_t.quot=long long int,0,0
struct.__lldiv_t.rem=long long int,4,0
struct.__siginfo_t=si_signo,si_code,si_value,si_errno,si_pid,si_uid,si_addr,si_status,si_band
struct.__siginfo_t.si_addr=void *,28,0
struct.__siginfo_t.si_band=int,36,0
struct.__siginfo_t.si_code=int,4,0
struct.__siginfo_t.si_errno=int,16,0
struct.__siginfo_t.si_pid=pid_t,20,0
struct.__siginfo_t.si_signo=int,0,0
struct.__siginfo_t.si_status=int,32,0
struct.__siginfo_t.si_uid=uid_t,24,0
struct.__siginfo_t.si_value=union sigval,8,0
struct.__sigset_t=sig
struct.__sigset_t.sig=unsigned long,0,0
struct._fd_set=fds_bits
struct._fd_set.fds_bits=fd_mask,0,0
struct.sigaction=sa_handler,sa_flags,sa_restorer,sa_mask
struct.sigaction.sa_flags=unsigned long,8,0
struct.sigaction.sa_handler=void *,0,0
struct.sigaction.sa_mask=sigset_t,20,0
struct.sigaction.sa_restorer=void *,12,0
struct.timespec=tv_sec,tv_nsec
struct.timespec.tv_nsec=long,8,0
struct.timespec.tv_sec=time_t,0,0
struct.timeval=tv_sec,tv_usec
struct.timeval.tv_sec=time_t,0,0
struct.timeval.tv_usec=suseconds_t,8,0
struct.tm=tm_sec,tm_min,tm_hour,tm_mday,tm_mon,tm_year,tm_wday,tm_yday,tm_isdst
struct.tm.tm_hour=int,8,0
struct.tm.tm_isdst=int,32,0
struct.tm.tm_mday=int,12,0
struct.tm.tm_min=int,4,0
struct.tm.tm_mon=int,16,0
struct.tm.tm_sec=int,0,0
struct.tm.tm_wday=int,24,0
struct.tm.tm_yday=int,28,0
struct.tm.tm_year=int,20,0
suseconds_t=typedef
time_t=typedef
timespec=struct
timeval=struct
tm=struct
type.bool=b
type.bool.size=8
type.bool.typeclass=None
type.char=c
type.char *=z
type.char *.size=32
type.char *.typeclass=None
type.char.size=8
type.char.typeclass=Signed Integral
type.char16_t=c
type.char16_t.size=16
type.char16_t.typeclass=Signed Integral
type.char32_t=c
type.char32_t.size=32
type.char32_t.typeclass=Signed Integral
type.char8_t=c
type.char8_t.size=8
type.char8_t.typeclass=Signed Integral
type.double=F
type.double.size=64
type.double.typeclass=Floating
type.float=f
type.float.size=32
type.float.typeclass=Floating
type.gid_t=d
type.gid_t.size=32
type.gid_t.typeclass=Integral
type.id_t=d
type.id_t.size=32
type.id_t.typeclass=Integral
type.int=d
type.int.size=32
type.int.typeclass=Signed Integral
type.int16_t=w
type.int16_t.size=16
type.int16_t.typeclass=Signed Integral
type.int32_t=d
type.int32_t.size=32
type.int32_t.typeclass=Signed Integral
type.int64_t=q
type.int64_t.size=64
type.int64_t.typeclass=Signed Integral
type.int8_t=b
type.int8_t.size=8
type.int8_t.typeclass=Signed Integral
type.intmax_t=q
type.intmax_t.size=64
type.intmax_t.typeclass=Signed Integral
type.intptr_t=d
type.intptr_t.size=32
type.intptr_t.typeclass=Signed Integral
type.long=x
type.long double=F
type.long double.size=64
type.long double.typeclass=Floating
type.long int=x
type.long int.size=64
type.long int.typeclass=Signed Integral
type.long long=q
type.long long int=q
type.long long int.size=64
type.long long int.typeclass=Signed Integral
type.long long.size=64
type.long long.typeclass=Signed Integral
type.long.size=64
type.long.typeclass=Signed Integral
type.pid_t=d
type.pid_t.size=32
type.pid_t.typeclass=Integral
type.ptrdiff_t=d
type.ptrdiff_t.size=32
type.ptrdiff_t.typeclass=Integral
type.short=w
type.short.size=16
type.short.typeclass=Signed Integral
type.size_t=d
type.size_t.size=32
type.size_t.typeclass=Unsigned Integral
type.ssize_t=d
type.ssize_t.size=32
type.ssize_t.typeclass=Signed Integral
type.uid_t=d
type.uid_t.size=32
type.uid_t.typeclass=Integral
type.uint16_t=w
type.uint16_t.size=16
type.uint16_t.typeclass=Unsigned Integral
type.uint32_t=d
type.uint32_t.size=32
type.uint32_t.typeclass=Unsigned Integral
type.uint64_t=q
type.uint64_t.size=64
type.uint64_t.typeclass=Unsigned Integral
type.uint8_t=b
type.uint8_t.size=8
type.uint8_t.typeclass=Unsigned Integral
type.uintmax_t=q
type.uintmax_t.size=64
type.uintmax_t.typeclass=Unsigned Integral
type.uintptr_t=d
type.uintptr_t.size=32
type.uintptr_t.typeclass=Unsigned Integral
type.unknown_t=d
type.unknown_t.size=32
type.unknown_t.typeclass=Integral
type.unsigned char=b
type.unsigned char.size=8
type.unsigned char.typeclass=Unsigned Integral
type.unsigned int=i
type.unsigned int.size=32
type.unsigned int.typeclass=Unsigned Integral
type.unsigned long=d
type.unsigned long long=q
type.unsigned long long.size=64
type.unsigned long long.typeclass=Unsigned Integral
type.unsigned long.size=32
type.unsigned long.typeclass=Unsigned Integral
type.unsigned short=w
type.unsigned short.size=16
type.unsigned short.typeclass=Unsigned Integral
type.void *=p
type.void *.size=32
type.void *.typeclass=None
type.void.size=0
type.void.typeclass=None
typedef.FILE=void
typedef.clock_t=void
typedef.div_t=struct __div_t
typedef.fd_mask=long int
typedef.fd_set=struct _fd_set
typedef.fenv_t=void
typedef.fexcept_t=void
typedef.fpos_t=void
typedef.idtype_t=__idtype
typedef.imaxdiv_t=struct __imaxdiv_t
typedef.jmp_buf=void
typedef.ldiv_t=struct __ldiv_t
typedef.lldiv_t=struct __lldiv_t
typedef.locale_t=void
typedef.mbstate_t=void
typedef.nl_item=int
typedef.siginfo_t=struct __siginfo_t
typedef.sigset_t=struct __sigset_t
typedef.socklen_t=int
typedef.suseconds_t=long
typedef.time_t=long
typedef.va_list=char *
typedef.wchar_t=int
typedef.wctrans_t=unsigned int
typedef.wctype_t=int
typedef.wint_t=int
uid_t=type
uint16_t=type
uint32_t=type
uint64_t=type
uint8_t=type
uintmax_t=type
uintptr_t=type
union.sigval=sival_int,sival_ptr
union.sigval.sival_int=int,0,0
union.sigval.sival_ptr=void *,0,0
unknown_t=type
unsigned char=type
unsigned int=type
unsigned long=type
unsigned long long=type
unsigned short=type
va_list=typedef
void=type
void *=type
wchar_t=typedef
wctrans_t=typedef
wctype_t=typedef
wint_t=typedef

/core/analysis/vars

/core/analysis/xrefs
0x0=[{"to":71,"type":"c"}]
0x100=[{"to":287,"type":"c"}]
0x1002=[{"to":1648,"type":"C"}]
0x100a=[{"to":4203,"type":"c"}]
0x1010=[{"to":4122,"type":"c"}]
0x1018=[{"to":4136,"type":"c"}]
0x101e=[{"to":4203,"type":"c"}]
0x1026=[{"to":4203,"type":"c"}]
0x1039=[{"to":1648,"type":"C"}]
0x104=[{"to":262,"type":"c"}]
0x1063=[{"to":1648,"type":"C"}]
0x1076=[{"to":4221,"type":"c"}]
0x1078=[{"to":5376,"type":"C"}]
0x108=[{"to":266,"type":"c"}]
0x1089=[{"to":2000,"type":"C"}]
0x10a2=[{"to":32,"type":"d"}]
0x10a4=[{"to":1744,"type":"C"}]
0x10b2=[{"to":32,"type":"d"}]
0x10b4=[{"to":1744,"type":"C"}]
0x10d0=[{"to":1648,"type":"C"}]
0x10e2=[{"to":1648,"type":"C"}]
0x10ed=[{"to":31,"type":"d"}]
0x10f2=[{"to":0,"type":"d"}]
0x10f4=[{"to":1632,"type":"C"}]
0x1102=[{"to":1808,"type":"C"}]
0x111f=[{"to":1648,"type":"C"}]
0x112a=[{"to":31,"type":"d"}]
0x112f=[{"to":0,"type":"d"}]
0x1131=[{"to":1632,"type":"C"}]
0x113f=[{"to":1808,"type":"C"}]
0x119a=[{"to":1648,"type":"C"}]
0x11b3=[{"to":1648,"type":"C"}]
0x11c6=[{"to":4557,"type":"c"}]
0x11c8=[{"to":5376,"type":"C"}]
0x11d9=[{"to":2000,"type":"C"}]
0x11f9=[{"to":1760,"type":"C"}]
0x120b=[{"to":1760,"type":"C"}]
0x122f=[{"to":1648,"type":"C"}]
0x1253=[{"to":1648,"type":"C"}]
0x1281=[{"to":1648,"type":"C"}]
0x1293=[{"to":1760,"type":"C"}]
0x12a5=[{"to":1760,"type":"C"}]
0x12d3=[{"to":1648,"type":"C"}]
0x1301=[{"to":1648,"type":"C"}]
0x1321=[{"to":1648,"type":"C"}]
0x1333=[{"to":1760,"type":"C"}]
0x1346=[{"to":4941,"type":"c"}]
0x1348=[{"to":5376,"type":"C"}]
0x1359=[{"to":2000,"type":"C"}]
0x136=[{"to":412,"type":"c"}]
0x1380=[{"to":1648,"type":"C"}]
0x1388=[{"to":2253,"type":"C"}]
0x1394=[{"to":5052,"type":"c"}]
0x139a=[{"to":5052,"type":"c"}]
0x13b4=[{"to":1648,"type":"C"}]
0x13c0=[{"to":5064,"type":"c"}]
0x13c6=[{"to":4982,"type":"c"}]
0x13d5=[{"to":5084,"type":"c"}]
0x13d7=[{"to":5376,"type":"C"}]
0x13f3=[{"to":2000,"type":"C"}]
0x1409=[{"to":2963,"type":"C"}]
0x140e=[{"to":2345,"type":"C"}]
0x1413=[{"to":4226,"type":"C"}]
0x1418=[{"to":5219,"type":"c"}]
0x141a=[{"to":4946,"type":"C"}]
0x141f=[{"to":1,"type":"d"}]
0x1422=[{"to":5163,"type":"c"}]
0x1424=[{"to":2,"type":"d"}]
0x1427=[{"to":5170,"type":"c"}]
0x1429=[{"to":5187,"type":"c"}]
0x142b=[{"to":4562,"type":"C"}]
0x1430=[{"to":5219,"type":"c"}]
0x143c=[{"to":3217,"type":"C"}]
0x144=[{"to":327,"type":"c"}]
0x1441=[{"to":5219,"type":"c"}]
0x145b=[{"to":1648,"type":"C"}]
0x146b=[{"to":5146,"type":"c"}]
0x1478=[{"to":5247,"type":"c"}]
0x147a=[{"to":5376,"type":"C"}]
0x148=[{"to":331,"type":"c"}]
0x1494=[{"to":2000,"type":"C"}]
0x14ac=[{"to":1560,"type":"C"}]
0x14be=[{"to":5349,"type":"c"}]
0x14e3=[{"to":5320,"type":"c"}]
0x1501=[{"to":2000,"type":"C"}]
0x150f=[{"to":1728,"type":"C"}]
0x1518=[{"to":2000,"type":"C"}]
0x15cf=[{"to":109,"type":"d"}]
0x160e=[{"to":5772,"type":"c"}]
0x161c=[{"to":5757,"type":"c"}]
0x161e=[{"to":5788,"type":"c"}]
0x168e=[{"to":5900,"type":"c"}]
0x170c=[{"to":6026,"type":"c"}]
0x1802=[{"to":6272,"type":"c"}]
0x1882=[{"to":6400,"type":"c"}]
0x1919=[{"to":6535,"type":"c"}]
0x1922=[{"to":6535,"type":"c"}]
0x1924=[{"to":6543,"type":"c"}]
0x1926=[{"to":6450,"type":"c"}]
0x1934=[{"to":6551,"type":"c"}]
0x193f=[{"to":2675,"type":"d"}]
0x1953=[{"to":6543,"type":"c"}]
0x197b=[{"to":6557,"type":"c"}]
0x197d=[{"to":6631,"type":"c"}]
0x1986=[{"to":6647,"type":"c"}]
0x199e=[{"to":6592,"type":"c"}]
0x19a0=[{"to":6673,"type":"c"}]
0x19b1=[{"to":6611,"type":"c"}]
0x19b3=[{"to":6615,"type":"c"}]
0x19bf=[{"to":6626,"type":"c"}]
0x19c8=[{"to":6716,"type":"c"}]
0x19ca=[{"to":6705,"type":"c"}]
0x19cd=[{"to":6639,"type":"c"}]
0x19d3=[{"to":6671,"type":"c"}]
0x19e=[{"to":196,"type":"d"}]
0x19ee=[{"to":6672,"type":"c"}]
0x19f7=[{"to":6765,"type":"c"}]
0x19fe=[{"to":6767,"type":"c"}]
0x1a03=[{"to":6693,"type":"c"}]
0x1a05=[{"to":6774,"type":"c"}]
0x1a0e=[{"to":6788,"type":"c"}]
0x1a14=[{"to":6779,"type":"c"}]
0x1a16=[{"to":6712,"type":"c"}]
0x1a18=[{"to":6793,"type":"c"}]
0x1a1a=[{"to":6798,"type":"c"}]
0x1a27=[{"to":6760,"type":"c"}]
0x1a34=[{"to":6832,"type":"c"}]
0x1a38=[{"to":6714,"type":"c"}]
0x1a44=[{"to":6834,"type":"c"}]
0x1a4a=[{"to":6764,"type":"c"}]
0x1a4d=[{"to":6836,"type":"c"}]
0x1a54=[{"to":6864,"type":"c"}]
0x1a58=[{"to":6792,"type":"c"}]
0x1a5f=[{"to":6854,"type":"c"}]
0x1a65=[{"to":6856,"type":"c"}]
0x1a72=[{"to":6883,"type":"c"}]
0x1a74=[{"to":6820,"type":"c"}]
0x1a84=[{"to":32,"type":"d"}]
0x1a86=[{"to":6896,"type":"c"}]
0x1a8c=[{"to":6902,"type":"c"}]
0x1a8e=[{"to":32,"type":"d"}]
0x1a90=[{"to":6906,"type":"c"}]
0x1aaa=[{"to":6861,"type":"c"}]
0x1ab9=[{"to":6940,"type":"c"}]
0x1abc=[{"to":6961,"type":"c"}]
0x1acb=[{"to":6969,"type":"c"}]
0x1ada=[{"to":6934,"type":"c"}]
0x1aee=[{"to":6928,"type":"c"}]
0x1af2=[{"to":7016,"type":"c"}]
0x1b08=[{"to":7036,"type":"c"}]
0x1b19=[{"to":7056,"type":"c"}]
0x1b1f=[{"to":7059,"type":"c"}]
0x1b4d=[{"to":7028,"type":"c"}]
0x1b4f=[{"to":7030,"type":"c"}]
0x1b51=[{"to":7088,"type":"c"}]
0x1b5e=[{"to":7122,"type":"c"}]
0x1b6b=[{"to":7058,"type":"c"}]
0x1b6d=[{"to":7060,"type":"c"}]
0x1b6f=[{"to":7118,"type":"c"}]
0x1b74=[{"to":7062,"type":"c"}]
0x1b76=[{"to":7134,"type":"c"}]
0x1b79=[{"to":7156,"type":"c"}]
0x1b7e=[{"to":7072,"type":"c"}]
0x1b84=[{"to":7078,"type":"c"}]
0x1b86=[{"to":7159,"type":"c"}]
0x1b88=[{"to":7096,"type":"c"}]
0x1b8e=[{"to":7093,"type":"c"}]
0x1b90=[{"to":7095,"type":"c"}]
0x1b92=[{"to":7153,"type":"c"}]
0x1b9d=[{"to":7185,"type":"c"}]
0x1ba1=[{"to":7107,"type":"c"}]
0x1ba7=[{"to":7139,"type":"c"}]
0x1c26=[{"to":7324,"type":"c"}]
0x1c29=[{"to":7326,"type":"c"}]
0x1c4a=[{"to":7138,"type":"c"}]
0x1c55=[{"to":2675,"type":"d"}]
0x1c63=[{"to":7367,"type":"c"}]
0x1c66=[{"to":7377,"type":"c"}]
0x1c72=[{"to":7178,"type":"c"}]
0x1c7d=[{"to":7189,"type":"c"}]
0x1c9a=[{"to":7218,"type":"c"}]
0x1ca5=[{"to":7229,"type":"c"}]
0x1cb0=[{"to":7240,"type":"c"}]
0x1cba=[{"to":7388,"type":"c"}]
0x1cc2=[{"to":7479,"type":"c"}]
0x1cd3=[{"to":7482,"type":"c"}]
0x1ce6=[{"to":7294,"type":"c"}]
0x1cf1=[{"to":7305,"type":"c"}]
0x1cfc=[{"to":7316,"type":"c"}]
0x1d01=[{"to":2675,"type":"d"}]
0x1d0f=[{"to":7539,"type":"c"}]
0x1d12=[{"to":7549,"type":"c"}]
0x1d1e=[{"to":7350,"type":"c"}]
0x1d29=[{"to":7361,"type":"c"}]
0x1d34=[{"to":7372,"type":"c"}]
0x1d51=[{"to":7401,"type":"c"}]
0x1d5e=[{"to":7552,"type":"c"}]
0x1d6a=[{"to":7564,"type":"c"}]
0x1d6c=[{"to":7635,"type":"c"}]
0x1d90=[{"to":234,"type":"d"}]
0x1d99=[{"to":7578,"type":"c"}]
0x1e05=[{"to":7695,"type":"c"}]
0x1e0b=[{"to":136,"type":"d"}]
0x1e25=[{"to":74,"type":"d"}]
0x1e29=[{"to":7727,"type":"c"}]
0x1e2b=[{"to":7725,"type":"c"}]
0x1e32=[{"to":34,"type":"d"}]
0x1e70=[{"to":7794,"type":"c"}]
0x1e74=[{"to":234,"type":"d"}]
0x1e77=[{"to":2,"type":"c"}]
0x1e8f=[{"to":32,"type":"d"}]
0x1ee0=[{"to":237,"type":"d"}]
0x1f04=[{"to":7927,"type":"c"}]
0x1f07=[{"to":1,"type":"C"}]
0x1f1f=[{"to":32,"type":"d"}]
0x1f3d=[{"to":8000,"type":"c"}]
0x1f43=[{"to":32,"type":"d"}]
0x1f6c=[{"to":8047,"type":"c"}]
0x1f70=[{"to":8038,"type":"c"}]
0x1fa0=[{"to":1,"type":"d"}]
0x1fc6=[{"to":65,"type":"d"}]
0x1fdd=[{"to":65,"type":"d"}]
0x20=[{"to":59,"type":"d"}]
0x23c=[{"to":574,"type":"c"}]
0x370=[{"to":21,"type":"d"}]
0x382=[{"to":1011,"type":"c"}]
0x38b=[{"to":1025,"type":"c"}]
0x3a3=[{"to":1034,"type":"c"}]
0x3a9=[{"to":1054,"type":"c"}]
0x3b3=[{"to":1048,"type":"c"}]
0x3ba=[{"to":1056,"type":"c"}]
0x3c3=[{"to":1067,"type":"c"}]
0x3c8=[{"to":1086,"type":"c"}]
0x3ce=[{"to":1084,"type":"c"}]
0x3dc=[{"to":1106,"type":"c"}]
0x3e9=[{"to":1112,"type":"c"}]
0x3f5=[{"to":1015,"type":"c"}]
0x403=[{"to":1130,"type":"c"}]
0x408=[{"to":1152,"type":"c"}]
0x410=[{"to":1141,"type":"c"}]
0x413=[{"to":1045,"type":"c"}]
0x41f=[{"to":1173,"type":"c"}]
0x467=[{"to":1232,"type":"c"}]
0x485=[{"to":1275,"type":"c"}]
0x488=[{"to":1278,"type":"c"}]
0x492=[{"to":1273,"type":"c"}]
0x548=[{"to":64,"type":"d"}]
0x5a0=[{"to":63,"type":"d"}]
0x5b0=[{"to":63,"type":"d"}]
0x5e0=[{"to":63,"type":"d"}]
0x610=[{"to":1617,"type":"c"}]
0x61c=[{"to":2000,"type":"C"}]
0x631=[{"to":1928,"type":"C"}]
0x650=[{"to":12,"type":"c"}]
0x65b=[{"to":1600,"type":"c"}]
0x660=[{"to":16,"type":"c"}]
0x666=[{"to":8,"type":"d"}]
0x66b=[{"to":1600,"type":"c"}]
0x670=[{"to":20,"type":"c"}]
0x676=[{"to":16,"type":"d"}]
0x67b=[{"to":1600,"type":"c"}]
0x680=[{"to":24,"type":"c"}]
0x686=[{"to":24,"type":"d"}]
0x68b=[{"to":1600,"type":"c"}]
0x690=[{"to":28,"type":"c"}]
0x696=[{"to":32,"type":"d"}]
0x69b=[{"to":1600,"type":"c"}]
0x6a0=[{"to":32,"type":"c"}]
0x6a6=[{"to":40,"type":"d"}]
0x6ab=[{"to":1600,"type":"c"}]
0x6b0=[{"to":36,"type":"c"}]
0x6b6=[{"to":48,"type":"d"}]
0x6bb=[{"to":1600,"type":"c"}]
0x6c0=[{"to":40,"type":"c"}]
0x6c6=[{"to":56,"type":"d"}]
0x6cb=[{"to":1600,"type":"c"}]
0x6d0=[{"to":44,"type":"c"}]
0x6d6=[{"to":64,"type":"d"}]
0x6db=[{"to":1600,"type":"c"}]
0x6e0=[{"to":48,"type":"c"}]
0x6e6=[{"to":72,"type":"d"}]
0x6eb=[{"to":1600,"type":"c"}]
0x6f0=[{"to":52,"type":"c"}]
0x6f6=[{"to":80,"type":"d"}]
0x6fb=[{"to":1600,"type":"c"}]
0x700=[{"to":56,"type":"c"}]
0x706=[{"to":88,"type":"d"}]
0x70b=[{"to":1600,"type":"c"}]
0x710=[{"to":60,"type":"c"}]
0x716=[{"to":96,"type":"d"}]
0x71b=[{"to":1600,"type":"c"}]
0x720=[{"to":64,"type":"c"}]
0x726=[{"to":104,"type":"d"}]
0x72b=[{"to":1600,"type":"c"}]
0x730=[{"to":68,"type":"c"}]
0x736=[{"to":112,"type":"d"}]
0x73b=[{"to":1600,"type":"c"}]
0x740=[{"to":72,"type":"c"}]
0x746=[{"to":120,"type":"d"}]
0x74b=[{"to":1600,"type":"c"}]
0x750=[{"to":76,"type":"c"}]
0x756=[{"to":128,"type":"d"}]
0x75b=[{"to":1600,"type":"c"}]
0x760=[{"to":80,"type":"c"}]
0x766=[{"to":136,"type":"d"}]
0x76b=[{"to":1600,"type":"c"}]
0x770=[{"to":84,"type":"c"}]
0x776=[{"to":144,"type":"d"}]
0x77b=[{"to":1600,"type":"c"}]
0x780=[{"to":92,"type":"c"}]
0x788=[{"to":96,"type":"c"}]
0x79b=[{"to":1986,"type":"C"}]
0x7bc=[{"to":1824,"type":"C"}]
0x7e0=[{"to":2249,"type":"C"}]
0x7f9=[{"to":2072,"type":"c"}]
0x803=[{"to":2072,"type":"c"}]
0x820=[{"to":2249,"type":"C"}]
0x84c=[{"to":2146,"type":"c"}]
0x856=[{"to":2146,"type":"c"}]
0x874=[{"to":2000,"type":"C"}]
0x889=[{"to":2226,"type":"c"}]
0x893=[{"to":2214,"type":"c"}]
0x89e=[{"to":1920,"type":"C"}]
0x8a6=[{"to":2016,"type":"C"}]
0x8c4=[{"to":2080,"type":"c"}]
0x8d4=[{"to":2000,"type":"C"}]
0x8f4=[{"to":31,"type":"d"}]
0x8fa=[{"to":0,"type":"d"}]
0x8fc=[{"to":1632,"type":"C"}]
0x90b=[{"to":1904,"type":"C"}]
0x91d=[{"to":2340,"type":"c"}]
0x91f=[{"to":5376,"type":"C"}]
0x930=[{"to":2000,"type":"C"}]
0x976=[{"to":0,"type":"d"}]
0x978=[{"to":1680,"type":"C"}]
0x984=[{"to":1792,"type":"C"}]
0x98c=[{"to":1888,"type":"C"}]
0x9b9=[{"to":1888,"type":"C"}]
0x9ef=[{"to":1616,"type":"C"}]
0x9f9=[{"to":2489,"type":"c"}]
0xa05=[{"to":1760,"type":"C"}]
0xa21=[{"to":1648,"type":"C"}]
0xa3d=[{"to":1648,"type":"C"}]
0xa59=[{"to":1648,"type":"C"}]
0xa75=[{"to":1648,"type":"C"}]
0xa8e=[{"to":1648,"type":"C"}]
0xaa7=[{"to":1648,"type":"C"}]
0xac0=[{"to":1648,"type":"C"}]
0xad9=[{"to":1648,"type":"C"}]
0xaf2=[{"to":1648,"type":"C"}]
0xb0e=[{"to":1648,"type":"C"}]
0xb2a=[{"to":1648,"type":"C"}]
0xb46=[{"to":1648,"type":"C"}]
0xb62=[{"to":1648,"type":"C"}]
0xb74=[{"to":1760,"type":"C"}]
0xb87=[{"to":2958,"type":"c"}]
0xb89=[{"to":5376,"type":"C"}]
0xb9a=[{"to":2000,"type":"C"}]
0xbb8=[{"to":0,"type":"d"}]
0xbba=[{"to":2,"type":"d"}]
0xbbc=[{"to":0,"type":"d"}]
0xbbf=[{"to":1840,"type":"C"}]
0xbcf=[{"to":0,"type":"d"}]
0xbd1=[{"to":2,"type":"d"}]
0xbd3=[{"to":0,"type":"d"}]
0xbd6=[{"to":1840,"type":"C"}]
0xbe1=[{"to":127,"type":"d"}]
0xbe3=[{"to":1712,"type":"C"}]
0xbf6=[{"to":3069,"type":"c"}]
0xbf8=[{"to":5376,"type":"C"}]
0xc09=[{"to":2000,"type":"C"}]
0xc30=[{"to":1648,"type":"C"}]
0xc38=[{"to":2253,"type":"C"}]
0xc44=[{"to":3180,"type":"c"}]
0xc4a=[{"to":3180,"type":"c"}]
0xc64=[{"to":1648,"type":"C"}]
0xc70=[{"to":3192,"type":"c"}]
0xc76=[{"to":3110,"type":"c"}]
0xc85=[{"to":3212,"type":"c"}]
0xc87=[{"to":5376,"type":"C"}]
0xc98=[{"to":2000,"type":"C"}]
0xccd=[{"to":1648,"type":"C"}]
0xcd5=[{"to":2253,"type":"C"}]
0xce1=[{"to":3337,"type":"c"}]
0xce7=[{"to":3337,"type":"c"}]
0xd01=[{"to":1648,"type":"C"}]
0xd0d=[{"to":3349,"type":"c"}]
0xd13=[{"to":3267,"type":"c"}]
0xd15=[{"to":3074,"type":"C"}]
0xd20=[{"to":0,"type":"d"}]
0xd22=[{"to":1680,"type":"C"}]
0xd2e=[{"to":1792,"type":"C"}]
0xd3a=[{"to":3394,"type":"c"}]
0xd40=[{"to":3406,"type":"c"}]
0xd46=[{"to":3505,"type":"c"}]
0xd4c=[{"to":3505,"type":"c"}]
0xd4e=[{"to":1888,"type":"C"}]
0xd80=[{"to":1888,"type":"C"}]
0xdac=[{"to":3713,"type":"c"}]
0xdb5=[{"to":3517,"type":"c"}]
0xdbb=[{"to":3529,"type":"c"}]
0xdc1=[{"to":3625,"type":"c"}]
0xdc7=[{"to":3625,"type":"c"}]
0xdc9=[{"to":1888,"type":"C"}]
0xdf5=[{"to":1888,"type":"C"}]
0xe27=[{"to":3713,"type":"c"}]
0xe29=[{"to":1888,"type":"C"}]
0xe55=[{"to":1888,"type":"C"}]
0xe91=[{"to":3789,"type":"c"}]
0xea5=[{"to":1872,"type":"C"}]
0xeb8=[{"to":46,"type":"d"}]
0xeba=[{"to":3785,"type":"c"}]
0xebf=[{"to":0,"type":"d"}]
0xec1=[{"to":1696,"type":"C"}]
0xed3=[{"to":1808,"type":"C"}]
0xee2=[{"to":3731,"type":"c"}]
0xee8=[{"to":3826,"type":"c"}]
0xef0=[{"to":3848,"type":"c"}]
0xef6=[{"to":4108,"type":"c"}]
0xf02=[{"to":4108,"type":"c"}]
0xf19=[{"to":1648,"type":"C"}]
0xf27=[{"to":100,"type":"d"}]
0xf48=[{"to":1648,"type":"C"}]
0xf61=[{"to":1648,"type":"C"}]
0xf6c=[{"to":369,"type":"d"}]
0xf7=[{"to":279,"type":"c"}]
0xf71=[{"to":1744,"type":"C"}]
0xf8d=[{"to":1856,"type":"C"}]
0xf9c=[{"to":4033,"type":"c"}]
0xfaf=[{"to":1648,"type":"C"}]
0xfba=[{"to":105,"type":"d"}]
0xfbc=[{"to":1776,"type":"C"}]
0xfc=[{"to":283,"type":"c"}]
0xfc7=[{"to":44,"type":"d"}]
0xfcd=[{"to":1664,"type":"C"}]
0xfd8=[{"to":368,"type":"d"}]
0xfe0=[{"to":0,"type":"d"}]
0xfe2=[{"to":1632,"type":"C"}]
0xff4=[{"to":1760,"type":"C"}]

/core/analysis/zigns

/core/analysis/zigns/spaces
name=zs
spacestack=["*"]

/core/analysis/zigns/spaces/spaces

/core/config
analysis.arch=x86
analysis.armthumb=false
analysis.autoname=false
analysis.bb.maxsize=512K
analysis.brokenrefs=false
analysis.calls=false
analysis.cpp.abi=itanium
analysis.cpu=x86
analysis.datarefs=false
analysis.delay=true
analysis.depth=64
analysis.detectwrites=false
analysis.endsize=true
analysis.esil=false
analysis.fcnprefix=fcn
analysis.from=0xffffffffffffffff
analysis.gp=0
analysis.gpfixed=true
analysis.graph_depth=256
analysis.hasnext=false
analysis.hpskip=false
analysis.ignbithints=false
analysis.in=io.maps.x
analysis.jmp.above=true
analysis.jmp.after=true
analysis.jmp.cref=false
analysis.jmp.indir=false
analysis.jmp.mid=true
analysis.jmp.ref=true
analysis.jmp.retpoline=true
analysis.jmp.tailcall=0
analysis.jmp.tbl=true
analysis.jmp.tblmax=512
analysis.limits=false
analysis.loads=false
analysis.nonull=0
analysis.nopskip=true
analysis.norevisit=false
analysis.ptrdepth=3
analysis.pushret=false
analysis.recont=false
analysis.refstr=false
analysis.rnr=false
analysis.roregs=gp,zero
analysis.sleep=0
analysis.strings=false
analysis.timeout=0
analysis.to=0xffffffffffffffff
analysis.trycatch=false
analysis.types.constraint=false
analysis.types.spec=gcc
analysis.types.verbose=false
analysis.vars=true
analysis.vars.stackname=false
analysis.verbose=false
analysis.vinfun=true
analysis.vinfunrange=false
asm.analysis=false
asm.arch=x86
asm.bb.line=false
asm.bb.middle=true
asm.bits=32
asm.bytes=false
asm.bytes.right=false
asm.bytes.space=false
asm.calls=true
asm.capitalize=false
asm.cmt.col=35
asm.cmt.esil=false
asm.cmt.flgrefs=true
asm.cmt.off=nodup
asm.cmt.patch=false
asm.cmt.refs=false
asm.cmt.right=true
asm.comments=true
asm.cpu=x86
asm.cycles=false
asm.cyclespace=false
asm.decode=false
asm.decoff=false
asm.demangle=true
asm.describe=false
asm.dwarf=true
asm.dwarf.abspath=false
asm.dwarf.file=true
asm.emu=false
asm.esil=false
asm.family=false
asm.fcn.signature=true
asm.fcn.size=false
asm.flags=true
asm.flags.inbytes=false
asm.flags.inline=false
asm.flags.limit=0
asm.flags.maxname=0
asm.flags.middle=2
asm.flags.offset=false
asm.flags.real=1
asm.functions=true
asm.hint.call=true
asm.hint.call.indirect=true
asm.hint.cdiv=false
asm.hint.emu=false
asm.hint.jmp=false
asm.hint.lea=false
asm.hint.pos=1
asm.hints=true
asm.imm.arm=0
asm.imm.str=true
asm.imm.trim=false
asm.indent=false
asm.indentspace=2
asm.instr=true
asm.invhex=false
asm.lbytes=true
asm.lines=true
asm.lines.bb=true
asm.lines.call=false
asm.lines.fcn=true
asm.lines.maxref=0
asm.lines.out=true
asm.lines.ret=false
asm.lines.right=false
asm.lines.wide=false
asm.lines.width=7
asm.marks=false
asm.meta=true
asm.midcursor=false
asm.middle=false
asm.minicols=false
asm.nbytes=10
asm.nodup=false
asm.noisy=true
asm.offset=true
asm.optype=false
asm.os=linux
asm.parser=x86.pseudo
asm.payloads=false
asm.pcalign=0
asm.pseudo=0
asm.refptr=false
asm.reloff=false
asm.reloff.flags=false
asm.section=false
asm.section.col=30
asm.section.name=true
asm.section.perm=false
asm.seggrn=4
asm.segoff=false
asm.size=false
asm.slow=true
asm.stackptr=false
asm.sub.jmp=true
asm.sub.names=true
asm.sub.reg=false
asm.sub.rel=true
asm.sub.section=false
asm.sub.tail=false
asm.sub.var=true
asm.sub.varmin=256
asm.sub.varonly=true
asm.symbol=false
asm.symbol.col=40
asm.syntax=intel
asm.tabs=8
asm.tabs.off=5
asm.tabs.once=true
asm.trace=false
asm.tracespace=false
asm.types=1
asm.ucase=false
asm.usercomments=false
asm.var=true
asm.var.access=false
asm.var.summary=0
asm.xrefs=false
asm.xrefs.code=true
asm.xrefs.fold=5
asm.xrefs.max=20
bin.at=false
bin.b64str=false
bin.baddr=0
bin.classes=true
bin.dbginfo=true
bin.debase64=false
bin.demangle=true
bin.demangle.libs=false
bin.filter=true
bin.hashlimit=10M
bin.laddr=0
bin.lang=c
bin.libs=false
bin.maxstr=0
bin.maxstrbuf=0x00a00000
bin.minstr=0
bin.rawstr=false
bin.relocs=true
bin.str.enc=guess
bin.strings=true
bin.useldr=true
bin.usextr=true
bin.verbose=false
cfg.bigendian=false
cfg.cpuaffinity=0
cfg.debug=false
cfg.editor=vi
cfg.fortunes=true
cfg.fortunes.clippy=false
cfg.fortunes.file=tips
cfg.newtab=false
cfg.oldshell=false
cfg.oldshell.autocompletion=true
cfg.plugins=true
cfg.prefixdump=dump
cfg.seek.histsize=63
cfg.seek.silent=false
cfg.user=pid23040
cfg.wseek=false
cmd.demangle=false
cmd.depth=10
cmd.hitinfo=1
cmd.repeat=false
dbg.aftersyscall=true
dbg.backend=native
dbg.bep=loader
dbg.bpinmaps=true
dbg.bpsize=1
dbg.bpsysign=false
dbg.btalgo=fuzzy
dbg.btdepth=128
dbg.clone=false
dbg.consbreak=false
dbg.create_new_console=true
dbg.execs=false
dbg.exitkills=true
dbg.follow=32
dbg.follow.child=false
dbg.forks=false
dbg.funcarg=false
dbg.gdb.page_size=0x00001000
dbg.gdb.retries=10
dbg.glibc.fastbinmax=10
dbg.glibc.fc_offset=640
dbg.glibc.ma_offset=0
dbg.glibc.tcache=true
dbg.hwbp=0
dbg.malloc=glibc
dbg.rebase=true
dbg.skipover=false
dbg.slow=false
dbg.status=false
dbg.swstep=false
dbg.threads=false
dbg.trace=0
dbg.trace.inrange=false
dbg.trace.libs=true
dbg.trace.tag=0
dbg.trace_continue=1
dbg.verbose=true
diff.bare=false
diff.from=0
diff.levenstein=false
diff.sort=addr
diff.to=0
dir.depth=10
dir.home=/home/huydai
dir.magic=/tmp/.mount_CutteryUBcbB/usr/share/rizin/0.3.0/magic
dir.plugins=/tmp/.mount_CutteryUBcbB/usr/share/rizin/plugins
dir.prefix=/tmp/.mount_CutteryUBcbB/usr
dir.projects=~/.local/share/rizin/projects
dir.types=/usr/include
dir.zigns=~/.local/share/rizin/zigns
elf.checks.sections=true
elf.checks.segments=true
elf.load.sections=true
emu.lazy=false
emu.pre=false
emu.skip=ds
emu.ssa=false
emu.stack=false
emu.str=0
emu.str.flag=true
emu.str.inv=true
emu.str.lea=true
emu.str.off=false
emu.write=false
esil.addr.size=64
esil.breakoninvalid=true
esil.exectrap=false
esil.gotolimit=0x00001000
esil.iotrap=true
esil.nonull=false
esil.prestep=true
esil.romem=false
esil.stack.addr=0x00100000
esil.stack.depth=256
esil.stack.pattern=0
esil.stack.size=0x000f0000
esil.stats=false
esil.timeout=0
esil.verbose=0
file.info=true
file.lastpath=/home/huydai/Documents/general_ctf_2021/hack_the_box_ ctfs/racecar/racecar
file.loadalign=0x00000400
file.openmany=1
file.path=/home/huydai/Documents/general_ctf_2021/hack_the_box_ ctfs/racecar/racecar
file.type=elf
ghidra.cmt.cpp=true
ghidra.cmt.indent=4
ghidra.indent=4
ghidra.linelen=120
ghidra.maximplref=2
ghidra.nl.brace=false
ghidra.nl.else=false
ghidra.rawptr=true
ghidra.sleighhome=/tmp/.mount_CutteryUBcbB/usr/share/rizin/plugins/rz_ghidra_sleigh
ghidra.verbose=true
graph.aeab=false
graph.body=true
graph.bubble=false
graph.bytes=false
graph.cmtright=false
graph.comments=true
graph.dotted=false
graph.dummy=true
graph.edges=2
graph.few=false
graph.font=Courier
graph.from=0xffffffffffffffff
graph.gv.current=false
graph.gv.format=gif
graph.hints=true
graph.invscroll=false
graph.json.usenames=true
graph.layout=0
graph.linemode=1
graph.nodejmps=true
graph.ntitles=true
graph.offset=false
graph.refs=false
graph.scroll=5
graph.to=0xffffffffffffffff
graph.trace=false
hex.align=false
hex.ascii=true
hex.bytes=true
hex.cols=16
hex.comments=true
hex.compact=false
hex.depth=5
hex.flagsz=0
hex.hdroff=false
hex.header=true
hex.offset=true
hex.onechar=false
hex.pairs=0
hex.section=false
hex.stride=0
hex.style=false
http.auth=false
http.bind=localhost
http.browser=xdg-open
http.colon=false
http.cors=false
http.dietime=0
http.dirlist=false
http.homeroot=~/.local/share/rizin/www
http.index=index.html
http.log=true
http.maxport=9999
http.maxsize=0
http.port=9090
http.root=/tmp/.mount_CutteryUBcbB/usr/share/rizin/0.3.0/www
http.timeout=3
http.upget=false
http.upload=false
http.uproot=/tmp
http.verbose=false
io.0xff=255
io.aslr=false
io.autofd=true
io.cache=false
io.cache.auto=false
io.cache.read=false
io.cache.write=false
io.exec=true
io.ff=true
io.pava=false
io.pcache=false
io.pcache.read=false
io.pcache.write=false
io.unalloc=false
io.unalloc.ch=.
io.va=1
jsdec.asm=false
jsdec.blocks=false
jsdec.casts=false
jsdec.debug=false
jsdec.highlight=default
jsdec.paddr=false
jsdec.slow=false
jsdec.theme=default
jsdec.xrefs=false
log.colors=false
log.events=false
log.level=4
log.srcinfo=false
log.traplevel=6
magic.depth=100
pdb.autoload=0
pdb.extract=1
pdb.server=https://msdl.microsoft.com/download/symbols
pdb.symstore=/home/huydai/.local/share/rizin/pdb
pdb.useragent=Microsoft-Symbol-Server/6.11.0001.402
prj.compress=false
rap.loop=true
rop.comments=false
rop.conditional=false
rop.db=true
rop.len=5
rop.sdb=false
rop.subchains=false
scr.bgfill=false
scr.breaklines=false
scr.color=0
scr.color.args=true
scr.color.bytes=true
scr.color.grep=false
scr.color.ops=true
scr.color.pipe=false
scr.columns=0
scr.confirmquit=false
scr.dumpcols=false
scr.echo=false
scr.feedback=1
scr.fgets=false
scr.fix.columns=0
scr.fix.rows=0
scr.flush=false
scr.fps=false
scr.gadgets=true
scr.highlight.grep=false
scr.hist.block=true
scr.histsave=true
scr.html=false
scr.interactive=0
scr.last=true
scr.linesleep=0
scr.maxtab=0x00001000
scr.nkey=flag
scr.null=false
scr.pagesize=1
scr.panelborder=false
scr.prompt=true
scr.prompt.file=false
scr.prompt.flag=false
scr.prompt.mode=false
scr.prompt.popup=false
scr.prompt.sect=false
scr.prompt.vi=false
scr.rainbow=false
scr.randpal=false
scr.responsive=false
scr.rows=0
scr.scrollbar=0
scr.slow=true
scr.square=true
scr.strconv=asciiesc
scr.utf8=true
scr.utf8.curvy=false
scr.wheel=true
scr.wheel.nkey=false
scr.wheel.speed=4
scr.wideoff=false
search.align=0
search.chunk=0
search.contiguous=true
search.distance=0
search.esilcombo=8
search.flags=false
search.from=0xffffffffffffffff
search.in=io.maps
search.kwidx=0
search.maxhits=0
search.overlap=false
search.prefix=hit
search.show=true
search.to=0xffffffffffffffff
stack.anotated=false
stack.bytes=true
stack.delta=0
stack.reg=SP
stack.size=64
str.escbslash=false
tcp.islocal=false
time.fmt=%Y-%m-%d %H:%M:%S %z
time.zone=0
zign.autoload=false
zign.diff.bthresh=1.0
zign.diff.gthresh=1.0
zign.match.bytes=true
zign.match.graph=true
zign.match.hash=true
zign.match.offset=false
zign.match.refs=true
zign.match.types=false
zign.maxsz=500
zign.mincc=10
zign.minsz=16
zign.prefix=sign
zign.threshold=0.0
zoom.byte=h
zoom.from=0
zoom.in=io.map
zoom.maxsz=512
zoom.to=0

/core/file
absolute=/home/huydai/Documents/general_ctf_2021/hack_the_box_ ctfs/racecar/racecar
raw=/home/huydai/Documents/general_ctf_2021/hack_the_box_ ctfs/racecar/racecar
relative=racecar

/core/flags
base=0
realnames=1

/core/flags/flags
entry.fini0={"realname":"entry.fini0","demangled":false,"offset":2160,"size":1,"space":"symbols"}
entry.init0={"realname":"entry.init0","demangled":false,"offset":2240,"size":9,"space":"symbols"}
entry0={"realname":"entry0","demangled":false,"offset":1936,"size":49,"space":"symbols"}
fcn.00000788={"realname":"fcn.00000788","demangled":false,"offset":1928,"size":6,"space":"functions"}
fcn.000007c2={"realname":"fcn.000007c2","demangled":false,"offset":1986,"size":4,"space":"functions"}
loc.__GNU_EH_FRAME_HDR={"realname":"__GNU_EH_FRAME_HDR","demangled":false,"offset":7548,"size":0,"space":"symbols"}
loc.__bss_start={"realname":"__bss_start","demangled":false,"offset":16400,"size":0,"space":"symbols"}
loc.__data_start={"realname":"__data_start","demangled":false,"offset":16384,"size":0,"space":"symbols"}
loc.__init_array_end={"realname":"__init_array_end","demangled":false,"offset":16016,"size":0,"space":"symbols"}
loc.__init_array_start={"realname":"__init_array_start","demangled":false,"offset":16012,"size":0,"space":"symbols"}
loc._edata={"realname":"_edata","demangled":false,"offset":16400,"size":0,"space":"symbols"}
loc._end={"realname":"_end","demangled":false,"offset":16404,"size":0,"space":"symbols"}
loc.data_start={"realname":"data_start","demangled":false,"offset":16384,"size":0,"space":"symbols"}
loc.imp._ITM_deregisterTMCloneTable={"realname":"_ITM_deregisterTMCloneTable","demangled":false,"offset":0,"size":78,"space":"imports"}
loc.imp._ITM_registerTMCloneTable={"realname":"_ITM_registerTMCloneTable","demangled":false,"offset":0,"size":16,"space":"imports"}
loc.imp.__gmon_start={"realname":"__gmon_start__","demangled":false,"offset":0,"size":16,"space":"imports"}
main={"realname":"main","demangled":false,"offset":5089,"size":168,"space":"symbols"}
obj._DYNAMIC={"realname":"_DYNAMIC","demangled":false,"offset":16020,"size":0,"space":"symbols"}
obj._GLOBAL_OFFSET_TABLE={"realname":"_GLOBAL_OFFSET_TABLE_","demangled":false,"offset":16268,"size":0,"space":"symbols"}
obj._IO_stdin_used={"realname":"_IO_stdin_used","demangled":false,"offset":5420,"size":4,"space":"symbols"}
obj.__FRAME_END={"realname":"__FRAME_END__","demangled":false,"offset":8216,"size":0,"space":"symbols"}
obj.__TMC_END={"realname":"__TMC_END__","demangled":false,"offset":16400,"size":0,"space":"symbols"}
obj.__do_global_dtors_aux_fini_array_entry={"realname":"__do_global_dtors_aux_fini_array_entry","demangled":false,"offset":16016,"size":0,"space":"symbols"}
obj.__dso_handle={"realname":"__dso_handle","demangled":false,"offset":16388,"size":0,"space":"symbols"}
obj.__frame_dummy_init_array_entry={"realname":"__frame_dummy_init_array_entry","demangled":false,"offset":16012,"size":0,"space":"symbols"}
obj._fp_hw={"realname":"_fp_hw","demangled":false,"offset":5416,"size":4,"space":"symbols"}
obj.check={"realname":"check","demangled":false,"offset":16396,"size":4,"space":"symbols"}
obj.coins={"realname":"coins","demangled":false,"offset":16392,"size":4,"space":"symbols"}
obj.completed.7283={"realname":"completed.7283","demangled":false,"offset":16400,"size":1,"space":"symbols"}
obj.imp.stdin={"realname":"stdin","demangled":false,"offset":0,"size":16,"space":"imports"}
obj.imp.stdout={"realname":"stdout","demangled":false,"offset":0,"size":16,"space":"imports"}
reloc._ITM_deregisterTMCloneTable={"realname":"_ITM_deregisterTMCloneTable","demangled":false,"offset":16356,"size":4,"space":"relocs"}
reloc._ITM_registerTMCloneTable={"realname":"_ITM_registerTMCloneTable","demangled":false,"offset":16380,"size":4,"space":"relocs"}
reloc.__cxa_finalize={"realname":"__cxa_finalize","demangled":false,"offset":16360,"size":4,"space":"relocs"}
reloc.__gmon_start={"realname":"__gmon_start__","demangled":false,"offset":16364,"size":4,"space":"relocs"}
reloc.__libc_start_main={"realname":"__libc_start_main","demangled":false,"offset":16332,"size":4,"space":"relocs"}
reloc.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":16308,"size":4,"space":"relocs"}
reloc.alarm={"realname":"alarm","demangled":false,"offset":16304,"size":4,"space":"relocs"}
reloc.atoi={"realname":"atoi","demangled":false,"offset":16352,"size":4,"space":"relocs"}
reloc.exit={"realname":"exit","demangled":false,"offset":16320,"size":4,"space":"relocs"}
reloc.fgets={"realname":"fgets","demangled":false,"offset":16292,"size":4,"space":"relocs"}
reloc.fopen={"realname":"fopen","demangled":false,"offset":16340,"size":4,"space":"relocs"}
reloc.malloc={"realname":"malloc","demangled":false,"offset":16312,"size":4,"space":"relocs"}
reloc.printf={"realname":"printf","demangled":false,"offset":16288,"size":4,"space":"relocs"}
reloc.putchar={"realname":"putchar","demangled":false,"offset":16344,"size":4,"space":"relocs"}
reloc.puts={"realname":"puts","demangled":false,"offset":16316,"size":4,"space":"relocs"}
reloc.rand={"realname":"rand","demangled":false,"offset":16348,"size":4,"space":"relocs"}
reloc.read={"realname":"read","demangled":false,"offset":16284,"size":4,"space":"relocs"}
reloc.setvbuf={"realname":"setvbuf","demangled":false,"offset":16336,"size":4,"space":"relocs"}
reloc.sleep={"realname":"sleep","demangled":false,"offset":16300,"size":4,"space":"relocs"}
reloc.srand={"realname":"srand","demangled":false,"offset":16324,"size":4,"space":"relocs"}
reloc.stdin={"realname":"stdin","demangled":false,"offset":16368,"size":4,"space":"relocs"}
reloc.stdout={"realname":"stdout","demangled":false,"offset":16372,"size":4,"space":"relocs"}
reloc.strcmp={"realname":"strcmp","demangled":false,"offset":16280,"size":4,"space":"relocs"}
reloc.strlen={"realname":"strlen","demangled":false,"offset":16328,"size":4,"space":"relocs"}
reloc.target._ITM_deregisterTMCloneTable={"realname":"_ITM_deregisterTMCloneTable","demangled":false,"offset":16504,"size":4,"space":"relocs"}
reloc.target._ITM_registerTMCloneTable={"realname":"_ITM_registerTMCloneTable","demangled":false,"offset":16524,"size":4,"space":"relocs"}
reloc.target.__cxa_finalize={"realname":"__cxa_finalize","demangled":false,"offset":16508,"size":4,"space":"relocs"}
reloc.target.__gmon_start={"realname":"__gmon_start__","demangled":false,"offset":16512,"size":4,"space":"relocs"}
reloc.target.__libc_start_main={"realname":"__libc_start_main","demangled":false,"offset":16464,"size":4,"space":"relocs"}
reloc.target.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":16440,"size":4,"space":"relocs"}
reloc.target.alarm={"realname":"alarm","demangled":false,"offset":16436,"size":4,"space":"relocs"}
reloc.target.atoi={"realname":"atoi","demangled":false,"offset":16484,"size":4,"space":"relocs"}
reloc.target.exit={"realname":"exit","demangled":false,"offset":16452,"size":4,"space":"relocs"}
reloc.target.fgets={"realname":"fgets","demangled":false,"offset":16424,"size":4,"space":"relocs"}
reloc.target.fopen={"realname":"fopen","demangled":false,"offset":16472,"size":4,"space":"relocs"}
reloc.target.malloc={"realname":"malloc","demangled":false,"offset":16444,"size":4,"space":"relocs"}
reloc.target.printf={"realname":"printf","demangled":false,"offset":16420,"size":4,"space":"relocs"}
reloc.target.putchar={"realname":"putchar","demangled":false,"offset":16476,"size":4,"space":"relocs"}
reloc.target.puts={"realname":"puts","demangled":false,"offset":16448,"size":4,"space":"relocs"}
reloc.target.rand={"realname":"rand","demangled":false,"offset":16480,"size":4,"space":"relocs"}
reloc.target.read={"realname":"read","demangled":false,"offset":16416,"size":4,"space":"relocs"}
reloc.target.setvbuf={"realname":"setvbuf","demangled":false,"offset":16468,"size":4,"space":"relocs"}
reloc.target.sleep={"realname":"sleep","demangled":false,"offset":16432,"size":4,"space":"relocs"}
reloc.target.srand={"realname":"srand","demangled":false,"offset":16456,"size":4,"space":"relocs"}
reloc.target.stdin={"realname":"stdin","demangled":false,"offset":16516,"size":4,"space":"relocs"}
reloc.target.stdout={"realname":"stdout","demangled":false,"offset":16520,"size":4,"space":"relocs"}
reloc.target.strcmp={"realname":"strcmp","demangled":false,"offset":16412,"size":4,"space":"relocs"}
reloc.target.strlen={"realname":"strlen","demangled":false,"offset":16460,"size":4,"space":"relocs"}
reloc.target.time={"realname":"time","demangled":false,"offset":16428,"size":4,"space":"relocs"}
reloc.time={"realname":"time","demangled":false,"offset":16296,"size":4,"space":"relocs"}
section.={"realname":"section.","demangled":false,"offset":0,"size":0,"space":"sections"}
section..bss={"realname":"section..bss","demangled":false,"offset":16400,"size":4,"space":"sections"}
section..comment={"realname":"section..comment","demangled":false,"offset":0,"size":41,"space":"sections"}
section..data={"realname":"section..data","demangled":false,"offset":16384,"size":16,"space":"sections"}
section..dynamic={"realname":"section..dynamic","demangled":false,"offset":16020,"size":248,"space":"sections"}
section..dynstr={"realname":"section..dynstr","demangled":false,"offset":892,"size":299,"space":"sections"}
section..dynsym={"realname":"section..dynsym","demangled":false,"offset":460,"size":432,"space":"sections"}
section..eh_frame={"realname":"section..eh_frame","demangled":false,"offset":7672,"size":548,"space":"sections"}
section..eh_frame_hdr={"realname":"section..eh_frame_hdr","demangled":false,"offset":7548,"size":124,"space":"sections"}
section..fini={"realname":"section..fini","demangled":false,"offset":5396,"size":20,"space":"sections"}
section..fini_array={"realname":"section..fini_array","demangled":false,"offset":16016,"size":4,"space":"sections"}
section..gnu.hash={"realname":"section..gnu.hash","demangled":false,"offset":428,"size":32,"space":"sections"}
section..gnu.version={"realname":"section..gnu.version","demangled":false,"offset":1192,"size":54,"space":"sections"}
section..gnu.version_r={"realname":"section..gnu.version_r","demangled":false,"offset":1248,"size":80,"space":"sections"}
section..got={"realname":"section..got","demangled":false,"offset":16268,"size":116,"space":"sections"}
section..init={"realname":"section..init","demangled":false,"offset":1560,"size":35,"space":"sections"}
section..init_array={"realname":"section..init_array","demangled":false,"offset":16012,"size":4,"space":"sections"}
section..interp={"realname":"section..interp","demangled":false,"offset":340,"size":19,"space":"sections"}
section..note.ABI_tag={"realname":"section..note.ABI_tag","demangled":false,"offset":360,"size":32,"space":"sections"}
section..note.gnu.build_id={"realname":"section..note.gnu.build_id","demangled":false,"offset":392,"size":36,"space":"sections"}
section..plt={"realname":"section..plt","demangled":false,"offset":1600,"size":320,"space":"sections"}
section..plt.got={"realname":"section..plt.got","demangled":false,"offset":1920,"size":16,"space":"sections"}
section..rel.dyn={"realname":"section..rel.dyn","demangled":false,"offset":1328,"size":80,"space":"sections"}
section..rel.plt={"realname":"section..rel.plt","demangled":false,"offset":1408,"size":152,"space":"sections"}
section..rodata={"realname":"section..rodata","demangled":false,"offset":5416,"size":2129,"space":"sections"}
section..shstrtab={"realname":"section..shstrtab","demangled":false,"offset":0,"size":252,"space":"sections"}
section..strtab={"realname":"section..strtab","demangled":false,"offset":0,"size":971,"space":"sections"}
section..symtab={"realname":"section..symtab","demangled":false,"offset":0,"size":1536,"space":"sections"}
section..text={"realname":"section..text","demangled":false,"offset":1936,"size":3460,"space":"sections"}
segment.DYNAMIC={"realname":"segment.DYNAMIC","demangled":false,"offset":16020,"size":248,"space":"segments"}
segment.GNU_EH_FRAME={"realname":"segment.GNU_EH_FRAME","demangled":false,"offset":7548,"size":124,"space":"segments"}
segment.GNU_RELRO={"realname":"segment.GNU_RELRO","demangled":false,"offset":16012,"size":372,"space":"segments"}
segment.GNU_STACK={"realname":"segment.GNU_STACK","demangled":false,"offset":0,"size":0,"space":"segments"}
segment.INTERP={"realname":"segment.INTERP","demangled":false,"offset":340,"size":19,"space":"segments"}
segment.LOAD0={"realname":"segment.LOAD0","demangled":false,"offset":0,"size":8220,"space":"segments"}
segment.LOAD1={"realname":"segment.LOAD1","demangled":false,"offset":16012,"size":392,"space":"segments"}
segment.NOTE={"realname":"segment.NOTE","demangled":false,"offset":360,"size":68,"space":"segments"}
segment.PHDR={"realname":"segment.PHDR","demangled":false,"offset":52,"size":288,"space":"segments"}
segment.ehdr={"realname":"segment.ehdr","demangled":false,"offset":0,"size":52,"space":"segments"}
str.={"realname":"str.","demangled":false,"offset":7088,"size":110,"space":"strings"}
str.1._Car_info__2._Car_selection={"realname":"str.1._Car_info__2._Car_selection","demangled":false,"offset":7512,"size":33,"space":"strings"}
str.Acceleration_:__s__________s__________s_______s={"realname":"str.Acceleration_:__s__________s__________s_______s","demangled":false,"offset":7432,"size":51,"space":"strings"}
str.Acceleration_:__s__________s_______s={"realname":"str.Acceleration_:__s__________s_______s","demangled":false,"offset":7260,"size":40,"space":"strings"}
str.Car__1_stats:={"realname":"str.Car__1_stats:","demangled":false,"offset":7198,"size":22,"space":"strings"}
str.Car__2_stats:={"realname":"str.Car__2_stats:","demangled":false,"offset":7351,"size":21,"space":"strings"}
str.Current_coins:___d={"realname":"str.Current_coins:___d","demangled":false,"offset":7062,"size":26,"space":"strings"}
str.Current_coins:___d__s={"realname":"str.Current_coins:___d__s","demangled":false,"offset":6595,"size":27,"space":"strings"}
str.Do_you_have_anything_to_say_to_the_press_after_your_big_victory______s={"realname":"str.Do_you_have_anything_to_say_to_the_press_after_your_big_victory______s","demangled":false,"offset":6628,"size":75,"space":"strings"}
str.Handling_:______s__________s__________s_______s={"realname":"str.Handling_:______s__________s__________s_______s","demangled":false,"offset":7300,"size":51,"space":"strings"}
str.Handling_:______s_______s={"realname":"str.Handling_:______s_______s","demangled":false,"offset":7483,"size":29,"space":"strings"}
str.Name:={"realname":"str.Name:","demangled":false,"offset":6954,"size":7,"space":"strings"}
str.Nickname:={"realname":"str.Nickname:","demangled":false,"offset":6961,"size":11,"space":"strings"}
str.Select_car:__1._______2.={"realname":"str.Select_car:__1._______2.","demangled":false,"offset":6472,"size":29,"space":"strings"}
str.Select_race:__1._Highway_battle__2._Circuit={"realname":"str.Select_race:__1._Highway_battle__2._Circuit","demangled":false,"offset":6396,"size":47,"space":"strings"}
str.Speed_:_________s__________s__________s__________s={"realname":"str.Speed_:_________s__________s__________s__________s","demangled":false,"offset":7376,"size":54,"space":"strings"}
str.Speed_:_________s__________s____s={"realname":"str.Speed_:_________s__________s____s","demangled":false,"offset":7220,"size":37,"space":"strings"}
str.Waiting_for_the_race_to_finish...={"realname":"str.Waiting_for_the_race_to_finish...","demangled":false,"offset":6508,"size":39,"space":"strings"}
str.e_0m={"realname":"str.e_0m","demangled":false,"offset":6622,"size":5,"space":"strings"}
str.e_1_31m={"realname":"str.e_1_31m","demangled":false,"offset":5448,"size":8,"space":"strings"}
str.e_1_32m={"realname":"str.e_1_32m","demangled":false,"offset":5440,"size":8,"space":"strings"}
str.e_1_33m={"realname":"str.e_1_33m","demangled":false,"offset":5424,"size":8,"space":"strings"}
str.e_1_34m={"realname":"str.e_1_34m","demangled":false,"offset":5456,"size":8,"space":"strings"}
str.e_1_35m={"realname":"str.e_1_35m","demangled":false,"offset":5578,"size":8,"space":"strings"}
str.e_1_36m={"realname":"str.e_1_36m","demangled":false,"offset":5432,"size":8,"space":"strings"}
str.e_3mThe_Man__the_Myth__the_Legend__The_grand_winner_of_the_race_wants_the_whole_world_to_know_this:__e_0m={"realname":"str.e_3mThe_Man__the_Myth__the_Legend__The_grand_winner_of_the_race_wants_the_whole_world_to_know_this:__e_0m","demangled":false,"offset":6776,"size":106,"space":"strings"}
str.flag.txt={"realname":"str.flag.txt","demangled":false,"offset":6705,"size":9,"space":"strings"}
str.sInsert_your_data:={"realname":"str.sInsert_your_data:","demangled":false,"offset":6931,"size":23,"space":"strings"}
str.s__I={"realname":"str.s__I","demangled":false,"offset":5964,"size":60,"space":"strings"}
str.s__N={"realname":"str.s__N","demangled":false,"offset":5904,"size":60,"space":"strings"}
str.s____Could_not_open_flag.txt._Please_contact_the_creator.={"realname":"str.s____Could_not_open_flag.txt._Please_contact_the_creator.","demangled":false,"offset":6716,"size":60,"space":"strings"}
str.s____Invalid_choice__s={"realname":"str.s____Invalid_choice__s","demangled":false,"offset":6443,"size":26,"space":"strings"}
str.s____Welcome___s_s_s_______s____Your_name_is___s_s_s__but_everybody_calls_you..___s_s_s={"realname":"str.s____Welcome___s_s_s_______s____Your_name_is___s_s_s__but_everybody_calls_you..___s_s_s","demangled":false,"offset":6972,"size":90,"space":"strings"}
str.s________You_lost_the_race_and_all_your_coins={"realname":"str.s________You_lost_the_race_and_all_your_coins","demangled":false,"offset":6884,"size":47,"space":"strings"}
str.s________You_won_the_race___You_get_100_coins={"realname":"str.s________You_won_the_race___You_get_100_coins","demangled":false,"offset":6548,"size":47,"space":"strings"}
str.s______________.______________________________________s__F={"realname":"str.s______________.______________________________________s__F","demangled":false,"offset":5652,"size":62,"space":"strings"}
str.s______________________.________.__._________________s_xxx={"realname":"str.s______________________.________.__._________________s_xxx","demangled":false,"offset":6088,"size":62,"space":"strings"}
str.s______________________________________________________s__S={"realname":"str.s______________________________________________________s__S","demangled":false,"offset":6024,"size":62,"space":"strings"}
str.s_____________________________________________________s_xxx={"realname":"str.s_____________________________________________________s_xxx","demangled":false,"offset":5716,"size":62,"space":"strings"}
str.s____________________________________________________s__I={"realname":"str.s____________________________________________________s__I","demangled":false,"offset":5780,"size":62,"space":"strings"}
str.s____________________________________________________s_xxx={"realname":"str.s____________________________________________________s_xxx","demangled":false,"offset":6216,"size":62,"space":"strings"}
str.s____________________o________o______________________s__H={"realname":"str.s____________________o________o______________________s__H","demangled":false,"offset":6152,"size":62,"space":"strings"}
str.s_xxx={"realname":"str.s_xxx","demangled":false,"offset":5844,"size":60,"space":"strings"}
sym..bss={"realname":".bss","demangled":false,"offset":16400,"size":0,"space":"symbols.sections"}
sym..comment={"realname":".comment","demangled":false,"offset":0,"size":0,"space":"symbols.sections"}
sym..data={"realname":".data","demangled":false,"offset":16384,"size":0,"space":"symbols.sections"}
sym..dynamic={"realname":".dynamic","demangled":false,"offset":16020,"size":0,"space":"symbols.sections"}
sym..dynstr={"realname":".dynstr","demangled":false,"offset":892,"size":0,"space":"symbols.sections"}
sym..dynsym={"realname":".dynsym","demangled":false,"offset":460,"size":0,"space":"symbols.sections"}
sym..eh_frame={"realname":".eh_frame","demangled":false,"offset":7672,"size":0,"space":"symbols.sections"}
sym..eh_frame_hdr={"realname":".eh_frame_hdr","demangled":false,"offset":7548,"size":0,"space":"symbols.sections"}
sym..fini={"realname":".fini","demangled":false,"offset":5396,"size":0,"space":"symbols.sections"}
sym..fini_array={"realname":".fini_array","demangled":false,"offset":16016,"size":0,"space":"symbols.sections"}
sym..gnu.hash={"realname":".gnu.hash","demangled":false,"offset":428,"size":0,"space":"symbols.sections"}
sym..gnu.version={"realname":".gnu.version","demangled":false,"offset":1192,"size":0,"space":"symbols.sections"}
sym..gnu.version_r={"realname":".gnu.version_r","demangled":false,"offset":1248,"size":0,"space":"symbols.sections"}
sym..got={"realname":".got","demangled":false,"offset":16268,"size":0,"space":"symbols.sections"}
sym..init={"realname":".init","demangled":false,"offset":1560,"size":0,"space":"symbols.sections"}
sym..init_array={"realname":".init_array","demangled":false,"offset":16012,"size":0,"space":"symbols.sections"}
sym..interp={"realname":".interp","demangled":false,"offset":340,"size":0,"space":"symbols.sections"}
sym..note.ABI_tag={"realname":".note.ABI-tag","demangled":false,"offset":360,"size":0,"space":"symbols.sections"}
sym..note.gnu.build_id={"realname":".note.gnu.build-id","demangled":false,"offset":392,"size":0,"space":"symbols.sections"}
sym..plt={"realname":".plt","demangled":false,"offset":1600,"size":0,"space":"symbols.sections"}
sym..plt.got={"realname":".plt.got","demangled":false,"offset":1920,"size":6,"space":"symbols.sections"}
sym..rel.dyn={"realname":".rel.dyn","demangled":false,"offset":1328,"size":0,"space":"symbols.sections"}
sym..rel.plt={"realname":".rel.plt","demangled":false,"offset":1408,"size":0,"space":"symbols.sections"}
sym..rodata={"realname":".rodata","demangled":false,"offset":5416,"size":0,"space":"symbols.sections"}
sym..text={"realname":".text","demangled":false,"offset":1936,"size":0,"space":"symbols.sections"}
sym.__do_global_dtors_aux={"realname":"__do_global_dtors_aux","demangled":false,"offset":2160,"size":71,"space":"symbols"}
sym.__libc_csu_fini={"realname":"__libc_csu_fini","demangled":false,"offset":5360,"size":2,"space":"symbols"}
sym.__libc_csu_init={"realname":"__libc_csu_init","demangled":false,"offset":5264,"size":93,"space":"symbols"}
sym.__stack_chk_fail_local={"realname":"__stack_chk_fail_local","demangled":false,"offset":5376,"size":20,"space":"symbols"}
sym.__x86.get_pc_thunk.bx={"realname":"__x86.get_pc_thunk.bx","demangled":false,"offset":2000,"size":4,"space":"symbols"}
sym.__x86.get_pc_thunk.dx={"realname":"__x86.get_pc_thunk.dx","demangled":false,"offset":2249,"size":4,"space":"symbols"}
sym._fini={"realname":"_fini","demangled":false,"offset":5396,"size":20,"space":"symbols"}
sym._init={"realname":"_init","demangled":false,"offset":1560,"size":35,"space":"symbols"}
sym._start={"realname":"_start","demangled":false,"offset":1936,"size":0,"space":"symbols"}
sym.banner={"realname":"banner","demangled":false,"offset":2345,"size":618,"space":"symbols"}
sym.car_info={"realname":"car_info","demangled":false,"offset":4562,"size":384,"space":"symbols"}
sym.car_menu={"realname":"car_menu","demangled":false,"offset":3217,"size":1009,"space":"symbols"}
sym.deregister_tm_clones={"realname":"deregister_tm_clones","demangled":false,"offset":2016,"size":58,"space":"symbols"}
sym.frame_dummy={"realname":"frame_dummy","demangled":false,"offset":2240,"size":0,"space":"symbols"}
sym.imp.__cxa_finalize={"realname":"__cxa_finalize","demangled":false,"offset":0,"size":16,"space":"imports"}
sym.imp.__libc_start_main={"realname":"__libc_start_main","demangled":false,"offset":1824,"size":6,"space":"imports"}
sym.imp.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":1728,"size":6,"space":"imports"}
sym.imp.alarm={"realname":"alarm","demangled":false,"offset":1712,"size":6,"space":"imports"}
sym.imp.atoi={"realname":"atoi","demangled":false,"offset":1904,"size":6,"space":"imports"}
sym.imp.exit={"realname":"exit","demangled":false,"offset":1776,"size":6,"space":"imports"}
sym.imp.fgets={"realname":"fgets","demangled":false,"offset":1664,"size":6,"space":"imports"}
sym.imp.fopen={"realname":"fopen","demangled":false,"offset":1856,"size":6,"space":"imports"}
sym.imp.malloc={"realname":"malloc","demangled":false,"offset":1744,"size":6,"space":"imports"}
sym.imp.printf={"realname":"printf","demangled":false,"offset":1648,"size":6,"space":"imports"}
sym.imp.putchar={"realname":"putchar","demangled":false,"offset":1872,"size":6,"space":"imports"}
sym.imp.puts={"realname":"puts","demangled":false,"offset":1760,"size":6,"space":"imports"}
sym.imp.rand={"realname":"rand","demangled":false,"offset":1888,"size":6,"space":"imports"}
sym.imp.read={"realname":"read","demangled":false,"offset":1632,"size":6,"space":"imports"}
sym.imp.setvbuf={"realname":"setvbuf","demangled":false,"offset":1840,"size":6,"space":"imports"}
sym.imp.sleep={"realname":"sleep","demangled":false,"offset":1696,"size":6,"space":"imports"}
sym.imp.srand={"realname":"srand","demangled":false,"offset":1792,"size":6,"space":"imports"}
sym.imp.strcmp={"realname":"strcmp","demangled":false,"offset":1616,"size":6,"space":"imports"}
sym.imp.strlen={"realname":"strlen","demangled":false,"offset":1808,"size":6,"space":"imports"}
sym.imp.time={"realname":"time","demangled":false,"offset":1680,"size":6,"space":"imports"}
sym.info={"realname":"info","demangled":false,"offset":4226,"size":336,"space":"symbols"}
sym.main={"realname":"main","demangled":false,"offset":5089,"size":168,"space":"symbols"}
sym.menu={"realname":"menu","demangled":false,"offset":4946,"size":143,"space":"symbols"}
sym.race_type={"realname":"race_type","demangled":false,"offset":3074,"size":143,"space":"symbols"}
sym.read_int={"realname":"read_int","demangled":false,"offset":2253,"size":92,"space":"symbols"}
sym.register_tm_clones={"realname":"register_tm_clones","demangled":false,"offset":2080,"size":71,"space":"symbols"}
sym.setup={"realname":"setup","demangled":false,"offset":2963,"size":111,"space":"symbols"}

/core/flags/spaces
name=fs
spacestack=["*"]

/core/flags/spaces/spaces
classes=s
functions=s
imports=s
platform.ports=s
registers=s
registers.extended=s
registers.mmio=s
relocs=s
search=s
sections=s
segments=s
strings=s
symbols=s
symbols.sections=s

/core/flags/tags
tag.alloc=malloc free$ calloc kalloc realloc
tag.dylib=dlopen dlsym dlclose mmap LoadLibrary GetProcAddress
tag.env=getenv putenv unsetenv setenv GetEnvironmentVariable SetEnvironmentVariable ExpandEnvironmentStrings
tag.fs=open$ close read$ write CloseHandle FindFirstFileW _wfopen _wstat ftruncate lseek _chsize GetFullPathName realpath RemoveDirectory DeleteFile CreateFile WriteFile UnmapViewOfFile CreateFileMapping MapViewOfFile readlink chmod fchmod chown stat fstat lstat fstatat lstat64 stat64 chflags fchflags lchflags
tag.network=socket connect bind$ listen accept sendto recvfrom gethostbyname htons ntohs
tag.process=getpid getppid kill exit abort assert gethostid sethostid sysctl
tag.stdout=^printf puts write
tag.string=strcat strcpy strncpy strlen strtok strstr strlcpy asprintf sprintf snprintf
tag.threads=pthread_create pthread_mutex_init pthread_cond_init CreateThread TerminateThread WaitForSingleObject GetCurrentThreadId
tag.time=settimeofday gettimeofday time adjtime ctime timed date$ sleep Sleep usleep clock_nanosleep localtime asctime difftime gmtime mktime timelocal timegm tzfile tzset

/core/flags/zones
